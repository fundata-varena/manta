// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_gcmessages_server.proto

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EPoorNetworkConditionsType int32

const (
	EPoorNetworkConditionsType_k_EPoorNetworkConditions_None                  EPoorNetworkConditionsType = 0
	EPoorNetworkConditionsType_k_EPoorNetworkConditions_Unknown               EPoorNetworkConditionsType = 1
	EPoorNetworkConditionsType_k_EPoorNetworkConditions_MassDisconnect        EPoorNetworkConditionsType = 2
	EPoorNetworkConditionsType_k_EPoorNetworkConditions_ExcessBadQosIntervals EPoorNetworkConditionsType = 3
)

var EPoorNetworkConditionsType_name = map[int32]string{
	0: "k_EPoorNetworkConditions_None",
	1: "k_EPoorNetworkConditions_Unknown",
	2: "k_EPoorNetworkConditions_MassDisconnect",
	3: "k_EPoorNetworkConditions_ExcessBadQosIntervals",
}
var EPoorNetworkConditionsType_value = map[string]int32{
	"k_EPoorNetworkConditions_None":                  0,
	"k_EPoorNetworkConditions_Unknown":               1,
	"k_EPoorNetworkConditions_MassDisconnect":        2,
	"k_EPoorNetworkConditions_ExcessBadQosIntervals": 3,
}

func (x EPoorNetworkConditionsType) Enum() *EPoorNetworkConditionsType {
	p := new(EPoorNetworkConditionsType)
	*p = x
	return p
}
func (x EPoorNetworkConditionsType) String() string {
	return proto.EnumName(EPoorNetworkConditionsType_name, int32(x))
}
func (x *EPoorNetworkConditionsType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EPoorNetworkConditionsType_value, data, "EPoorNetworkConditionsType")
	if err != nil {
		return err
	}
	*x = EPoorNetworkConditionsType(value)
	return nil
}
func (EPoorNetworkConditionsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor20, []int{0} }

type EAbilityAbuseType int32

const (
	EAbilityAbuseType_k_EAbilityAbuseType_None                         EAbilityAbuseType = 0
	EAbilityAbuseType_k_EAbilityAbuseType_Io_Relocate                  EAbilityAbuseType = 1
	EAbilityAbuseType_k_EAbilityAbuseType_Chen_Test_Of_Faith           EAbilityAbuseType = 2
	EAbilityAbuseType_k_EAbilityAbuseType_Bane_Nightmare               EAbilityAbuseType = 3
	EAbilityAbuseType_k_EAbilityAbuseType_Bloodseeker_Bloodrage        EAbilityAbuseType = 4
	EAbilityAbuseType_k_EAbilityAbuseType_Outworld_Astral_Imprisonment EAbilityAbuseType = 5
	EAbilityAbuseType_k_EAbilityAbuseType_Shadow_Demon_Disruption      EAbilityAbuseType = 6
)

var EAbilityAbuseType_name = map[int32]string{
	0: "k_EAbilityAbuseType_None",
	1: "k_EAbilityAbuseType_Io_Relocate",
	2: "k_EAbilityAbuseType_Chen_Test_Of_Faith",
	3: "k_EAbilityAbuseType_Bane_Nightmare",
	4: "k_EAbilityAbuseType_Bloodseeker_Bloodrage",
	5: "k_EAbilityAbuseType_Outworld_Astral_Imprisonment",
	6: "k_EAbilityAbuseType_Shadow_Demon_Disruption",
}
var EAbilityAbuseType_value = map[string]int32{
	"k_EAbilityAbuseType_None":                         0,
	"k_EAbilityAbuseType_Io_Relocate":                  1,
	"k_EAbilityAbuseType_Chen_Test_Of_Faith":           2,
	"k_EAbilityAbuseType_Bane_Nightmare":               3,
	"k_EAbilityAbuseType_Bloodseeker_Bloodrage":        4,
	"k_EAbilityAbuseType_Outworld_Astral_Imprisonment": 5,
	"k_EAbilityAbuseType_Shadow_Demon_Disruption":      6,
}

func (x EAbilityAbuseType) Enum() *EAbilityAbuseType {
	p := new(EAbilityAbuseType)
	*p = x
	return p
}
func (x EAbilityAbuseType) String() string {
	return proto.EnumName(EAbilityAbuseType_name, int32(x))
}
func (x *EAbilityAbuseType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EAbilityAbuseType_value, data, "EAbilityAbuseType")
	if err != nil {
		return err
	}
	*x = EAbilityAbuseType(value)
	return nil
}
func (EAbilityAbuseType) EnumDescriptor() ([]byte, []int) { return fileDescriptor20, []int{1} }

type EIntentionalFeedingType int32

const (
	EIntentionalFeedingType_k_EIntentionalFeedingType_None                     EIntentionalFeedingType = 0
	EIntentionalFeedingType_k_EIntentionalFeedingType_ExcessiveDeaths          EIntentionalFeedingType = 1
	EIntentionalFeedingType_k_EIntentionalFeedingType_MultipleCourierPurchases EIntentionalFeedingType = 2
	EIntentionalFeedingType_k_EIntentionalFeedingType_MultipleCourierDeaths    EIntentionalFeedingType = 4
	EIntentionalFeedingType_k_EIntentionalFeedingType_LowActivity              EIntentionalFeedingType = 8
	EIntentionalFeedingType_k_EIntentionalFeedingType_LowDamage                EIntentionalFeedingType = 16
	EIntentionalFeedingType_k_EIntentionalFeedingType_HighUnspentGold          EIntentionalFeedingType = 32
	EIntentionalFeedingType_k_EIntentionalFeedingType_SoldTooMuchItemValue     EIntentionalFeedingType = 64
	EIntentionalFeedingType_k_EIntentionalFeedingType_TooManyDroppedItems      EIntentionalFeedingType = 128
	EIntentionalFeedingType_k_EIntentionalFeedingType_ExcessiveTowerDamage     EIntentionalFeedingType = 256
	EIntentionalFeedingType_k_EIntentionalFeedingType_LastHitsDenies           EIntentionalFeedingType = 512
	EIntentionalFeedingType_k_EIntentionalFeedingType_XPPM                     EIntentionalFeedingType = 1024
	EIntentionalFeedingType_k_EIntentionalFeedingType_SuspiciousOrders         EIntentionalFeedingType = 2048
)

var EIntentionalFeedingType_name = map[int32]string{
	0:    "k_EIntentionalFeedingType_None",
	1:    "k_EIntentionalFeedingType_ExcessiveDeaths",
	2:    "k_EIntentionalFeedingType_MultipleCourierPurchases",
	4:    "k_EIntentionalFeedingType_MultipleCourierDeaths",
	8:    "k_EIntentionalFeedingType_LowActivity",
	16:   "k_EIntentionalFeedingType_LowDamage",
	32:   "k_EIntentionalFeedingType_HighUnspentGold",
	64:   "k_EIntentionalFeedingType_SoldTooMuchItemValue",
	128:  "k_EIntentionalFeedingType_TooManyDroppedItems",
	256:  "k_EIntentionalFeedingType_ExcessiveTowerDamage",
	512:  "k_EIntentionalFeedingType_LastHitsDenies",
	1024: "k_EIntentionalFeedingType_XPPM",
	2048: "k_EIntentionalFeedingType_SuspiciousOrders",
}
var EIntentionalFeedingType_value = map[string]int32{
	"k_EIntentionalFeedingType_None":                     0,
	"k_EIntentionalFeedingType_ExcessiveDeaths":          1,
	"k_EIntentionalFeedingType_MultipleCourierPurchases": 2,
	"k_EIntentionalFeedingType_MultipleCourierDeaths":    4,
	"k_EIntentionalFeedingType_LowActivity":              8,
	"k_EIntentionalFeedingType_LowDamage":                16,
	"k_EIntentionalFeedingType_HighUnspentGold":          32,
	"k_EIntentionalFeedingType_SoldTooMuchItemValue":     64,
	"k_EIntentionalFeedingType_TooManyDroppedItems":      128,
	"k_EIntentionalFeedingType_ExcessiveTowerDamage":     256,
	"k_EIntentionalFeedingType_LastHitsDenies":           512,
	"k_EIntentionalFeedingType_XPPM":                     1024,
	"k_EIntentionalFeedingType_SuspiciousOrders":         2048,
}

func (x EIntentionalFeedingType) Enum() *EIntentionalFeedingType {
	p := new(EIntentionalFeedingType)
	*p = x
	return p
}
func (x EIntentionalFeedingType) String() string {
	return proto.EnumName(EIntentionalFeedingType_name, int32(x))
}
func (x *EIntentionalFeedingType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EIntentionalFeedingType_value, data, "EIntentionalFeedingType")
	if err != nil {
		return err
	}
	*x = EIntentionalFeedingType(value)
	return nil
}
func (EIntentionalFeedingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor20, []int{2} }

type ESuspiciousActivity int32

const (
	ESuspiciousActivity_k_ESuspiciousActivity_VAC_MultipleInstances ESuspiciousActivity = 1
	ESuspiciousActivity_k_ESuspiciousActivity_IntentionalFeeding    ESuspiciousActivity = 100
	ESuspiciousActivity_k_ESuspiciousActivity_SuspectedBotFarming   ESuspiciousActivity = 101
)

var ESuspiciousActivity_name = map[int32]string{
	1:   "k_ESuspiciousActivity_VAC_MultipleInstances",
	100: "k_ESuspiciousActivity_IntentionalFeeding",
	101: "k_ESuspiciousActivity_SuspectedBotFarming",
}
var ESuspiciousActivity_value = map[string]int32{
	"k_ESuspiciousActivity_VAC_MultipleInstances": 1,
	"k_ESuspiciousActivity_IntentionalFeeding":    100,
	"k_ESuspiciousActivity_SuspectedBotFarming":   101,
}

func (x ESuspiciousActivity) Enum() *ESuspiciousActivity {
	p := new(ESuspiciousActivity)
	*p = x
	return p
}
func (x ESuspiciousActivity) String() string {
	return proto.EnumName(ESuspiciousActivity_name, int32(x))
}
func (x *ESuspiciousActivity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESuspiciousActivity_value, data, "ESuspiciousActivity")
	if err != nil {
		return err
	}
	*x = ESuspiciousActivity(value)
	return nil
}
func (ESuspiciousActivity) EnumDescriptor() ([]byte, []int) { return fileDescriptor20, []int{3} }

type ESuspiciousBuildType int32

const (
	ESuspiciousBuildType_k_ESuspiciousBuildType_None               ESuspiciousBuildType = 0
	ESuspiciousBuildType_k_ESuspiciousBuildType_NoGoldSpent        ESuspiciousBuildType = 1
	ESuspiciousBuildType_k_ESuspiciousBuildType_NoItems            ESuspiciousBuildType = 2
	ESuspiciousBuildType_k_ESuspiciousBuildType_NoSignificantItems ESuspiciousBuildType = 3
	ESuspiciousBuildType_k_ESuspiciousBuildType_TooManyBoots       ESuspiciousBuildType = 4
	ESuspiciousBuildType_k_ESuspiciousBuildType_Bot1               ESuspiciousBuildType = 101
	ESuspiciousBuildType_k_ESuspiciousBuildType_Bot2               ESuspiciousBuildType = 102
	ESuspiciousBuildType_k_ESuspiciousBuildType_Bot3               ESuspiciousBuildType = 103
	ESuspiciousBuildType_k_ESuspiciousBuildType_Bot4               ESuspiciousBuildType = 104
	ESuspiciousBuildType_k_ESuspiciousBuildType_Bot5               ESuspiciousBuildType = 105
)

var ESuspiciousBuildType_name = map[int32]string{
	0:   "k_ESuspiciousBuildType_None",
	1:   "k_ESuspiciousBuildType_NoGoldSpent",
	2:   "k_ESuspiciousBuildType_NoItems",
	3:   "k_ESuspiciousBuildType_NoSignificantItems",
	4:   "k_ESuspiciousBuildType_TooManyBoots",
	101: "k_ESuspiciousBuildType_Bot1",
	102: "k_ESuspiciousBuildType_Bot2",
	103: "k_ESuspiciousBuildType_Bot3",
	104: "k_ESuspiciousBuildType_Bot4",
	105: "k_ESuspiciousBuildType_Bot5",
}
var ESuspiciousBuildType_value = map[string]int32{
	"k_ESuspiciousBuildType_None":               0,
	"k_ESuspiciousBuildType_NoGoldSpent":        1,
	"k_ESuspiciousBuildType_NoItems":            2,
	"k_ESuspiciousBuildType_NoSignificantItems": 3,
	"k_ESuspiciousBuildType_TooManyBoots":       4,
	"k_ESuspiciousBuildType_Bot1":               101,
	"k_ESuspiciousBuildType_Bot2":               102,
	"k_ESuspiciousBuildType_Bot3":               103,
	"k_ESuspiciousBuildType_Bot4":               104,
	"k_ESuspiciousBuildType_Bot5":               105,
}

func (x ESuspiciousBuildType) Enum() *ESuspiciousBuildType {
	p := new(ESuspiciousBuildType)
	*p = x
	return p
}
func (x ESuspiciousBuildType) String() string {
	return proto.EnumName(ESuspiciousBuildType_name, int32(x))
}
func (x *ESuspiciousBuildType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESuspiciousBuildType_value, data, "ESuspiciousBuildType")
	if err != nil {
		return err
	}
	*x = ESuspiciousBuildType(value)
	return nil
}
func (ESuspiciousBuildType) EnumDescriptor() ([]byte, []int) { return fileDescriptor20, []int{4} }

type CMsgConnectedPlayers_SendReason int32

const (
	CMsgConnectedPlayers_INVALID                            CMsgConnectedPlayers_SendReason = 0
	CMsgConnectedPlayers_HEARTBEAT                          CMsgConnectedPlayers_SendReason = 1
	CMsgConnectedPlayers_GAME_STATE                         CMsgConnectedPlayers_SendReason = 2
	CMsgConnectedPlayers_FIRST_BLOOD                        CMsgConnectedPlayers_SendReason = 3
	CMsgConnectedPlayers_PLAYER_CONNECTED                   CMsgConnectedPlayers_SendReason = 4
	CMsgConnectedPlayers_PLAYER_HERO                        CMsgConnectedPlayers_SendReason = 5
	CMsgConnectedPlayers_PLAYER_DISCONNECTED_CONSEQUENCES   CMsgConnectedPlayers_SendReason = 6
	CMsgConnectedPlayers_PLAYER_DISCONNECTED_NOCONSEQUENCES CMsgConnectedPlayers_SendReason = 7
	CMsgConnectedPlayers_GAMESTATE_TIMEOUT                  CMsgConnectedPlayers_SendReason = 10
	CMsgConnectedPlayers_MASS_DISCONNECT                    CMsgConnectedPlayers_SendReason = 11
	CMsgConnectedPlayers_KILLS                              CMsgConnectedPlayers_SendReason = 13
	CMsgConnectedPlayers_BUILDING_STATE                     CMsgConnectedPlayers_SendReason = 14
)

var CMsgConnectedPlayers_SendReason_name = map[int32]string{
	0:  "INVALID",
	1:  "HEARTBEAT",
	2:  "GAME_STATE",
	3:  "FIRST_BLOOD",
	4:  "PLAYER_CONNECTED",
	5:  "PLAYER_HERO",
	6:  "PLAYER_DISCONNECTED_CONSEQUENCES",
	7:  "PLAYER_DISCONNECTED_NOCONSEQUENCES",
	10: "GAMESTATE_TIMEOUT",
	11: "MASS_DISCONNECT",
	13: "KILLS",
	14: "BUILDING_STATE",
}
var CMsgConnectedPlayers_SendReason_value = map[string]int32{
	"INVALID":                            0,
	"HEARTBEAT":                          1,
	"GAME_STATE":                         2,
	"FIRST_BLOOD":                        3,
	"PLAYER_CONNECTED":                   4,
	"PLAYER_HERO":                        5,
	"PLAYER_DISCONNECTED_CONSEQUENCES":   6,
	"PLAYER_DISCONNECTED_NOCONSEQUENCES": 7,
	"GAMESTATE_TIMEOUT":                  10,
	"MASS_DISCONNECT":                    11,
	"KILLS":                              13,
	"BUILDING_STATE":                     14,
}

func (x CMsgConnectedPlayers_SendReason) Enum() *CMsgConnectedPlayers_SendReason {
	p := new(CMsgConnectedPlayers_SendReason)
	*p = x
	return p
}
func (x CMsgConnectedPlayers_SendReason) String() string {
	return proto.EnumName(CMsgConnectedPlayers_SendReason_name, int32(x))
}
func (x *CMsgConnectedPlayers_SendReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgConnectedPlayers_SendReason_value, data, "CMsgConnectedPlayers_SendReason")
	if err != nil {
		return err
	}
	*x = CMsgConnectedPlayers_SendReason(value)
	return nil
}
func (CMsgConnectedPlayers_SendReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{2, 0}
}

type CMsgGameServerInfo_ServerType int32

const (
	CMsgGameServerInfo_UNSPECIFIED CMsgGameServerInfo_ServerType = 0
	CMsgGameServerInfo_GAME        CMsgGameServerInfo_ServerType = 1
	CMsgGameServerInfo_PROXY       CMsgGameServerInfo_ServerType = 2
)

var CMsgGameServerInfo_ServerType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "GAME",
	2: "PROXY",
}
var CMsgGameServerInfo_ServerType_value = map[string]int32{
	"UNSPECIFIED": 0,
	"GAME":        1,
	"PROXY":       2,
}

func (x CMsgGameServerInfo_ServerType) Enum() *CMsgGameServerInfo_ServerType {
	p := new(CMsgGameServerInfo_ServerType)
	*p = x
	return p
}
func (x CMsgGameServerInfo_ServerType) String() string {
	return proto.EnumName(CMsgGameServerInfo_ServerType_name, int32(x))
}
func (x *CMsgGameServerInfo_ServerType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGameServerInfo_ServerType_value, data, "CMsgGameServerInfo_ServerType")
	if err != nil {
		return err
	}
	*x = CMsgGameServerInfo_ServerType(value)
	return nil
}
func (CMsgGameServerInfo_ServerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{3, 0}
}

type CMsgGameServerInfo_CustomGames int32

const (
	CMsgGameServerInfo_BOTH CMsgGameServerInfo_CustomGames = 0
	CMsgGameServerInfo_NONE CMsgGameServerInfo_CustomGames = 1
	CMsgGameServerInfo_ONLY CMsgGameServerInfo_CustomGames = 2
)

var CMsgGameServerInfo_CustomGames_name = map[int32]string{
	0: "BOTH",
	1: "NONE",
	2: "ONLY",
}
var CMsgGameServerInfo_CustomGames_value = map[string]int32{
	"BOTH": 0,
	"NONE": 1,
	"ONLY": 2,
}

func (x CMsgGameServerInfo_CustomGames) Enum() *CMsgGameServerInfo_CustomGames {
	p := new(CMsgGameServerInfo_CustomGames)
	*p = x
	return p
}
func (x CMsgGameServerInfo_CustomGames) String() string {
	return proto.EnumName(CMsgGameServerInfo_CustomGames_name, int32(x))
}
func (x *CMsgGameServerInfo_CustomGames) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGameServerInfo_CustomGames_value, data, "CMsgGameServerInfo_CustomGames")
	if err != nil {
		return err
	}
	*x = CMsgGameServerInfo_CustomGames(value)
	return nil
}
func (CMsgGameServerInfo_CustomGames) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{3, 1}
}

type CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState int32

const (
	CMsgDOTALiveScoreboardUpdate_Team_Player_k_EDOTAUltimateStateNotLearned CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState = 0
	CMsgDOTALiveScoreboardUpdate_Team_Player_k_EDOTAUltimateStateCooldown   CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState = 1
	CMsgDOTALiveScoreboardUpdate_Team_Player_k_EDOTAUltimateStateNeedsMana  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState = 2
	CMsgDOTALiveScoreboardUpdate_Team_Player_k_EDOTAUltimateStateReady      CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState = 3
)

var CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_name = map[int32]string{
	0: "k_EDOTAUltimateStateNotLearned",
	1: "k_EDOTAUltimateStateCooldown",
	2: "k_EDOTAUltimateStateNeedsMana",
	3: "k_EDOTAUltimateStateReady",
}
var CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_value = map[string]int32{
	"k_EDOTAUltimateStateNotLearned": 0,
	"k_EDOTAUltimateStateCooldown":   1,
	"k_EDOTAUltimateStateNeedsMana":  2,
	"k_EDOTAUltimateStateReady":      3,
}

func (x CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState) Enum() *CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState {
	p := new(CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState)
	*p = x
	return p
}
func (x CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState) String() string {
	return proto.EnumName(CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_name, int32(x))
}
func (x *CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_value, data, "CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState")
	if err != nil {
		return err
	}
	*x = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState(value)
	return nil
}
func (CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{22, 0, 0, 0}
}

type CMsgGameServerSaveGameResult_Result int32

const (
	CMsgGameServerSaveGameResult_SaveSuccessful  CMsgGameServerSaveGameResult_Result = 0
	CMsgGameServerSaveGameResult_SessionNotFound CMsgGameServerSaveGameResult_Result = 1
	CMsgGameServerSaveGameResult_DatabaseError   CMsgGameServerSaveGameResult_Result = 2
	CMsgGameServerSaveGameResult_TooBig          CMsgGameServerSaveGameResult_Result = 3
)

var CMsgGameServerSaveGameResult_Result_name = map[int32]string{
	0: "SaveSuccessful",
	1: "SessionNotFound",
	2: "DatabaseError",
	3: "TooBig",
}
var CMsgGameServerSaveGameResult_Result_value = map[string]int32{
	"SaveSuccessful":  0,
	"SessionNotFound": 1,
	"DatabaseError":   2,
	"TooBig":          3,
}

func (x CMsgGameServerSaveGameResult_Result) Enum() *CMsgGameServerSaveGameResult_Result {
	p := new(CMsgGameServerSaveGameResult_Result)
	*p = x
	return p
}
func (x CMsgGameServerSaveGameResult_Result) String() string {
	return proto.EnumName(CMsgGameServerSaveGameResult_Result_name, int32(x))
}
func (x *CMsgGameServerSaveGameResult_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGameServerSaveGameResult_Result_value, data, "CMsgGameServerSaveGameResult_Result")
	if err != nil {
		return err
	}
	*x = CMsgGameServerSaveGameResult_Result(value)
	return nil
}
func (CMsgGameServerSaveGameResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{38, 0}
}

type CMsgGCToServerPredictionResult_Prediction_EResult int32

const (
	CMsgGCToServerPredictionResult_Prediction_k_eResult_ItemGranted CMsgGCToServerPredictionResult_Prediction_EResult = 1
	CMsgGCToServerPredictionResult_Prediction_k_eResult_Destroyed   CMsgGCToServerPredictionResult_Prediction_EResult = 2
)

var CMsgGCToServerPredictionResult_Prediction_EResult_name = map[int32]string{
	1: "k_eResult_ItemGranted",
	2: "k_eResult_Destroyed",
}
var CMsgGCToServerPredictionResult_Prediction_EResult_value = map[string]int32{
	"k_eResult_ItemGranted": 1,
	"k_eResult_Destroyed":   2,
}

func (x CMsgGCToServerPredictionResult_Prediction_EResult) Enum() *CMsgGCToServerPredictionResult_Prediction_EResult {
	p := new(CMsgGCToServerPredictionResult_Prediction_EResult)
	*p = x
	return p
}
func (x CMsgGCToServerPredictionResult_Prediction_EResult) String() string {
	return proto.EnumName(CMsgGCToServerPredictionResult_Prediction_EResult_name, int32(x))
}
func (x *CMsgGCToServerPredictionResult_Prediction_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGCToServerPredictionResult_Prediction_EResult_value, data, "CMsgGCToServerPredictionResult_Prediction_EResult")
	if err != nil {
		return err
	}
	*x = CMsgGCToServerPredictionResult_Prediction_EResult(value)
	return nil
}
func (CMsgGCToServerPredictionResult_Prediction_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{70, 0, 0}
}

type CMsgServerToGCPostMatchTipResponse_Result int32

const (
	CMsgServerToGCPostMatchTipResponse_SUCCESS CMsgServerToGCPostMatchTipResponse_Result = 0
	CMsgServerToGCPostMatchTipResponse_FAILURE CMsgServerToGCPostMatchTipResponse_Result = 1
)

var CMsgServerToGCPostMatchTipResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}
var CMsgServerToGCPostMatchTipResponse_Result_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x CMsgServerToGCPostMatchTipResponse_Result) Enum() *CMsgServerToGCPostMatchTipResponse_Result {
	p := new(CMsgServerToGCPostMatchTipResponse_Result)
	*p = x
	return p
}
func (x CMsgServerToGCPostMatchTipResponse_Result) String() string {
	return proto.EnumName(CMsgServerToGCPostMatchTipResponse_Result_name, int32(x))
}
func (x *CMsgServerToGCPostMatchTipResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgServerToGCPostMatchTipResponse_Result_value, data, "CMsgServerToGCPostMatchTipResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgServerToGCPostMatchTipResponse_Result(value)
	return nil
}
func (CMsgServerToGCPostMatchTipResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{82, 0}
}

type CMsgPoorNetworkConditions struct {
	DetectionType    *EPoorNetworkConditionsType         `protobuf:"varint,1,opt,name=detection_type,json=detectionType,enum=dota.EPoorNetworkConditionsType,def=0" json:"detection_type,omitempty"`
	Players          []*CMsgPoorNetworkConditions_Player `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgPoorNetworkConditions) Reset()                    { *m = CMsgPoorNetworkConditions{} }
func (m *CMsgPoorNetworkConditions) String() string            { return proto.CompactTextString(m) }
func (*CMsgPoorNetworkConditions) ProtoMessage()               {}
func (*CMsgPoorNetworkConditions) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{0} }

const Default_CMsgPoorNetworkConditions_DetectionType EPoorNetworkConditionsType = EPoorNetworkConditionsType_k_EPoorNetworkConditions_None

func (m *CMsgPoorNetworkConditions) GetDetectionType() EPoorNetworkConditionsType {
	if m != nil && m.DetectionType != nil {
		return *m.DetectionType
	}
	return Default_CMsgPoorNetworkConditions_DetectionType
}

func (m *CMsgPoorNetworkConditions) GetPlayers() []*CMsgPoorNetworkConditions_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type CMsgPoorNetworkConditions_Player struct {
	AccountId        *uint32                      `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DisconnectReason *ENetworkDisconnectionReason `protobuf:"varint,2,opt,name=disconnect_reason,json=disconnectReason,enum=dota.ENetworkDisconnectionReason,def=0" json:"disconnect_reason,omitempty"`
	NumBadIntervals  *uint32                      `protobuf:"varint,3,opt,name=num_bad_intervals,json=numBadIntervals" json:"num_bad_intervals,omitempty"`
	PeakLossPct      *uint32                      `protobuf:"varint,4,opt,name=peak_loss_pct,json=peakLossPct" json:"peak_loss_pct,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgPoorNetworkConditions_Player) Reset()         { *m = CMsgPoorNetworkConditions_Player{} }
func (m *CMsgPoorNetworkConditions_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgPoorNetworkConditions_Player) ProtoMessage()    {}
func (*CMsgPoorNetworkConditions_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{0, 0}
}

const Default_CMsgPoorNetworkConditions_Player_DisconnectReason ENetworkDisconnectionReason = ENetworkDisconnectionReason_NETWORK_DISCONNECT_INVALID

func (m *CMsgPoorNetworkConditions_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgPoorNetworkConditions_Player) GetDisconnectReason() ENetworkDisconnectionReason {
	if m != nil && m.DisconnectReason != nil {
		return *m.DisconnectReason
	}
	return Default_CMsgPoorNetworkConditions_Player_DisconnectReason
}

func (m *CMsgPoorNetworkConditions_Player) GetNumBadIntervals() uint32 {
	if m != nil && m.NumBadIntervals != nil {
		return *m.NumBadIntervals
	}
	return 0
}

func (m *CMsgPoorNetworkConditions_Player) GetPeakLossPct() uint32 {
	if m != nil && m.PeakLossPct != nil {
		return *m.PeakLossPct
	}
	return 0
}

type CMsgGameserverCrash struct {
	MatchId            *uint64         `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	LobbyId            *uint64         `protobuf:"fixed64,2,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	GameState          *DOTA_GameState `protobuf:"varint,3,opt,name=game_state,json=gameState,enum=dota.DOTA_GameState,def=0" json:"game_state,omitempty"`
	SentinelSaveTime   *uint32         `protobuf:"fixed32,4,opt,name=sentinel_save_time,json=sentinelSaveTime" json:"sentinel_save_time,omitempty"`
	CustomGameId       *uint64         `protobuf:"fixed64,11,opt,name=custom_game_id,json=customGameId" json:"custom_game_id,omitempty"`
	TournamentId       *uint32         `protobuf:"varint,12,opt,name=tournament_id,json=tournamentId" json:"tournament_id,omitempty"`
	ServerSteamId      *uint64         `protobuf:"fixed64,5,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	ServerPublicIpAddr *uint32         `protobuf:"fixed32,6,opt,name=server_public_ip_addr,json=serverPublicIpAddr" json:"server_public_ip_addr,omitempty"`
	ServerPort         *uint32         `protobuf:"varint,7,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	ServerCluster      *uint32         `protobuf:"varint,8,opt,name=server_cluster,json=serverCluster" json:"server_cluster,omitempty"`
	Pid                *uint32         `protobuf:"varint,9,opt,name=pid" json:"pid,omitempty"`
	Engine             *uint32         `protobuf:"varint,10,opt,name=engine" json:"engine,omitempty"`
	XXX_unrecognized   []byte          `json:"-"`
}

func (m *CMsgGameserverCrash) Reset()                    { *m = CMsgGameserverCrash{} }
func (m *CMsgGameserverCrash) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameserverCrash) ProtoMessage()               {}
func (*CMsgGameserverCrash) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{1} }

const Default_CMsgGameserverCrash_GameState DOTA_GameState = DOTA_GameState_DOTA_GAMERULES_STATE_INIT

func (m *CMsgGameserverCrash) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGameserverCrash) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgGameserverCrash) GetGameState() DOTA_GameState {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return Default_CMsgGameserverCrash_GameState
}

func (m *CMsgGameserverCrash) GetSentinelSaveTime() uint32 {
	if m != nil && m.SentinelSaveTime != nil {
		return *m.SentinelSaveTime
	}
	return 0
}

func (m *CMsgGameserverCrash) GetCustomGameId() uint64 {
	if m != nil && m.CustomGameId != nil {
		return *m.CustomGameId
	}
	return 0
}

func (m *CMsgGameserverCrash) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgGameserverCrash) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

func (m *CMsgGameserverCrash) GetServerPublicIpAddr() uint32 {
	if m != nil && m.ServerPublicIpAddr != nil {
		return *m.ServerPublicIpAddr
	}
	return 0
}

func (m *CMsgGameserverCrash) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgGameserverCrash) GetServerCluster() uint32 {
	if m != nil && m.ServerCluster != nil {
		return *m.ServerCluster
	}
	return 0
}

func (m *CMsgGameserverCrash) GetPid() uint32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *CMsgGameserverCrash) GetEngine() uint32 {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return 0
}

type CMsgConnectedPlayers struct {
	ConnectedPlayers      []*CMsgConnectedPlayers_Player   `protobuf:"bytes,1,rep,name=connected_players,json=connectedPlayers" json:"connected_players,omitempty"`
	DisconnectedPlayers   []*CMsgConnectedPlayers_Player   `protobuf:"bytes,7,rep,name=disconnected_players,json=disconnectedPlayers" json:"disconnected_players,omitempty"`
	GameState             *DOTA_GameState                  `protobuf:"varint,2,opt,name=game_state,json=gameState,enum=dota.DOTA_GameState,def=0" json:"game_state,omitempty"`
	FirstBloodHappened    *bool                            `protobuf:"varint,6,opt,name=first_blood_happened,json=firstBloodHappened" json:"first_blood_happened,omitempty"`
	LegacyMassDisconnect  *bool                            `protobuf:"varint,9,opt,name=legacy_mass_disconnect,json=legacyMassDisconnect" json:"legacy_mass_disconnect,omitempty"`
	PoorNetworkConditions *CMsgPoorNetworkConditions       `protobuf:"bytes,10,opt,name=poor_network_conditions,json=poorNetworkConditions" json:"poor_network_conditions,omitempty"`
	SendReason            *CMsgConnectedPlayers_SendReason `protobuf:"varint,8,opt,name=send_reason,json=sendReason,enum=dota.CMsgConnectedPlayers_SendReason,def=0" json:"send_reason,omitempty"`
	RadiantKills          *uint32                          `protobuf:"varint,11,opt,name=radiant_kills,json=radiantKills" json:"radiant_kills,omitempty"`
	DireKills             *uint32                          `protobuf:"varint,12,opt,name=dire_kills,json=direKills" json:"dire_kills,omitempty"`
	RadiantLead           *int32                           `protobuf:"varint,14,opt,name=radiant_lead,json=radiantLead" json:"radiant_lead,omitempty"`
	BuildingState         *uint32                          `protobuf:"varint,15,opt,name=building_state,json=buildingState" json:"building_state,omitempty"`
	XXX_unrecognized      []byte                           `json:"-"`
}

func (m *CMsgConnectedPlayers) Reset()                    { *m = CMsgConnectedPlayers{} }
func (m *CMsgConnectedPlayers) String() string            { return proto.CompactTextString(m) }
func (*CMsgConnectedPlayers) ProtoMessage()               {}
func (*CMsgConnectedPlayers) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{2} }

const Default_CMsgConnectedPlayers_GameState DOTA_GameState = DOTA_GameState_DOTA_GAMERULES_STATE_INIT
const Default_CMsgConnectedPlayers_SendReason CMsgConnectedPlayers_SendReason = CMsgConnectedPlayers_INVALID

func (m *CMsgConnectedPlayers) GetConnectedPlayers() []*CMsgConnectedPlayers_Player {
	if m != nil {
		return m.ConnectedPlayers
	}
	return nil
}

func (m *CMsgConnectedPlayers) GetDisconnectedPlayers() []*CMsgConnectedPlayers_Player {
	if m != nil {
		return m.DisconnectedPlayers
	}
	return nil
}

func (m *CMsgConnectedPlayers) GetGameState() DOTA_GameState {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return Default_CMsgConnectedPlayers_GameState
}

func (m *CMsgConnectedPlayers) GetFirstBloodHappened() bool {
	if m != nil && m.FirstBloodHappened != nil {
		return *m.FirstBloodHappened
	}
	return false
}

func (m *CMsgConnectedPlayers) GetLegacyMassDisconnect() bool {
	if m != nil && m.LegacyMassDisconnect != nil {
		return *m.LegacyMassDisconnect
	}
	return false
}

func (m *CMsgConnectedPlayers) GetPoorNetworkConditions() *CMsgPoorNetworkConditions {
	if m != nil {
		return m.PoorNetworkConditions
	}
	return nil
}

func (m *CMsgConnectedPlayers) GetSendReason() CMsgConnectedPlayers_SendReason {
	if m != nil && m.SendReason != nil {
		return *m.SendReason
	}
	return Default_CMsgConnectedPlayers_SendReason
}

func (m *CMsgConnectedPlayers) GetRadiantKills() uint32 {
	if m != nil && m.RadiantKills != nil {
		return *m.RadiantKills
	}
	return 0
}

func (m *CMsgConnectedPlayers) GetDireKills() uint32 {
	if m != nil && m.DireKills != nil {
		return *m.DireKills
	}
	return 0
}

func (m *CMsgConnectedPlayers) GetRadiantLead() int32 {
	if m != nil && m.RadiantLead != nil {
		return *m.RadiantLead
	}
	return 0
}

func (m *CMsgConnectedPlayers) GetBuildingState() uint32 {
	if m != nil && m.BuildingState != nil {
		return *m.BuildingState
	}
	return 0
}

type CMsgConnectedPlayers_Player struct {
	SteamId          *uint64                      `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	HeroId           *uint32                      `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	LeaverState      *CMsgLeaverState             `protobuf:"bytes,3,opt,name=leaver_state,json=leaverState" json:"leaver_state,omitempty"`
	DisconnectReason *ENetworkDisconnectionReason `protobuf:"varint,4,opt,name=disconnect_reason,json=disconnectReason,enum=dota.ENetworkDisconnectionReason,def=0" json:"disconnect_reason,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgConnectedPlayers_Player) Reset()                    { *m = CMsgConnectedPlayers_Player{} }
func (m *CMsgConnectedPlayers_Player) String() string            { return proto.CompactTextString(m) }
func (*CMsgConnectedPlayers_Player) ProtoMessage()               {}
func (*CMsgConnectedPlayers_Player) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{2, 0} }

const Default_CMsgConnectedPlayers_Player_DisconnectReason ENetworkDisconnectionReason = ENetworkDisconnectionReason_NETWORK_DISCONNECT_INVALID

func (m *CMsgConnectedPlayers_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgConnectedPlayers_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgConnectedPlayers_Player) GetLeaverState() *CMsgLeaverState {
	if m != nil {
		return m.LeaverState
	}
	return nil
}

func (m *CMsgConnectedPlayers_Player) GetDisconnectReason() ENetworkDisconnectionReason {
	if m != nil && m.DisconnectReason != nil {
		return *m.DisconnectReason
	}
	return Default_CMsgConnectedPlayers_Player_DisconnectReason
}

type CMsgGameServerInfo struct {
	ServerPublicIpAddr          *uint32                         `protobuf:"fixed32,1,opt,name=server_public_ip_addr,json=serverPublicIpAddr" json:"server_public_ip_addr,omitempty"`
	ServerPrivateIpAddr         *uint32                         `protobuf:"fixed32,2,opt,name=server_private_ip_addr,json=serverPrivateIpAddr" json:"server_private_ip_addr,omitempty"`
	ServerPort                  *uint32                         `protobuf:"varint,3,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	ServerTvPort                *uint32                         `protobuf:"varint,4,opt,name=server_tv_port,json=serverTvPort" json:"server_tv_port,omitempty"`
	AssignedServerTvPort        *uint32                         `protobuf:"varint,22,opt,name=assigned_server_tv_port,json=assignedServerTvPort" json:"assigned_server_tv_port,omitempty"`
	ServerSteamdatagramPort     *uint32                         `protobuf:"varint,21,opt,name=server_steamdatagram_port,json=serverSteamdatagramPort" json:"server_steamdatagram_port,omitempty"`
	ServerKey                   *string                         `protobuf:"bytes,5,opt,name=server_key,json=serverKey" json:"server_key,omitempty"`
	ServerHibernation           *bool                           `protobuf:"varint,6,opt,name=server_hibernation,json=serverHibernation" json:"server_hibernation,omitempty"`
	ServerType                  *CMsgGameServerInfo_ServerType  `protobuf:"varint,7,opt,name=server_type,json=serverType,enum=dota.CMsgGameServerInfo_ServerType,def=0" json:"server_type,omitempty"`
	ServerRegion                *uint32                         `protobuf:"varint,8,opt,name=server_region,json=serverRegion" json:"server_region,omitempty"`
	ServerLoadavg               *float32                        `protobuf:"fixed32,9,opt,name=server_loadavg,json=serverLoadavg" json:"server_loadavg,omitempty"`
	ServerTvBroadcastTime       *float32                        `protobuf:"fixed32,10,opt,name=server_tv_broadcast_time,json=serverTvBroadcastTime" json:"server_tv_broadcast_time,omitempty"`
	ServerGameTime              *float32                        `protobuf:"fixed32,11,opt,name=server_game_time,json=serverGameTime" json:"server_game_time,omitempty"`
	ServerRelayConnectedSteamId *uint64                         `protobuf:"fixed64,12,opt,name=server_relay_connected_steam_id,json=serverRelayConnectedSteamId" json:"server_relay_connected_steam_id,omitempty"`
	RelaySlotsMax               *uint32                         `protobuf:"varint,13,opt,name=relay_slots_max,json=relaySlotsMax" json:"relay_slots_max,omitempty"`
	RelaysConnected             *int32                          `protobuf:"varint,14,opt,name=relays_connected,json=relaysConnected" json:"relays_connected,omitempty"`
	RelayClientsConnected       *int32                          `protobuf:"varint,15,opt,name=relay_clients_connected,json=relayClientsConnected" json:"relay_clients_connected,omitempty"`
	RelayedGameServerSteamId    *uint64                         `protobuf:"fixed64,16,opt,name=relayed_game_server_steam_id,json=relayedGameServerSteamId" json:"relayed_game_server_steam_id,omitempty"`
	ParentRelayCount            *uint32                         `protobuf:"varint,17,opt,name=parent_relay_count,json=parentRelayCount" json:"parent_relay_count,omitempty"`
	TvSecretCode                *uint64                         `protobuf:"fixed64,18,opt,name=tv_secret_code,json=tvSecretCode" json:"tv_secret_code,omitempty"`
	ServerVersion               *uint32                         `protobuf:"varint,19,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
	ServerCluster               *uint32                         `protobuf:"varint,20,opt,name=server_cluster,json=serverCluster" json:"server_cluster,omitempty"`
	AllowCustomGames            *CMsgGameServerInfo_CustomGames `protobuf:"varint,23,opt,name=allow_custom_games,json=allowCustomGames,enum=dota.CMsgGameServerInfo_CustomGames,def=0" json:"allow_custom_games,omitempty"`
	XXX_unrecognized            []byte                          `json:"-"`
}

func (m *CMsgGameServerInfo) Reset()                    { *m = CMsgGameServerInfo{} }
func (m *CMsgGameServerInfo) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameServerInfo) ProtoMessage()               {}
func (*CMsgGameServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{3} }

const Default_CMsgGameServerInfo_ServerType CMsgGameServerInfo_ServerType = CMsgGameServerInfo_UNSPECIFIED
const Default_CMsgGameServerInfo_AllowCustomGames CMsgGameServerInfo_CustomGames = CMsgGameServerInfo_BOTH

func (m *CMsgGameServerInfo) GetServerPublicIpAddr() uint32 {
	if m != nil && m.ServerPublicIpAddr != nil {
		return *m.ServerPublicIpAddr
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerPrivateIpAddr() uint32 {
	if m != nil && m.ServerPrivateIpAddr != nil {
		return *m.ServerPrivateIpAddr
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerTvPort() uint32 {
	if m != nil && m.ServerTvPort != nil {
		return *m.ServerTvPort
	}
	return 0
}

func (m *CMsgGameServerInfo) GetAssignedServerTvPort() uint32 {
	if m != nil && m.AssignedServerTvPort != nil {
		return *m.AssignedServerTvPort
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerSteamdatagramPort() uint32 {
	if m != nil && m.ServerSteamdatagramPort != nil {
		return *m.ServerSteamdatagramPort
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerKey() string {
	if m != nil && m.ServerKey != nil {
		return *m.ServerKey
	}
	return ""
}

func (m *CMsgGameServerInfo) GetServerHibernation() bool {
	if m != nil && m.ServerHibernation != nil {
		return *m.ServerHibernation
	}
	return false
}

func (m *CMsgGameServerInfo) GetServerType() CMsgGameServerInfo_ServerType {
	if m != nil && m.ServerType != nil {
		return *m.ServerType
	}
	return Default_CMsgGameServerInfo_ServerType
}

func (m *CMsgGameServerInfo) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerLoadavg() float32 {
	if m != nil && m.ServerLoadavg != nil {
		return *m.ServerLoadavg
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerTvBroadcastTime() float32 {
	if m != nil && m.ServerTvBroadcastTime != nil {
		return *m.ServerTvBroadcastTime
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerGameTime() float32 {
	if m != nil && m.ServerGameTime != nil {
		return *m.ServerGameTime
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerRelayConnectedSteamId() uint64 {
	if m != nil && m.ServerRelayConnectedSteamId != nil {
		return *m.ServerRelayConnectedSteamId
	}
	return 0
}

func (m *CMsgGameServerInfo) GetRelaySlotsMax() uint32 {
	if m != nil && m.RelaySlotsMax != nil {
		return *m.RelaySlotsMax
	}
	return 0
}

func (m *CMsgGameServerInfo) GetRelaysConnected() int32 {
	if m != nil && m.RelaysConnected != nil {
		return *m.RelaysConnected
	}
	return 0
}

func (m *CMsgGameServerInfo) GetRelayClientsConnected() int32 {
	if m != nil && m.RelayClientsConnected != nil {
		return *m.RelayClientsConnected
	}
	return 0
}

func (m *CMsgGameServerInfo) GetRelayedGameServerSteamId() uint64 {
	if m != nil && m.RelayedGameServerSteamId != nil {
		return *m.RelayedGameServerSteamId
	}
	return 0
}

func (m *CMsgGameServerInfo) GetParentRelayCount() uint32 {
	if m != nil && m.ParentRelayCount != nil {
		return *m.ParentRelayCount
	}
	return 0
}

func (m *CMsgGameServerInfo) GetTvSecretCode() uint64 {
	if m != nil && m.TvSecretCode != nil {
		return *m.TvSecretCode
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return 0
}

func (m *CMsgGameServerInfo) GetServerCluster() uint32 {
	if m != nil && m.ServerCluster != nil {
		return *m.ServerCluster
	}
	return 0
}

func (m *CMsgGameServerInfo) GetAllowCustomGames() CMsgGameServerInfo_CustomGames {
	if m != nil && m.AllowCustomGames != nil {
		return *m.AllowCustomGames
	}
	return Default_CMsgGameServerInfo_AllowCustomGames
}

type CMsgLeaverDetected struct {
	SteamId               *uint64                      `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	LeaverStatus          *DOTALeaverStatusT           `protobuf:"varint,2,opt,name=leaver_status,json=leaverStatus,enum=dota.DOTALeaverStatusT,def=0" json:"leaver_status,omitempty"`
	LeaverState           *CMsgLeaverState             `protobuf:"bytes,4,opt,name=leaver_state,json=leaverState" json:"leaver_state,omitempty"`
	ServerCluster         *uint32                      `protobuf:"varint,5,opt,name=server_cluster,json=serverCluster" json:"server_cluster,omitempty"`
	DisconnectReason      *ENetworkDisconnectionReason `protobuf:"varint,6,opt,name=disconnect_reason,json=disconnectReason,enum=dota.ENetworkDisconnectionReason,def=0" json:"disconnect_reason,omitempty"`
	PoorNetworkConditions *CMsgPoorNetworkConditions   `protobuf:"bytes,7,opt,name=poor_network_conditions,json=poorNetworkConditions" json:"poor_network_conditions,omitempty"`
	XXX_unrecognized      []byte                       `json:"-"`
}

func (m *CMsgLeaverDetected) Reset()                    { *m = CMsgLeaverDetected{} }
func (m *CMsgLeaverDetected) String() string            { return proto.CompactTextString(m) }
func (*CMsgLeaverDetected) ProtoMessage()               {}
func (*CMsgLeaverDetected) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{4} }

const Default_CMsgLeaverDetected_LeaverStatus DOTALeaverStatusT = DOTALeaverStatusT_DOTA_LEAVER_NONE
const Default_CMsgLeaverDetected_DisconnectReason ENetworkDisconnectionReason = ENetworkDisconnectionReason_NETWORK_DISCONNECT_INVALID

func (m *CMsgLeaverDetected) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgLeaverDetected) GetLeaverStatus() DOTALeaverStatusT {
	if m != nil && m.LeaverStatus != nil {
		return *m.LeaverStatus
	}
	return Default_CMsgLeaverDetected_LeaverStatus
}

func (m *CMsgLeaverDetected) GetLeaverState() *CMsgLeaverState {
	if m != nil {
		return m.LeaverState
	}
	return nil
}

func (m *CMsgLeaverDetected) GetServerCluster() uint32 {
	if m != nil && m.ServerCluster != nil {
		return *m.ServerCluster
	}
	return 0
}

func (m *CMsgLeaverDetected) GetDisconnectReason() ENetworkDisconnectionReason {
	if m != nil && m.DisconnectReason != nil {
		return *m.DisconnectReason
	}
	return Default_CMsgLeaverDetected_DisconnectReason
}

func (m *CMsgLeaverDetected) GetPoorNetworkConditions() *CMsgPoorNetworkConditions {
	if m != nil {
		return m.PoorNetworkConditions
	}
	return nil
}

type CMsgLeaverDetectedResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgLeaverDetectedResponse) Reset()                    { *m = CMsgLeaverDetectedResponse{} }
func (m *CMsgLeaverDetectedResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgLeaverDetectedResponse) ProtoMessage()               {}
func (*CMsgLeaverDetectedResponse) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{5} }

func (m *CMsgLeaverDetectedResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgDOTAFantasyFinalPlayerStats struct {
	Stats            []*CMsgDOTAFantasyPlayerStats `protobuf:"bytes,2,rep,name=stats" json:"stats,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CMsgDOTAFantasyFinalPlayerStats) Reset()         { *m = CMsgDOTAFantasyFinalPlayerStats{} }
func (m *CMsgDOTAFantasyFinalPlayerStats) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyFinalPlayerStats) ProtoMessage()    {}
func (*CMsgDOTAFantasyFinalPlayerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{6}
}

func (m *CMsgDOTAFantasyFinalPlayerStats) GetStats() []*CMsgDOTAFantasyPlayerStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CMsgDOTAFantasyLivePlayerStats struct {
	Stats            []*CMsgDOTAFantasyPlayerStats `protobuf:"bytes,2,rep,name=stats" json:"stats,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CMsgDOTAFantasyLivePlayerStats) Reset()                    { *m = CMsgDOTAFantasyLivePlayerStats{} }
func (m *CMsgDOTAFantasyLivePlayerStats) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLivePlayerStats) ProtoMessage()               {}
func (*CMsgDOTAFantasyLivePlayerStats) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{7} }

func (m *CMsgDOTAFantasyLivePlayerStats) GetStats() []*CMsgDOTAFantasyPlayerStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CMsgDOTAFantasyMatch struct {
	MatchId          *uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	LeagueId         *uint32 `protobuf:"varint,2,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	SeriesId         *uint32 `protobuf:"varint,3,opt,name=series_id,json=seriesId" json:"series_id,omitempty"`
	StartTime        *uint32 `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	SeriesType       *uint32 `protobuf:"varint,5,opt,name=series_type,json=seriesType" json:"series_type,omitempty"`
	Team_1           *uint32 `protobuf:"varint,6,opt,name=team_1,json=team1" json:"team_1,omitempty"`
	Team_2           *uint32 `protobuf:"varint,7,opt,name=team_2,json=team2" json:"team_2,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFantasyMatch) Reset()                    { *m = CMsgDOTAFantasyMatch{} }
func (m *CMsgDOTAFantasyMatch) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMatch) ProtoMessage()               {}
func (*CMsgDOTAFantasyMatch) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{8} }

func (m *CMsgDOTAFantasyMatch) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyMatch) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyMatch) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTAFantasyMatch) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyMatch) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTAFantasyMatch) GetTeam_1() uint32 {
	if m != nil && m.Team_1 != nil {
		return *m.Team_1
	}
	return 0
}

func (m *CMsgDOTAFantasyMatch) GetTeam_2() uint32 {
	if m != nil && m.Team_2 != nil {
		return *m.Team_2
	}
	return 0
}

type CMsgDOTAUpdateClippy struct {
	GoodTeamHeroIds  []uint32 `protobuf:"varint,1,rep,name=good_team_hero_ids,json=goodTeamHeroIds" json:"good_team_hero_ids,omitempty"`
	BadTeamHeroIds   []uint32 `protobuf:"varint,2,rep,name=bad_team_hero_ids,json=badTeamHeroIds" json:"bad_team_hero_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAUpdateClippy) Reset()                    { *m = CMsgDOTAUpdateClippy{} }
func (m *CMsgDOTAUpdateClippy) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAUpdateClippy) ProtoMessage()               {}
func (*CMsgDOTAUpdateClippy) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{9} }

func (m *CMsgDOTAUpdateClippy) GetGoodTeamHeroIds() []uint32 {
	if m != nil {
		return m.GoodTeamHeroIds
	}
	return nil
}

func (m *CMsgDOTAUpdateClippy) GetBadTeamHeroIds() []uint32 {
	if m != nil {
		return m.BadTeamHeroIds
	}
	return nil
}

type CMsgServerToGCRealtimeStats struct {
	Delayed          *CMsgDOTARealtimeGameStatsTerse `protobuf:"bytes,1,opt,name=delayed" json:"delayed,omitempty"`
	Current          *CMsgDOTARealtimeGameStats      `protobuf:"bytes,2,opt,name=current" json:"current,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CMsgServerToGCRealtimeStats) Reset()                    { *m = CMsgServerToGCRealtimeStats{} }
func (m *CMsgServerToGCRealtimeStats) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerToGCRealtimeStats) ProtoMessage()               {}
func (*CMsgServerToGCRealtimeStats) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{10} }

func (m *CMsgServerToGCRealtimeStats) GetDelayed() *CMsgDOTARealtimeGameStatsTerse {
	if m != nil {
		return m.Delayed
	}
	return nil
}

func (m *CMsgServerToGCRealtimeStats) GetCurrent() *CMsgDOTARealtimeGameStats {
	if m != nil {
		return m.Current
	}
	return nil
}

type CMsgGCToServerRealtimeStatsStartStop struct {
	Delayed          *bool  `protobuf:"varint,1,opt,name=delayed" json:"delayed,omitempty"`
	Current          *bool  `protobuf:"varint,2,opt,name=current" json:"current,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCToServerRealtimeStatsStartStop) Reset()         { *m = CMsgGCToServerRealtimeStatsStartStop{} }
func (m *CMsgGCToServerRealtimeStatsStartStop) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToServerRealtimeStatsStartStop) ProtoMessage()    {}
func (*CMsgGCToServerRealtimeStatsStartStop) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{11}
}

func (m *CMsgGCToServerRealtimeStatsStartStop) GetDelayed() bool {
	if m != nil && m.Delayed != nil {
		return *m.Delayed
	}
	return false
}

func (m *CMsgGCToServerRealtimeStatsStartStop) GetCurrent() bool {
	if m != nil && m.Current != nil {
		return *m.Current
	}
	return false
}

type CMsgGameMatchSignOut struct {
	MatchId                       *uint64                                           `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Duration                      *uint32                                           `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	GoodGuysWin                   *bool                                             `protobuf:"varint,3,opt,name=good_guys_win,json=goodGuysWin" json:"good_guys_win,omitempty"`
	Date                          *uint32                                           `protobuf:"fixed32,4,opt,name=date" json:"date,omitempty"`
	NumPlayers                    []uint32                                          `protobuf:"varint,5,rep,name=num_players,json=numPlayers" json:"num_players,omitempty"`
	Teams                         []*CMsgGameMatchSignOut_CTeam                     `protobuf:"bytes,6,rep,name=teams" json:"teams,omitempty"`
	TowerStatus                   []uint32                                          `protobuf:"varint,8,rep,name=tower_status,json=towerStatus" json:"tower_status,omitempty"`
	BarracksStatus                []uint32                                          `protobuf:"varint,9,rep,name=barracks_status,json=barracksStatus" json:"barracks_status,omitempty"`
	Cluster                       *uint32                                           `protobuf:"varint,10,opt,name=cluster" json:"cluster,omitempty"`
	ServerAddr                    *string                                           `protobuf:"bytes,11,opt,name=server_addr,json=serverAddr" json:"server_addr,omitempty"`
	FirstBloodTime                *uint32                                           `protobuf:"varint,12,opt,name=first_blood_time,json=firstBloodTime" json:"first_blood_time,omitempty"`
	GameBalance                   *float32                                          `protobuf:"fixed32,13,opt,name=game_balance,json=gameBalance" json:"game_balance,omitempty"`
	EventScore                    *uint32                                           `protobuf:"varint,14,opt,name=event_score,json=eventScore" json:"event_score,omitempty"`
	PicksBans                     []*CMatchHeroSelectEvent                          `protobuf:"bytes,15,rep,name=picks_bans,json=picksBans" json:"picks_bans,omitempty"`
	FantasyStats                  []*CMsgDOTAFantasyPlayerStats                     `protobuf:"bytes,41,rep,name=fantasy_stats,json=fantasyStats" json:"fantasy_stats,omitempty"`
	PlayerStrangeCountAdjustments []*CMsgEconPlayerStrangeCountAdjustment           `protobuf:"bytes,17,rep,name=player_strange_count_adjustments,json=playerStrangeCountAdjustments" json:"player_strange_count_adjustments,omitempty"`
	AutomaticSurrender            *bool                                             `protobuf:"varint,18,opt,name=automatic_surrender,json=automaticSurrender" json:"automatic_surrender,omitempty"`
	ServerVersion                 *uint32                                           `protobuf:"varint,19,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
	LegacyMassDisconnect          *bool                                             `protobuf:"varint,21,opt,name=legacy_mass_disconnect,json=legacyMassDisconnect" json:"legacy_mass_disconnect,omitempty"`
	PoorNetworkConditions         *CMsgPoorNetworkConditions                        `protobuf:"bytes,35,opt,name=poor_network_conditions,json=poorNetworkConditions" json:"poor_network_conditions,omitempty"`
	AdditionalMsgs                []*CMsgGameMatchSignOut_CAdditionalSignoutMsg     `protobuf:"bytes,20,rep,name=additional_msgs,json=additionalMsgs" json:"additional_msgs,omitempty"`
	SocialFeedEvents              []*CMsgGameMatchSignOut_CSocialFeedMatchEvent     `protobuf:"bytes,36,rep,name=social_feed_events,json=socialFeedEvents" json:"social_feed_events,omitempty"`
	AverageNetworthDelta          *int32                                            `protobuf:"zigzag32,22,opt,name=average_networth_delta,json=averageNetworthDelta" json:"average_networth_delta,omitempty"`
	NetworthDeltaMin10            *int32                                            `protobuf:"zigzag32,23,opt,name=networth_delta_min10,json=networthDeltaMin10" json:"networth_delta_min10,omitempty"`
	NetworthDeltaMin20            *int32                                            `protobuf:"zigzag32,24,opt,name=networth_delta_min20,json=networthDeltaMin20" json:"networth_delta_min20,omitempty"`
	MaximumLosingNetworthLead     *int32                                            `protobuf:"zigzag32,25,opt,name=maximum_losing_networth_lead,json=maximumLosingNetworthLead" json:"maximum_losing_networth_lead,omitempty"`
	AverageExperienceDelta        *int32                                            `protobuf:"zigzag32,26,opt,name=average_experience_delta,json=averageExperienceDelta" json:"average_experience_delta,omitempty"`
	ExperienceDeltaMin10          *int32                                            `protobuf:"zigzag32,27,opt,name=experience_delta_min10,json=experienceDeltaMin10" json:"experience_delta_min10,omitempty"`
	ExperienceDeltaMin20          *int32                                            `protobuf:"zigzag32,28,opt,name=experience_delta_min20,json=experienceDeltaMin20" json:"experience_delta_min20,omitempty"`
	BonusGoldWinnerMin10          *int32                                            `protobuf:"zigzag32,29,opt,name=bonus_gold_winner_min10,json=bonusGoldWinnerMin10" json:"bonus_gold_winner_min10,omitempty"`
	BonusGoldWinnerMin20          *int32                                            `protobuf:"zigzag32,30,opt,name=bonus_gold_winner_min20,json=bonusGoldWinnerMin20" json:"bonus_gold_winner_min20,omitempty"`
	BonusGoldWinnerTotal          *uint32                                           `protobuf:"varint,31,opt,name=bonus_gold_winner_total,json=bonusGoldWinnerTotal" json:"bonus_gold_winner_total,omitempty"`
	BonusGoldLoserMin10           *int32                                            `protobuf:"zigzag32,32,opt,name=bonus_gold_loser_min10,json=bonusGoldLoserMin10" json:"bonus_gold_loser_min10,omitempty"`
	BonusGoldLoserMin20           *int32                                            `protobuf:"zigzag32,33,opt,name=bonus_gold_loser_min20,json=bonusGoldLoserMin20" json:"bonus_gold_loser_min20,omitempty"`
	BonusGoldLoserTotal           *uint32                                           `protobuf:"varint,34,opt,name=bonus_gold_loser_total,json=bonusGoldLoserTotal" json:"bonus_gold_loser_total,omitempty"`
	CustomGameData                *CMsgGameMatchSignOut_CCustomGameData             `protobuf:"bytes,37,opt,name=custom_game_data,json=customGameData" json:"custom_game_data,omitempty"`
	MatchFlags                    *uint32                                           `protobuf:"varint,38,opt,name=match_flags,json=matchFlags" json:"match_flags,omitempty"`
	TeamScores                    []uint32                                          `protobuf:"varint,39,rep,name=team_scores,json=teamScores" json:"team_scores,omitempty"`
	PreGameDuration               *uint32                                           `protobuf:"varint,40,opt,name=pre_game_duration,json=preGameDuration" json:"pre_game_duration,omitempty"`
	EventGameLeaderboardEntries   []*CMsgGameMatchSignOut_EventGameLeaderboardEntry `protobuf:"bytes,42,rep,name=event_game_leaderboard_entries,json=eventGameLeaderboardEntries" json:"event_game_leaderboard_entries,omitempty"`
	WardPlacements                []*CMsgGameMatchSignOut_WardPlacement             `protobuf:"bytes,43,rep,name=ward_placements,json=wardPlacements" json:"ward_placements,omitempty"`
	BountyRuneGoldWinners         *uint32                                           `protobuf:"varint,44,opt,name=bounty_rune_gold_winners,json=bountyRuneGoldWinners" json:"bounty_rune_gold_winners,omitempty"`
	BountyRuneGoldLosers          *uint32                                           `protobuf:"varint,45,opt,name=bounty_rune_gold_losers,json=bountyRuneGoldLosers" json:"bounty_rune_gold_losers,omitempty"`
	XXX_unrecognized              []byte                                            `json:"-"`
}

func (m *CMsgGameMatchSignOut) Reset()                    { *m = CMsgGameMatchSignOut{} }
func (m *CMsgGameMatchSignOut) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOut) ProtoMessage()               {}
func (*CMsgGameMatchSignOut) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{12} }

func (m *CMsgGameMatchSignOut) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetGoodGuysWin() bool {
	if m != nil && m.GoodGuysWin != nil {
		return *m.GoodGuysWin
	}
	return false
}

func (m *CMsgGameMatchSignOut) GetDate() uint32 {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetNumPlayers() []uint32 {
	if m != nil {
		return m.NumPlayers
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetTeams() []*CMsgGameMatchSignOut_CTeam {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetTowerStatus() []uint32 {
	if m != nil {
		return m.TowerStatus
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetBarracksStatus() []uint32 {
	if m != nil {
		return m.BarracksStatus
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetCluster() uint32 {
	if m != nil && m.Cluster != nil {
		return *m.Cluster
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetServerAddr() string {
	if m != nil && m.ServerAddr != nil {
		return *m.ServerAddr
	}
	return ""
}

func (m *CMsgGameMatchSignOut) GetFirstBloodTime() uint32 {
	if m != nil && m.FirstBloodTime != nil {
		return *m.FirstBloodTime
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetGameBalance() float32 {
	if m != nil && m.GameBalance != nil {
		return *m.GameBalance
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetEventScore() uint32 {
	if m != nil && m.EventScore != nil {
		return *m.EventScore
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetPicksBans() []*CMatchHeroSelectEvent {
	if m != nil {
		return m.PicksBans
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetFantasyStats() []*CMsgDOTAFantasyPlayerStats {
	if m != nil {
		return m.FantasyStats
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetPlayerStrangeCountAdjustments() []*CMsgEconPlayerStrangeCountAdjustment {
	if m != nil {
		return m.PlayerStrangeCountAdjustments
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetAutomaticSurrender() bool {
	if m != nil && m.AutomaticSurrender != nil {
		return *m.AutomaticSurrender
	}
	return false
}

func (m *CMsgGameMatchSignOut) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetLegacyMassDisconnect() bool {
	if m != nil && m.LegacyMassDisconnect != nil {
		return *m.LegacyMassDisconnect
	}
	return false
}

func (m *CMsgGameMatchSignOut) GetPoorNetworkConditions() *CMsgPoorNetworkConditions {
	if m != nil {
		return m.PoorNetworkConditions
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetAdditionalMsgs() []*CMsgGameMatchSignOut_CAdditionalSignoutMsg {
	if m != nil {
		return m.AdditionalMsgs
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetSocialFeedEvents() []*CMsgGameMatchSignOut_CSocialFeedMatchEvent {
	if m != nil {
		return m.SocialFeedEvents
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetAverageNetworthDelta() int32 {
	if m != nil && m.AverageNetworthDelta != nil {
		return *m.AverageNetworthDelta
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetNetworthDeltaMin10() int32 {
	if m != nil && m.NetworthDeltaMin10 != nil {
		return *m.NetworthDeltaMin10
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetNetworthDeltaMin20() int32 {
	if m != nil && m.NetworthDeltaMin20 != nil {
		return *m.NetworthDeltaMin20
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetMaximumLosingNetworthLead() int32 {
	if m != nil && m.MaximumLosingNetworthLead != nil {
		return *m.MaximumLosingNetworthLead
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetAverageExperienceDelta() int32 {
	if m != nil && m.AverageExperienceDelta != nil {
		return *m.AverageExperienceDelta
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetExperienceDeltaMin10() int32 {
	if m != nil && m.ExperienceDeltaMin10 != nil {
		return *m.ExperienceDeltaMin10
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetExperienceDeltaMin20() int32 {
	if m != nil && m.ExperienceDeltaMin20 != nil {
		return *m.ExperienceDeltaMin20
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetBonusGoldWinnerMin10() int32 {
	if m != nil && m.BonusGoldWinnerMin10 != nil {
		return *m.BonusGoldWinnerMin10
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetBonusGoldWinnerMin20() int32 {
	if m != nil && m.BonusGoldWinnerMin20 != nil {
		return *m.BonusGoldWinnerMin20
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetBonusGoldWinnerTotal() uint32 {
	if m != nil && m.BonusGoldWinnerTotal != nil {
		return *m.BonusGoldWinnerTotal
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetBonusGoldLoserMin10() int32 {
	if m != nil && m.BonusGoldLoserMin10 != nil {
		return *m.BonusGoldLoserMin10
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetBonusGoldLoserMin20() int32 {
	if m != nil && m.BonusGoldLoserMin20 != nil {
		return *m.BonusGoldLoserMin20
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetBonusGoldLoserTotal() uint32 {
	if m != nil && m.BonusGoldLoserTotal != nil {
		return *m.BonusGoldLoserTotal
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetCustomGameData() *CMsgGameMatchSignOut_CCustomGameData {
	if m != nil {
		return m.CustomGameData
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetMatchFlags() uint32 {
	if m != nil && m.MatchFlags != nil {
		return *m.MatchFlags
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetTeamScores() []uint32 {
	if m != nil {
		return m.TeamScores
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetPreGameDuration() uint32 {
	if m != nil && m.PreGameDuration != nil {
		return *m.PreGameDuration
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetEventGameLeaderboardEntries() []*CMsgGameMatchSignOut_EventGameLeaderboardEntry {
	if m != nil {
		return m.EventGameLeaderboardEntries
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetWardPlacements() []*CMsgGameMatchSignOut_WardPlacement {
	if m != nil {
		return m.WardPlacements
	}
	return nil
}

func (m *CMsgGameMatchSignOut) GetBountyRuneGoldWinners() uint32 {
	if m != nil && m.BountyRuneGoldWinners != nil {
		return *m.BountyRuneGoldWinners
	}
	return 0
}

func (m *CMsgGameMatchSignOut) GetBountyRuneGoldLosers() uint32 {
	if m != nil && m.BountyRuneGoldLosers != nil {
		return *m.BountyRuneGoldLosers
	}
	return 0
}

type CMsgGameMatchSignOut_CTeam struct {
	Players          []*CMsgGameMatchSignOut_CTeam_CPlayer `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgGameMatchSignOut_CTeam) Reset()                    { *m = CMsgGameMatchSignOut_CTeam{} }
func (m *CMsgGameMatchSignOut_CTeam) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOut_CTeam) ProtoMessage()               {}
func (*CMsgGameMatchSignOut_CTeam) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{12, 0} }

func (m *CMsgGameMatchSignOut_CTeam) GetPlayers() []*CMsgGameMatchSignOut_CTeam_CPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

type CMsgGameMatchSignOut_CTeam_CPlayer struct {
	SteamId                  *uint64                                             `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	HeroId                   *uint32                                             `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Items                    []uint32                                            `protobuf:"varint,4,rep,name=items" json:"items,omitempty"`
	Gold                     *uint32                                             `protobuf:"varint,5,opt,name=gold" json:"gold,omitempty"`
	Kills                    *uint32                                             `protobuf:"varint,6,opt,name=kills" json:"kills,omitempty"`
	Deaths                   *uint32                                             `protobuf:"varint,7,opt,name=deaths" json:"deaths,omitempty"`
	Assists                  *uint32                                             `protobuf:"varint,8,opt,name=assists" json:"assists,omitempty"`
	LeaverStatus             *uint32                                             `protobuf:"varint,9,opt,name=leaver_status,json=leaverStatus" json:"leaver_status,omitempty"`
	LastHits                 *uint32                                             `protobuf:"varint,10,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies                   *uint32                                             `protobuf:"varint,11,opt,name=denies" json:"denies,omitempty"`
	GoldPerMin               *uint32                                             `protobuf:"varint,12,opt,name=gold_per_min,json=goldPerMin" json:"gold_per_min,omitempty"`
	XpPerMinute              *uint32                                             `protobuf:"varint,13,opt,name=xp_per_minute,json=xpPerMinute" json:"xp_per_minute,omitempty"`
	GoldSpent                *uint32                                             `protobuf:"varint,14,opt,name=gold_spent,json=goldSpent" json:"gold_spent,omitempty"`
	Level                    *uint32                                             `protobuf:"varint,15,opt,name=level" json:"level,omitempty"`
	ScaledHeroDamage         *uint32                                             `protobuf:"varint,16,opt,name=scaled_hero_damage,json=scaledHeroDamage" json:"scaled_hero_damage,omitempty"`
	ScaledTowerDamage        *uint32                                             `protobuf:"varint,17,opt,name=scaled_tower_damage,json=scaledTowerDamage" json:"scaled_tower_damage,omitempty"`
	ScaledHeroHealing        *uint32                                             `protobuf:"varint,18,opt,name=scaled_hero_healing,json=scaledHeroHealing" json:"scaled_hero_healing,omitempty"`
	TimeLastSeen             *uint32                                             `protobuf:"varint,19,opt,name=time_last_seen,json=timeLastSeen" json:"time_last_seen,omitempty"`
	SupportAbilityValue      *uint32                                             `protobuf:"varint,20,opt,name=support_ability_value,json=supportAbilityValue" json:"support_ability_value,omitempty"`
	PartyId                  *uint64                                             `protobuf:"varint,21,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	ScaledKills              *float32                                            `protobuf:"fixed32,24,opt,name=scaled_kills,json=scaledKills" json:"scaled_kills,omitempty"`
	ScaledDeaths             *float32                                            `protobuf:"fixed32,25,opt,name=scaled_deaths,json=scaledDeaths" json:"scaled_deaths,omitempty"`
	ScaledAssists            *float32                                            `protobuf:"fixed32,26,opt,name=scaled_assists,json=scaledAssists" json:"scaled_assists,omitempty"`
	ClaimedFarmGold          *uint32                                             `protobuf:"varint,27,opt,name=claimed_farm_gold,json=claimedFarmGold" json:"claimed_farm_gold,omitempty"`
	SupportGold              *uint32                                             `protobuf:"varint,28,opt,name=support_gold,json=supportGold" json:"support_gold,omitempty"`
	ClaimedDenies            *uint32                                             `protobuf:"varint,29,opt,name=claimed_denies,json=claimedDenies" json:"claimed_denies,omitempty"`
	ClaimedMisses            *uint32                                             `protobuf:"varint,30,opt,name=claimed_misses,json=claimedMisses" json:"claimed_misses,omitempty"`
	Misses                   *uint32                                             `protobuf:"varint,31,opt,name=misses" json:"misses,omitempty"`
	NetWorth                 *uint32                                             `protobuf:"varint,34,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	HeroDamage               *uint32                                             `protobuf:"varint,37,opt,name=hero_damage,json=heroDamage" json:"hero_damage,omitempty"`
	TowerDamage              *uint32                                             `protobuf:"varint,38,opt,name=tower_damage,json=towerDamage" json:"tower_damage,omitempty"`
	HeroHealing              *uint32                                             `protobuf:"varint,39,opt,name=hero_healing,json=heroHealing" json:"hero_healing,omitempty"`
	AbilityUpgrades          []*CMatchPlayerAbilityUpgrade                       `protobuf:"bytes,32,rep,name=ability_upgrades,json=abilityUpgrades" json:"ability_upgrades,omitempty"`
	AdditionalUnitsInventory []*CMatchAdditionalUnitInventory                    `protobuf:"bytes,33,rep,name=additional_units_inventory,json=additionalUnitsInventory" json:"additional_units_inventory,omitempty"`
	PermanentBuffs           []*CMatchPlayerPermanentBuff                        `protobuf:"bytes,40,rep,name=permanent_buffs,json=permanentBuffs" json:"permanent_buffs,omitempty"`
	CustomGameData           *CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData `protobuf:"bytes,35,opt,name=custom_game_data,json=customGameData" json:"custom_game_data,omitempty"`
	MatchPlayerFlags         *uint32                                             `protobuf:"varint,36,opt,name=match_player_flags,json=matchPlayerFlags" json:"match_player_flags,omitempty"`
	TalentAbilityIds         []uint32                                            `protobuf:"varint,41,rep,name=talent_ability_ids,json=talentAbilityIds" json:"talent_ability_ids,omitempty"`
	HeroPickOrder            *uint32                                             `protobuf:"varint,42,opt,name=hero_pick_order,json=heroPickOrder" json:"hero_pick_order,omitempty"`
	HeroWasRandomed          *bool                                               `protobuf:"varint,43,opt,name=hero_was_randomed,json=heroWasRandomed" json:"hero_was_randomed,omitempty"`
	HeroWasBonus             *bool                                               `protobuf:"varint,44,opt,name=hero_was_bonus,json=heroWasBonus" json:"hero_was_bonus,omitempty"`
	Lane                     *uint32                                             `protobuf:"varint,45,opt,name=lane" json:"lane,omitempty"`
	TimedStats               []*CMatchPlayerTimedStats                           `protobuf:"bytes,46,rep,name=timed_stats,json=timedStats" json:"timed_stats,omitempty"`
	IsUsingPlusGuide         *bool                                               `protobuf:"varint,47,opt,name=is_using_plus_guide,json=isUsingPlusGuide" json:"is_using_plus_guide,omitempty"`
	XXX_unrecognized         []byte                                              `json:"-"`
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) Reset()         { *m = CMsgGameMatchSignOut_CTeam_CPlayer{} }
func (m *CMsgGameMatchSignOut_CTeam_CPlayer) String() string { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOut_CTeam_CPlayer) ProtoMessage()    {}
func (*CMsgGameMatchSignOut_CTeam_CPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{12, 0, 0}
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetItems() []uint32 {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetLeaverStatus() uint32 {
	if m != nil && m.LeaverStatus != nil {
		return *m.LeaverStatus
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetDenies() uint32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetGoldPerMin() uint32 {
	if m != nil && m.GoldPerMin != nil {
		return *m.GoldPerMin
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetXpPerMinute() uint32 {
	if m != nil && m.XpPerMinute != nil {
		return *m.XpPerMinute
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetGoldSpent() uint32 {
	if m != nil && m.GoldSpent != nil {
		return *m.GoldSpent
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetScaledHeroDamage() uint32 {
	if m != nil && m.ScaledHeroDamage != nil {
		return *m.ScaledHeroDamage
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetScaledTowerDamage() uint32 {
	if m != nil && m.ScaledTowerDamage != nil {
		return *m.ScaledTowerDamage
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetScaledHeroHealing() uint32 {
	if m != nil && m.ScaledHeroHealing != nil {
		return *m.ScaledHeroHealing
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetTimeLastSeen() uint32 {
	if m != nil && m.TimeLastSeen != nil {
		return *m.TimeLastSeen
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetSupportAbilityValue() uint32 {
	if m != nil && m.SupportAbilityValue != nil {
		return *m.SupportAbilityValue
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetScaledKills() float32 {
	if m != nil && m.ScaledKills != nil {
		return *m.ScaledKills
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetScaledDeaths() float32 {
	if m != nil && m.ScaledDeaths != nil {
		return *m.ScaledDeaths
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetScaledAssists() float32 {
	if m != nil && m.ScaledAssists != nil {
		return *m.ScaledAssists
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetClaimedFarmGold() uint32 {
	if m != nil && m.ClaimedFarmGold != nil {
		return *m.ClaimedFarmGold
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetSupportGold() uint32 {
	if m != nil && m.SupportGold != nil {
		return *m.SupportGold
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetClaimedDenies() uint32 {
	if m != nil && m.ClaimedDenies != nil {
		return *m.ClaimedDenies
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetClaimedMisses() uint32 {
	if m != nil && m.ClaimedMisses != nil {
		return *m.ClaimedMisses
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetMisses() uint32 {
	if m != nil && m.Misses != nil {
		return *m.Misses
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetHeroDamage() uint32 {
	if m != nil && m.HeroDamage != nil {
		return *m.HeroDamage
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetTowerDamage() uint32 {
	if m != nil && m.TowerDamage != nil {
		return *m.TowerDamage
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetHeroHealing() uint32 {
	if m != nil && m.HeroHealing != nil {
		return *m.HeroHealing
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetAbilityUpgrades() []*CMatchPlayerAbilityUpgrade {
	if m != nil {
		return m.AbilityUpgrades
	}
	return nil
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetAdditionalUnitsInventory() []*CMatchAdditionalUnitInventory {
	if m != nil {
		return m.AdditionalUnitsInventory
	}
	return nil
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetPermanentBuffs() []*CMatchPlayerPermanentBuff {
	if m != nil {
		return m.PermanentBuffs
	}
	return nil
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetCustomGameData() *CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData {
	if m != nil {
		return m.CustomGameData
	}
	return nil
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetMatchPlayerFlags() uint32 {
	if m != nil && m.MatchPlayerFlags != nil {
		return *m.MatchPlayerFlags
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetTalentAbilityIds() []uint32 {
	if m != nil {
		return m.TalentAbilityIds
	}
	return nil
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetHeroPickOrder() uint32 {
	if m != nil && m.HeroPickOrder != nil {
		return *m.HeroPickOrder
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetHeroWasRandomed() bool {
	if m != nil && m.HeroWasRandomed != nil {
		return *m.HeroWasRandomed
	}
	return false
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetHeroWasBonus() bool {
	if m != nil && m.HeroWasBonus != nil {
		return *m.HeroWasBonus
	}
	return false
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetLane() uint32 {
	if m != nil && m.Lane != nil {
		return *m.Lane
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetTimedStats() []*CMatchPlayerTimedStats {
	if m != nil {
		return m.TimedStats
	}
	return nil
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer) GetIsUsingPlusGuide() bool {
	if m != nil && m.IsUsingPlusGuide != nil {
		return *m.IsUsingPlusGuide
	}
	return false
}

type CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData struct {
	DotaTeam         *uint32 `protobuf:"varint,1,opt,name=dota_team,json=dotaTeam" json:"dota_team,omitempty"`
	Winner           *bool   `protobuf:"varint,2,opt,name=winner" json:"winner,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData) Reset() {
	*m = CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData{}
}
func (m *CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData) ProtoMessage() {}
func (*CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{12, 0, 0, 0}
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData) GetDotaTeam() uint32 {
	if m != nil && m.DotaTeam != nil {
		return *m.DotaTeam
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData) GetWinner() bool {
	if m != nil && m.Winner != nil {
		return *m.Winner
	}
	return false
}

type CMsgGameMatchSignOut_CAdditionalSignoutMsg struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Contents         []byte  `protobuf:"bytes,2,opt,name=contents" json:"contents,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOut_CAdditionalSignoutMsg) Reset() {
	*m = CMsgGameMatchSignOut_CAdditionalSignoutMsg{}
}
func (m *CMsgGameMatchSignOut_CAdditionalSignoutMsg) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGameMatchSignOut_CAdditionalSignoutMsg) ProtoMessage() {}
func (*CMsgGameMatchSignOut_CAdditionalSignoutMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{12, 1}
}

func (m *CMsgGameMatchSignOut_CAdditionalSignoutMsg) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CAdditionalSignoutMsg) GetContents() []byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

type CMsgGameMatchSignOut_CSocialFeedMatchEvent struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Timestamp        *uint32 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	EventType        *uint32 `protobuf:"varint,3,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	GameTime         *int32  `protobuf:"varint,4,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	ReplayTime       *uint32 `protobuf:"varint,5,opt,name=replay_time,json=replayTime" json:"replay_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOut_CSocialFeedMatchEvent) Reset() {
	*m = CMsgGameMatchSignOut_CSocialFeedMatchEvent{}
}
func (m *CMsgGameMatchSignOut_CSocialFeedMatchEvent) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGameMatchSignOut_CSocialFeedMatchEvent) ProtoMessage() {}
func (*CMsgGameMatchSignOut_CSocialFeedMatchEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{12, 2}
}

func (m *CMsgGameMatchSignOut_CSocialFeedMatchEvent) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CSocialFeedMatchEvent) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CSocialFeedMatchEvent) GetEventType() uint32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CSocialFeedMatchEvent) GetGameTime() int32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CMsgGameMatchSignOut_CSocialFeedMatchEvent) GetReplayTime() uint32 {
	if m != nil && m.ReplayTime != nil {
		return *m.ReplayTime
	}
	return 0
}

type CMsgGameMatchSignOut_CCustomGameData struct {
	PublishTimestamp *uint32 `protobuf:"varint,1,opt,name=publish_timestamp,json=publishTimestamp" json:"publish_timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOut_CCustomGameData) Reset()         { *m = CMsgGameMatchSignOut_CCustomGameData{} }
func (m *CMsgGameMatchSignOut_CCustomGameData) String() string { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOut_CCustomGameData) ProtoMessage()    {}
func (*CMsgGameMatchSignOut_CCustomGameData) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{12, 3}
}

func (m *CMsgGameMatchSignOut_CCustomGameData) GetPublishTimestamp() uint32 {
	if m != nil && m.PublishTimestamp != nil {
		return *m.PublishTimestamp
	}
	return 0
}

type CMsgGameMatchSignOut_EventGameLeaderboardEntry struct {
	NameSuffix       *string `protobuf:"bytes,1,opt,name=name_suffix,json=nameSuffix" json:"name_suffix,omitempty"`
	Score            *int32  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	ExtraData_1      *uint32 `protobuf:"varint,3,opt,name=extra_data_1,json=extraData1" json:"extra_data_1,omitempty"`
	ExtraData_2      *uint32 `protobuf:"varint,4,opt,name=extra_data_2,json=extraData2" json:"extra_data_2,omitempty"`
	ExtraData_3      *uint32 `protobuf:"varint,5,opt,name=extra_data_3,json=extraData3" json:"extra_data_3,omitempty"`
	ExtraData_4      *uint32 `protobuf:"varint,6,opt,name=extra_data_4,json=extraData4" json:"extra_data_4,omitempty"`
	ExtraData_5      *uint32 `protobuf:"varint,7,opt,name=extra_data_5,json=extraData5" json:"extra_data_5,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) Reset() {
	*m = CMsgGameMatchSignOut_EventGameLeaderboardEntry{}
}
func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGameMatchSignOut_EventGameLeaderboardEntry) ProtoMessage() {}
func (*CMsgGameMatchSignOut_EventGameLeaderboardEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{12, 4}
}

func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) GetNameSuffix() string {
	if m != nil && m.NameSuffix != nil {
		return *m.NameSuffix
	}
	return ""
}

func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) GetExtraData_1() uint32 {
	if m != nil && m.ExtraData_1 != nil {
		return *m.ExtraData_1
	}
	return 0
}

func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) GetExtraData_2() uint32 {
	if m != nil && m.ExtraData_2 != nil {
		return *m.ExtraData_2
	}
	return 0
}

func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) GetExtraData_3() uint32 {
	if m != nil && m.ExtraData_3 != nil {
		return *m.ExtraData_3
	}
	return 0
}

func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) GetExtraData_4() uint32 {
	if m != nil && m.ExtraData_4 != nil {
		return *m.ExtraData_4
	}
	return 0
}

func (m *CMsgGameMatchSignOut_EventGameLeaderboardEntry) GetExtraData_5() uint32 {
	if m != nil && m.ExtraData_5 != nil {
		return *m.ExtraData_5
	}
	return 0
}

type CMsgGameMatchSignOut_WardPlacement struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	TeamId           *uint32 `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	PlacedTime       *uint32 `protobuf:"varint,3,opt,name=placed_time,json=placedTime" json:"placed_time,omitempty"`
	BuildingState    *uint32 `protobuf:"varint,4,opt,name=building_state,json=buildingState" json:"building_state,omitempty"`
	CreepState       *uint32 `protobuf:"varint,5,opt,name=creep_state,json=creepState" json:"creep_state,omitempty"`
	RoshanAlive      *bool   `protobuf:"varint,6,opt,name=roshan_alive,json=roshanAlive" json:"roshan_alive,omitempty"`
	PositionX        *uint32 `protobuf:"varint,7,opt,name=position_x,json=positionX" json:"position_x,omitempty"`
	PositionY        *uint32 `protobuf:"varint,8,opt,name=position_y,json=positionY" json:"position_y,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOut_WardPlacement) Reset()         { *m = CMsgGameMatchSignOut_WardPlacement{} }
func (m *CMsgGameMatchSignOut_WardPlacement) String() string { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOut_WardPlacement) ProtoMessage()    {}
func (*CMsgGameMatchSignOut_WardPlacement) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{12, 5}
}

func (m *CMsgGameMatchSignOut_WardPlacement) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CMsgGameMatchSignOut_WardPlacement) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgGameMatchSignOut_WardPlacement) GetPlacedTime() uint32 {
	if m != nil && m.PlacedTime != nil {
		return *m.PlacedTime
	}
	return 0
}

func (m *CMsgGameMatchSignOut_WardPlacement) GetBuildingState() uint32 {
	if m != nil && m.BuildingState != nil {
		return *m.BuildingState
	}
	return 0
}

func (m *CMsgGameMatchSignOut_WardPlacement) GetCreepState() uint32 {
	if m != nil && m.CreepState != nil {
		return *m.CreepState
	}
	return 0
}

func (m *CMsgGameMatchSignOut_WardPlacement) GetRoshanAlive() bool {
	if m != nil && m.RoshanAlive != nil {
		return *m.RoshanAlive
	}
	return false
}

func (m *CMsgGameMatchSignOut_WardPlacement) GetPositionX() uint32 {
	if m != nil && m.PositionX != nil {
		return *m.PositionX
	}
	return 0
}

func (m *CMsgGameMatchSignOut_WardPlacement) GetPositionY() uint32 {
	if m != nil && m.PositionY != nil {
		return *m.PositionY
	}
	return 0
}

type CMsgSignOutDraftInfo struct {
	RadiantCaptainAccountId *uint32                  `protobuf:"varint,1,opt,name=radiant_captain_account_id,json=radiantCaptainAccountId" json:"radiant_captain_account_id,omitempty"`
	DireCaptainAccountId    *uint32                  `protobuf:"varint,2,opt,name=dire_captain_account_id,json=direCaptainAccountId" json:"dire_captain_account_id,omitempty"`
	PicksBans               []*CMatchHeroSelectEvent `protobuf:"bytes,3,rep,name=picks_bans,json=picksBans" json:"picks_bans,omitempty"`
	XXX_unrecognized        []byte                   `json:"-"`
}

func (m *CMsgSignOutDraftInfo) Reset()                    { *m = CMsgSignOutDraftInfo{} }
func (m *CMsgSignOutDraftInfo) String() string            { return proto.CompactTextString(m) }
func (*CMsgSignOutDraftInfo) ProtoMessage()               {}
func (*CMsgSignOutDraftInfo) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{13} }

func (m *CMsgSignOutDraftInfo) GetRadiantCaptainAccountId() uint32 {
	if m != nil && m.RadiantCaptainAccountId != nil {
		return *m.RadiantCaptainAccountId
	}
	return 0
}

func (m *CMsgSignOutDraftInfo) GetDireCaptainAccountId() uint32 {
	if m != nil && m.DireCaptainAccountId != nil {
		return *m.DireCaptainAccountId
	}
	return 0
}

func (m *CMsgSignOutDraftInfo) GetPicksBans() []*CMatchHeroSelectEvent {
	if m != nil {
		return m.PicksBans
	}
	return nil
}

type CMsgSignOutBotInfo struct {
	AllowCheats          *bool              `protobuf:"varint,1,opt,name=allow_cheats,json=allowCheats" json:"allow_cheats,omitempty"`
	BotDifficultyRadiant *DOTABotDifficulty `protobuf:"varint,2,opt,name=bot_difficulty_radiant,json=botDifficultyRadiant,enum=dota.DOTABotDifficulty,def=0" json:"bot_difficulty_radiant,omitempty"`
	CreatedLobby         *bool              `protobuf:"varint,3,opt,name=created_lobby,json=createdLobby" json:"created_lobby,omitempty"`
	BotDifficultyDire    *DOTABotDifficulty `protobuf:"varint,5,opt,name=bot_difficulty_dire,json=botDifficultyDire,enum=dota.DOTABotDifficulty,def=0" json:"bot_difficulty_dire,omitempty"`
	XXX_unrecognized     []byte             `json:"-"`
}

func (m *CMsgSignOutBotInfo) Reset()                    { *m = CMsgSignOutBotInfo{} }
func (m *CMsgSignOutBotInfo) String() string            { return proto.CompactTextString(m) }
func (*CMsgSignOutBotInfo) ProtoMessage()               {}
func (*CMsgSignOutBotInfo) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{14} }

const Default_CMsgSignOutBotInfo_BotDifficultyRadiant DOTABotDifficulty = DOTABotDifficulty_BOT_DIFFICULTY_PASSIVE
const Default_CMsgSignOutBotInfo_BotDifficultyDire DOTABotDifficulty = DOTABotDifficulty_BOT_DIFFICULTY_PASSIVE

func (m *CMsgSignOutBotInfo) GetAllowCheats() bool {
	if m != nil && m.AllowCheats != nil {
		return *m.AllowCheats
	}
	return false
}

func (m *CMsgSignOutBotInfo) GetBotDifficultyRadiant() DOTABotDifficulty {
	if m != nil && m.BotDifficultyRadiant != nil {
		return *m.BotDifficultyRadiant
	}
	return Default_CMsgSignOutBotInfo_BotDifficultyRadiant
}

func (m *CMsgSignOutBotInfo) GetCreatedLobby() bool {
	if m != nil && m.CreatedLobby != nil {
		return *m.CreatedLobby
	}
	return false
}

func (m *CMsgSignOutBotInfo) GetBotDifficultyDire() DOTABotDifficulty {
	if m != nil && m.BotDifficultyDire != nil {
		return *m.BotDifficultyDire
	}
	return Default_CMsgSignOutBotInfo_BotDifficultyDire
}

type CMsgSignOutPlayerStats struct {
	AccountId         *int32   `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MatchId           *uint64  `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Rank              *uint32  `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
	HeroId            *uint32  `protobuf:"varint,4,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Rampages          *uint32  `protobuf:"varint,5,opt,name=rampages" json:"rampages,omitempty"`
	TripleKills       *uint32  `protobuf:"varint,6,opt,name=triple_kills,json=tripleKills" json:"triple_kills,omitempty"`
	FirstBloodClaimed *uint32  `protobuf:"varint,7,opt,name=first_blood_claimed,json=firstBloodClaimed" json:"first_blood_claimed,omitempty"`
	FirstBloodGiven   *uint32  `protobuf:"varint,8,opt,name=first_blood_given,json=firstBloodGiven" json:"first_blood_given,omitempty"`
	CouriersKilled    *uint32  `protobuf:"varint,9,opt,name=couriers_killed,json=couriersKilled" json:"couriers_killed,omitempty"`
	AegisesSnatched   *uint32  `protobuf:"varint,10,opt,name=aegises_snatched,json=aegisesSnatched" json:"aegises_snatched,omitempty"`
	CheesesEaten      *uint32  `protobuf:"varint,11,opt,name=cheeses_eaten,json=cheesesEaten" json:"cheeses_eaten,omitempty"`
	CreepsStacked     *uint32  `protobuf:"varint,12,opt,name=creeps_stacked,json=creepsStacked" json:"creeps_stacked,omitempty"`
	FightScore        *float32 `protobuf:"fixed32,13,opt,name=fight_score,json=fightScore" json:"fight_score,omitempty"`
	FarmScore         *float32 `protobuf:"fixed32,14,opt,name=farm_score,json=farmScore" json:"farm_score,omitempty"`
	SupportScore      *float32 `protobuf:"fixed32,15,opt,name=support_score,json=supportScore" json:"support_score,omitempty"`
	PushScore         *float32 `protobuf:"fixed32,16,opt,name=push_score,json=pushScore" json:"push_score,omitempty"`
	Kills             *uint32  `protobuf:"varint,17,opt,name=kills" json:"kills,omitempty"`
	Deaths            *uint32  `protobuf:"varint,18,opt,name=deaths" json:"deaths,omitempty"`
	Assists           *uint32  `protobuf:"varint,19,opt,name=assists" json:"assists,omitempty"`
	LastHits          *uint32  `protobuf:"varint,20,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies            *uint32  `protobuf:"varint,21,opt,name=denies" json:"denies,omitempty"`
	Gpm               *float32 `protobuf:"fixed32,22,opt,name=gpm" json:"gpm,omitempty"`
	Xppm              *float32 `protobuf:"fixed32,23,opt,name=xppm" json:"xppm,omitempty"`
	NetWorth          *float32 `protobuf:"fixed32,24,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	Damage            *float32 `protobuf:"fixed32,25,opt,name=damage" json:"damage,omitempty"`
	Heals             *float32 `protobuf:"fixed32,26,opt,name=heals" json:"heals,omitempty"`
	RapiersPurchased  *uint32  `protobuf:"varint,27,opt,name=rapiers_purchased,json=rapiersPurchased" json:"rapiers_purchased,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *CMsgSignOutPlayerStats) Reset()                    { *m = CMsgSignOutPlayerStats{} }
func (m *CMsgSignOutPlayerStats) String() string            { return proto.CompactTextString(m) }
func (*CMsgSignOutPlayerStats) ProtoMessage()               {}
func (*CMsgSignOutPlayerStats) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{15} }

func (m *CMsgSignOutPlayerStats) GetAccountId() int32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetRampages() uint32 {
	if m != nil && m.Rampages != nil {
		return *m.Rampages
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetTripleKills() uint32 {
	if m != nil && m.TripleKills != nil {
		return *m.TripleKills
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetFirstBloodClaimed() uint32 {
	if m != nil && m.FirstBloodClaimed != nil {
		return *m.FirstBloodClaimed
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetFirstBloodGiven() uint32 {
	if m != nil && m.FirstBloodGiven != nil {
		return *m.FirstBloodGiven
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetCouriersKilled() uint32 {
	if m != nil && m.CouriersKilled != nil {
		return *m.CouriersKilled
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetAegisesSnatched() uint32 {
	if m != nil && m.AegisesSnatched != nil {
		return *m.AegisesSnatched
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetCheesesEaten() uint32 {
	if m != nil && m.CheesesEaten != nil {
		return *m.CheesesEaten
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetCreepsStacked() uint32 {
	if m != nil && m.CreepsStacked != nil {
		return *m.CreepsStacked
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetFightScore() float32 {
	if m != nil && m.FightScore != nil {
		return *m.FightScore
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetFarmScore() float32 {
	if m != nil && m.FarmScore != nil {
		return *m.FarmScore
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetSupportScore() float32 {
	if m != nil && m.SupportScore != nil {
		return *m.SupportScore
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetPushScore() float32 {
	if m != nil && m.PushScore != nil {
		return *m.PushScore
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetDenies() uint32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetGpm() float32 {
	if m != nil && m.Gpm != nil {
		return *m.Gpm
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetXppm() float32 {
	if m != nil && m.Xppm != nil {
		return *m.Xppm
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetNetWorth() float32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetDamage() float32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetHeals() float32 {
	if m != nil && m.Heals != nil {
		return *m.Heals
	}
	return 0
}

func (m *CMsgSignOutPlayerStats) GetRapiersPurchased() uint32 {
	if m != nil && m.RapiersPurchased != nil {
		return *m.RapiersPurchased
	}
	return 0
}

type CMsgSignOutCommunicationSummary struct {
	Players          []*CMsgSignOutCommunicationSummary_PlayerCommunication `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte                                                 `json:"-"`
}

func (m *CMsgSignOutCommunicationSummary) Reset()         { *m = CMsgSignOutCommunicationSummary{} }
func (m *CMsgSignOutCommunicationSummary) String() string { return proto.CompactTextString(m) }
func (*CMsgSignOutCommunicationSummary) ProtoMessage()    {}
func (*CMsgSignOutCommunicationSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{16}
}

func (m *CMsgSignOutCommunicationSummary) GetPlayers() []*CMsgSignOutCommunicationSummary_PlayerCommunication {
	if m != nil {
		return m.Players
	}
	return nil
}

type CMsgSignOutCommunicationSummary_PlayerCommunication struct {
	AccountId                   *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Pings                       *uint32 `protobuf:"varint,2,opt,name=pings" json:"pings,omitempty"`
	MaxPingsPerInterval         *uint32 `protobuf:"varint,3,opt,name=max_pings_per_interval,json=maxPingsPerInterval" json:"max_pings_per_interval,omitempty"`
	TeammatePings               *uint32 `protobuf:"varint,4,opt,name=teammate_pings,json=teammatePings" json:"teammate_pings,omitempty"`
	MaxTeammatePingsPerInterval *uint32 `protobuf:"varint,5,opt,name=max_teammate_pings_per_interval,json=maxTeammatePingsPerInterval" json:"max_teammate_pings_per_interval,omitempty"`
	TeamChatMessages            *uint32 `protobuf:"varint,6,opt,name=team_chat_messages,json=teamChatMessages" json:"team_chat_messages,omitempty"`
	AllChatMessages             *uint32 `protobuf:"varint,7,opt,name=all_chat_messages,json=allChatMessages" json:"all_chat_messages,omitempty"`
	ChatWheelMessages           *uint32 `protobuf:"varint,8,opt,name=chat_wheel_messages,json=chatWheelMessages" json:"chat_wheel_messages,omitempty"`
	Pauses                      *uint32 `protobuf:"varint,9,opt,name=pauses" json:"pauses,omitempty"`
	Unpauses                    *uint32 `protobuf:"varint,10,opt,name=unpauses" json:"unpauses,omitempty"`
	LinesDrawn                  *uint32 `protobuf:"varint,11,opt,name=lines_drawn,json=linesDrawn" json:"lines_drawn,omitempty"`
	VoiceChatSeconds            *uint32 `protobuf:"varint,12,opt,name=voice_chat_seconds,json=voiceChatSeconds" json:"voice_chat_seconds,omitempty"`
	ChatMutes                   *uint32 `protobuf:"varint,13,opt,name=chat_mutes,json=chatMutes" json:"chat_mutes,omitempty"`
	VoiceMutes                  *uint32 `protobuf:"varint,14,opt,name=voice_mutes,json=voiceMutes" json:"voice_mutes,omitempty"`
	XXX_unrecognized            []byte  `json:"-"`
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) Reset() {
	*m = CMsgSignOutCommunicationSummary_PlayerCommunication{}
}
func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSignOutCommunicationSummary_PlayerCommunication) ProtoMessage() {}
func (*CMsgSignOutCommunicationSummary_PlayerCommunication) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{16, 0}
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetPings() uint32 {
	if m != nil && m.Pings != nil {
		return *m.Pings
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetMaxPingsPerInterval() uint32 {
	if m != nil && m.MaxPingsPerInterval != nil {
		return *m.MaxPingsPerInterval
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetTeammatePings() uint32 {
	if m != nil && m.TeammatePings != nil {
		return *m.TeammatePings
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetMaxTeammatePingsPerInterval() uint32 {
	if m != nil && m.MaxTeammatePingsPerInterval != nil {
		return *m.MaxTeammatePingsPerInterval
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetTeamChatMessages() uint32 {
	if m != nil && m.TeamChatMessages != nil {
		return *m.TeamChatMessages
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetAllChatMessages() uint32 {
	if m != nil && m.AllChatMessages != nil {
		return *m.AllChatMessages
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetChatWheelMessages() uint32 {
	if m != nil && m.ChatWheelMessages != nil {
		return *m.ChatWheelMessages
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetPauses() uint32 {
	if m != nil && m.Pauses != nil {
		return *m.Pauses
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetUnpauses() uint32 {
	if m != nil && m.Unpauses != nil {
		return *m.Unpauses
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetLinesDrawn() uint32 {
	if m != nil && m.LinesDrawn != nil {
		return *m.LinesDrawn
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetVoiceChatSeconds() uint32 {
	if m != nil && m.VoiceChatSeconds != nil {
		return *m.VoiceChatSeconds
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetChatMutes() uint32 {
	if m != nil && m.ChatMutes != nil {
		return *m.ChatMutes
	}
	return 0
}

func (m *CMsgSignOutCommunicationSummary_PlayerCommunication) GetVoiceMutes() uint32 {
	if m != nil && m.VoiceMutes != nil {
		return *m.VoiceMutes
	}
	return 0
}

type CMsgGameMatchSignoutResponse struct {
	MatchId            *uint64                                        `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	ReplaySalt         *uint32                                        `protobuf:"fixed32,2,opt,name=replay_salt,json=replaySalt" json:"replay_salt,omitempty"`
	TimedRewardDetails []*CLobbyTimedRewardDetails                    `protobuf:"bytes,3,rep,name=timed_reward_details,json=timedRewardDetails" json:"timed_reward_details,omitempty"`
	XpRewardDetails    []*CDOTALobbyMember                            `protobuf:"bytes,4,rep,name=xp_reward_details,json=xpRewardDetails" json:"xp_reward_details,omitempty"`
	Leagueid           *uint32                                        `protobuf:"varint,5,opt,name=leagueid" json:"leagueid,omitempty"`
	MetadataPrivateKey *uint32                                        `protobuf:"fixed32,7,opt,name=metadata_private_key,json=metadataPrivateKey" json:"metadata_private_key,omitempty"`
	MatchDetails       *CMsgDOTAMatch                                 `protobuf:"bytes,8,opt,name=match_details,json=matchDetails" json:"match_details,omitempty"`
	PlayersMetadata    []*CMsgGameMatchSignoutResponse_PlayerMetadata `protobuf:"bytes,9,rep,name=players_metadata,json=playersMetadata" json:"players_metadata,omitempty"`
	XXX_unrecognized   []byte                                         `json:"-"`
}

func (m *CMsgGameMatchSignoutResponse) Reset()                    { *m = CMsgGameMatchSignoutResponse{} }
func (m *CMsgGameMatchSignoutResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignoutResponse) ProtoMessage()               {}
func (*CMsgGameMatchSignoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{17} }

func (m *CMsgGameMatchSignoutResponse) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse) GetReplaySalt() uint32 {
	if m != nil && m.ReplaySalt != nil {
		return *m.ReplaySalt
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse) GetTimedRewardDetails() []*CLobbyTimedRewardDetails {
	if m != nil {
		return m.TimedRewardDetails
	}
	return nil
}

func (m *CMsgGameMatchSignoutResponse) GetXpRewardDetails() []*CDOTALobbyMember {
	if m != nil {
		return m.XpRewardDetails
	}
	return nil
}

func (m *CMsgGameMatchSignoutResponse) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse) GetMetadataPrivateKey() uint32 {
	if m != nil && m.MetadataPrivateKey != nil {
		return *m.MetadataPrivateKey
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse) GetMatchDetails() *CMsgDOTAMatch {
	if m != nil {
		return m.MatchDetails
	}
	return nil
}

func (m *CMsgGameMatchSignoutResponse) GetPlayersMetadata() []*CMsgGameMatchSignoutResponse_PlayerMetadata {
	if m != nil {
		return m.PlayersMetadata
	}
	return nil
}

type CMsgGameMatchSignoutResponse_PlayerMetadata struct {
	HeroId           *uint32 `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	AvgKillsX16      *uint32 `protobuf:"varint,2,opt,name=avg_kills_x16,json=avgKillsX16" json:"avg_kills_x16,omitempty"`
	AvgDeathsX16     *uint32 `protobuf:"varint,3,opt,name=avg_deaths_x16,json=avgDeathsX16" json:"avg_deaths_x16,omitempty"`
	AvgAssistsX16    *uint32 `protobuf:"varint,4,opt,name=avg_assists_x16,json=avgAssistsX16" json:"avg_assists_x16,omitempty"`
	AvgGpmX16        *uint32 `protobuf:"varint,5,opt,name=avg_gpm_x16,json=avgGpmX16" json:"avg_gpm_x16,omitempty"`
	AvgXpmX16        *uint32 `protobuf:"varint,6,opt,name=avg_xpm_x16,json=avgXpmX16" json:"avg_xpm_x16,omitempty"`
	BestKillsX16     *uint32 `protobuf:"varint,7,opt,name=best_kills_x16,json=bestKillsX16" json:"best_kills_x16,omitempty"`
	BestAssistsX16   *uint32 `protobuf:"varint,8,opt,name=best_assists_x16,json=bestAssistsX16" json:"best_assists_x16,omitempty"`
	BestGpmX16       *uint32 `protobuf:"varint,9,opt,name=best_gpm_x16,json=bestGpmX16" json:"best_gpm_x16,omitempty"`
	BestXpmX16       *uint32 `protobuf:"varint,10,opt,name=best_xpm_x16,json=bestXpmX16" json:"best_xpm_x16,omitempty"`
	WinStreak        *uint32 `protobuf:"varint,11,opt,name=win_streak,json=winStreak" json:"win_streak,omitempty"`
	BestWinStreak    *uint32 `protobuf:"varint,12,opt,name=best_win_streak,json=bestWinStreak" json:"best_win_streak,omitempty"`
	GamesPlayed      *uint32 `protobuf:"varint,13,opt,name=games_played,json=gamesPlayed" json:"games_played,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) Reset() {
	*m = CMsgGameMatchSignoutResponse_PlayerMetadata{}
}
func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGameMatchSignoutResponse_PlayerMetadata) ProtoMessage() {}
func (*CMsgGameMatchSignoutResponse_PlayerMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{17, 0}
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetAvgKillsX16() uint32 {
	if m != nil && m.AvgKillsX16 != nil {
		return *m.AvgKillsX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetAvgDeathsX16() uint32 {
	if m != nil && m.AvgDeathsX16 != nil {
		return *m.AvgDeathsX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetAvgAssistsX16() uint32 {
	if m != nil && m.AvgAssistsX16 != nil {
		return *m.AvgAssistsX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetAvgGpmX16() uint32 {
	if m != nil && m.AvgGpmX16 != nil {
		return *m.AvgGpmX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetAvgXpmX16() uint32 {
	if m != nil && m.AvgXpmX16 != nil {
		return *m.AvgXpmX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetBestKillsX16() uint32 {
	if m != nil && m.BestKillsX16 != nil {
		return *m.BestKillsX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetBestAssistsX16() uint32 {
	if m != nil && m.BestAssistsX16 != nil {
		return *m.BestAssistsX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetBestGpmX16() uint32 {
	if m != nil && m.BestGpmX16 != nil {
		return *m.BestGpmX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetBestXpmX16() uint32 {
	if m != nil && m.BestXpmX16 != nil {
		return *m.BestXpmX16
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetWinStreak() uint32 {
	if m != nil && m.WinStreak != nil {
		return *m.WinStreak
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetBestWinStreak() uint32 {
	if m != nil && m.BestWinStreak != nil {
		return *m.BestWinStreak
	}
	return 0
}

func (m *CMsgGameMatchSignoutResponse_PlayerMetadata) GetGamesPlayed() uint32 {
	if m != nil && m.GamesPlayed != nil {
		return *m.GamesPlayed
	}
	return 0
}

type CMsgTimedRewardContainer struct {
	TimedRewardDetails []*CLobbyTimedRewardDetails `protobuf:"bytes,1,rep,name=timed_reward_details,json=timedRewardDetails" json:"timed_reward_details,omitempty"`
	XXX_unrecognized   []byte                      `json:"-"`
}

func (m *CMsgTimedRewardContainer) Reset()                    { *m = CMsgTimedRewardContainer{} }
func (m *CMsgTimedRewardContainer) String() string            { return proto.CompactTextString(m) }
func (*CMsgTimedRewardContainer) ProtoMessage()               {}
func (*CMsgTimedRewardContainer) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{18} }

func (m *CMsgTimedRewardContainer) GetTimedRewardDetails() []*CLobbyTimedRewardDetails {
	if m != nil {
		return m.TimedRewardDetails
	}
	return nil
}

type CMsgGameMatchSignOutPermissionRequest struct {
	ServerVersion    *uint32 `protobuf:"varint,1,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
	LocalAttempt     *uint32 `protobuf:"varint,2,opt,name=local_attempt,json=localAttempt" json:"local_attempt,omitempty"`
	TotalAttempt     *uint32 `protobuf:"varint,3,opt,name=total_attempt,json=totalAttempt" json:"total_attempt,omitempty"`
	SecondsWaited    *uint32 `protobuf:"varint,4,opt,name=seconds_waited,json=secondsWaited" json:"seconds_waited,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOutPermissionRequest) Reset()         { *m = CMsgGameMatchSignOutPermissionRequest{} }
func (m *CMsgGameMatchSignOutPermissionRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOutPermissionRequest) ProtoMessage()    {}
func (*CMsgGameMatchSignOutPermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{19}
}

func (m *CMsgGameMatchSignOutPermissionRequest) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return 0
}

func (m *CMsgGameMatchSignOutPermissionRequest) GetLocalAttempt() uint32 {
	if m != nil && m.LocalAttempt != nil {
		return *m.LocalAttempt
	}
	return 0
}

func (m *CMsgGameMatchSignOutPermissionRequest) GetTotalAttempt() uint32 {
	if m != nil && m.TotalAttempt != nil {
		return *m.TotalAttempt
	}
	return 0
}

func (m *CMsgGameMatchSignOutPermissionRequest) GetSecondsWaited() uint32 {
	if m != nil && m.SecondsWaited != nil {
		return *m.SecondsWaited
	}
	return 0
}

type CMsgGameMatchSignOutPermissionResponse struct {
	PermissionGranted *bool   `protobuf:"varint,1,opt,name=permission_granted,json=permissionGranted,def=0" json:"permission_granted,omitempty"`
	AbandonSignout    *bool   `protobuf:"varint,2,opt,name=abandon_signout,json=abandonSignout,def=0" json:"abandon_signout,omitempty"`
	RetryDelaySeconds *uint32 `protobuf:"varint,3,opt,name=retry_delay_seconds,json=retryDelaySeconds,def=0" json:"retry_delay_seconds,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOutPermissionResponse) Reset() {
	*m = CMsgGameMatchSignOutPermissionResponse{}
}
func (m *CMsgGameMatchSignOutPermissionResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOutPermissionResponse) ProtoMessage()    {}
func (*CMsgGameMatchSignOutPermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{20}
}

const Default_CMsgGameMatchSignOutPermissionResponse_PermissionGranted bool = false
const Default_CMsgGameMatchSignOutPermissionResponse_AbandonSignout bool = false
const Default_CMsgGameMatchSignOutPermissionResponse_RetryDelaySeconds uint32 = 0

func (m *CMsgGameMatchSignOutPermissionResponse) GetPermissionGranted() bool {
	if m != nil && m.PermissionGranted != nil {
		return *m.PermissionGranted
	}
	return Default_CMsgGameMatchSignOutPermissionResponse_PermissionGranted
}

func (m *CMsgGameMatchSignOutPermissionResponse) GetAbandonSignout() bool {
	if m != nil && m.AbandonSignout != nil {
		return *m.AbandonSignout
	}
	return Default_CMsgGameMatchSignOutPermissionResponse_AbandonSignout
}

func (m *CMsgGameMatchSignOutPermissionResponse) GetRetryDelaySeconds() uint32 {
	if m != nil && m.RetryDelaySeconds != nil {
		return *m.RetryDelaySeconds
	}
	return Default_CMsgGameMatchSignOutPermissionResponse_RetryDelaySeconds
}

type CMsgGameMatchSignOutEventGameData struct {
	EventId          *EEvent `protobuf:"varint,1,opt,name=event_id,json=eventId,enum=dota.EEvent,def=0" json:"event_id,omitempty"`
	GameName         *string `protobuf:"bytes,2,opt,name=game_name,json=gameName" json:"game_name,omitempty"`
	MapName          *string `protobuf:"bytes,3,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	EventGameData    []byte  `protobuf:"bytes,4,opt,name=event_game_data,json=eventGameData" json:"event_game_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameMatchSignOutEventGameData) Reset()         { *m = CMsgGameMatchSignOutEventGameData{} }
func (m *CMsgGameMatchSignOutEventGameData) String() string { return proto.CompactTextString(m) }
func (*CMsgGameMatchSignOutEventGameData) ProtoMessage()    {}
func (*CMsgGameMatchSignOutEventGameData) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{21}
}

const Default_CMsgGameMatchSignOutEventGameData_EventId EEvent = EEvent_EVENT_ID_NONE

func (m *CMsgGameMatchSignOutEventGameData) GetEventId() EEvent {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return Default_CMsgGameMatchSignOutEventGameData_EventId
}

func (m *CMsgGameMatchSignOutEventGameData) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *CMsgGameMatchSignOutEventGameData) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CMsgGameMatchSignOutEventGameData) GetEventGameData() []byte {
	if m != nil {
		return m.EventGameData
	}
	return nil
}

type CMsgDOTALiveScoreboardUpdate struct {
	TournamentId       *uint32                            `protobuf:"varint,1,opt,name=tournament_id,json=tournamentId" json:"tournament_id,omitempty"`
	TournamentGameId   *uint32                            `protobuf:"varint,2,opt,name=tournament_game_id,json=tournamentGameId" json:"tournament_game_id,omitempty"`
	Duration           *float32                           `protobuf:"fixed32,3,opt,name=duration" json:"duration,omitempty"`
	HltvDelay          *int32                             `protobuf:"varint,4,opt,name=hltv_delay,json=hltvDelay" json:"hltv_delay,omitempty"`
	TeamGood           *CMsgDOTALiveScoreboardUpdate_Team `protobuf:"bytes,5,opt,name=team_good,json=teamGood" json:"team_good,omitempty"`
	TeamBad            *CMsgDOTALiveScoreboardUpdate_Team `protobuf:"bytes,6,opt,name=team_bad,json=teamBad" json:"team_bad,omitempty"`
	RoshanRespawnTimer *uint32                            `protobuf:"varint,7,opt,name=roshan_respawn_timer,json=roshanRespawnTimer" json:"roshan_respawn_timer,omitempty"`
	LeagueId           *uint32                            `protobuf:"varint,8,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	MatchId            *uint64                            `protobuf:"varint,9,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XXX_unrecognized   []byte                             `json:"-"`
}

func (m *CMsgDOTALiveScoreboardUpdate) Reset()                    { *m = CMsgDOTALiveScoreboardUpdate{} }
func (m *CMsgDOTALiveScoreboardUpdate) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTALiveScoreboardUpdate) ProtoMessage()               {}
func (*CMsgDOTALiveScoreboardUpdate) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{22} }

func (m *CMsgDOTALiveScoreboardUpdate) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate) GetTournamentGameId() uint32 {
	if m != nil && m.TournamentGameId != nil {
		return *m.TournamentGameId
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate) GetHltvDelay() int32 {
	if m != nil && m.HltvDelay != nil {
		return *m.HltvDelay
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate) GetTeamGood() *CMsgDOTALiveScoreboardUpdate_Team {
	if m != nil {
		return m.TeamGood
	}
	return nil
}

func (m *CMsgDOTALiveScoreboardUpdate) GetTeamBad() *CMsgDOTALiveScoreboardUpdate_Team {
	if m != nil {
		return m.TeamBad
	}
	return nil
}

func (m *CMsgDOTALiveScoreboardUpdate) GetRoshanRespawnTimer() uint32 {
	if m != nil && m.RoshanRespawnTimer != nil {
		return *m.RoshanRespawnTimer
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgDOTALiveScoreboardUpdate_Team struct {
	Players          []*CMsgDOTALiveScoreboardUpdate_Team_Player `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	Score            *uint32                                     `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	TowerState       *uint32                                     `protobuf:"varint,3,opt,name=tower_state,json=towerState" json:"tower_state,omitempty"`
	BarracksState    *uint32                                     `protobuf:"varint,4,opt,name=barracks_state,json=barracksState" json:"barracks_state,omitempty"`
	HeroPicks        []uint32                                    `protobuf:"varint,5,rep,name=hero_picks,json=heroPicks" json:"hero_picks,omitempty"`
	HeroBans         []uint32                                    `protobuf:"varint,6,rep,name=hero_bans,json=heroBans" json:"hero_bans,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgDOTALiveScoreboardUpdate_Team) Reset()         { *m = CMsgDOTALiveScoreboardUpdate_Team{} }
func (m *CMsgDOTALiveScoreboardUpdate_Team) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALiveScoreboardUpdate_Team) ProtoMessage()    {}
func (*CMsgDOTALiveScoreboardUpdate_Team) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{22, 0}
}

func (m *CMsgDOTALiveScoreboardUpdate_Team) GetPlayers() []*CMsgDOTALiveScoreboardUpdate_Team_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTALiveScoreboardUpdate_Team) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team) GetTowerState() uint32 {
	if m != nil && m.TowerState != nil {
		return *m.TowerState
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team) GetBarracksState() uint32 {
	if m != nil && m.BarracksState != nil {
		return *m.BarracksState
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team) GetHeroPicks() []uint32 {
	if m != nil {
		return m.HeroPicks
	}
	return nil
}

func (m *CMsgDOTALiveScoreboardUpdate_Team) GetHeroBans() []uint32 {
	if m != nil {
		return m.HeroBans
	}
	return nil
}

type CMsgDOTALiveScoreboardUpdate_Team_Player struct {
	PlayerSlot       *uint32                                                     `protobuf:"varint,1,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	PlayerName       *string                                                     `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	HeroName         *string                                                     `protobuf:"bytes,3,opt,name=hero_name,json=heroName" json:"hero_name,omitempty"`
	HeroId           *uint32                                                     `protobuf:"varint,4,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Kills            *uint32                                                     `protobuf:"varint,5,opt,name=kills" json:"kills,omitempty"`
	Deaths           *uint32                                                     `protobuf:"varint,6,opt,name=deaths" json:"deaths,omitempty"`
	Assists          *uint32                                                     `protobuf:"varint,7,opt,name=assists" json:"assists,omitempty"`
	LastHits         *uint32                                                     `protobuf:"varint,8,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies           *uint32                                                     `protobuf:"varint,9,opt,name=denies" json:"denies,omitempty"`
	Gold             *uint32                                                     `protobuf:"varint,10,opt,name=gold" json:"gold,omitempty"`
	Level            *uint32                                                     `protobuf:"varint,11,opt,name=level" json:"level,omitempty"`
	GoldPerMin       *float32                                                    `protobuf:"fixed32,12,opt,name=gold_per_min,json=goldPerMin" json:"gold_per_min,omitempty"`
	XpPerMin         *float32                                                    `protobuf:"fixed32,13,opt,name=xp_per_min,json=xpPerMin" json:"xp_per_min,omitempty"`
	UltimateState    *CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState `protobuf:"varint,14,opt,name=ultimate_state,json=ultimateState,enum=dota.CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState,def=0" json:"ultimate_state,omitempty"`
	UltimateCooldown *float32                                                    `protobuf:"fixed32,15,opt,name=ultimate_cooldown,json=ultimateCooldown" json:"ultimate_cooldown,omitempty"`
	Item0            *uint32                                                     `protobuf:"varint,16,opt,name=item0" json:"item0,omitempty"`
	Item1            *uint32                                                     `protobuf:"varint,17,opt,name=item1" json:"item1,omitempty"`
	Item2            *uint32                                                     `protobuf:"varint,18,opt,name=item2" json:"item2,omitempty"`
	Item3            *uint32                                                     `protobuf:"varint,19,opt,name=item3" json:"item3,omitempty"`
	Item4            *uint32                                                     `protobuf:"varint,20,opt,name=item4" json:"item4,omitempty"`
	Item5            *uint32                                                     `protobuf:"varint,21,opt,name=item5" json:"item5,omitempty"`
	RespawnTimer     *uint32                                                     `protobuf:"varint,22,opt,name=respawn_timer,json=respawnTimer" json:"respawn_timer,omitempty"`
	AccountId        *uint32                                                     `protobuf:"varint,23,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PositionX        *float32                                                    `protobuf:"fixed32,24,opt,name=position_x,json=positionX" json:"position_x,omitempty"`
	PositionY        *float32                                                    `protobuf:"fixed32,25,opt,name=position_y,json=positionY" json:"position_y,omitempty"`
	NetWorth         *uint32                                                     `protobuf:"varint,26,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	Abilities        []*CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility     `protobuf:"bytes,27,rep,name=abilities" json:"abilities,omitempty"`
	XXX_unrecognized []byte                                                      `json:"-"`
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) Reset() {
	*m = CMsgDOTALiveScoreboardUpdate_Team_Player{}
}
func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTALiveScoreboardUpdate_Team_Player) ProtoMessage()    {}
func (*CMsgDOTALiveScoreboardUpdate_Team_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{22, 0, 0}
}

const Default_CMsgDOTALiveScoreboardUpdate_Team_Player_UltimateState CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState = CMsgDOTALiveScoreboardUpdate_Team_Player_k_EDOTAUltimateStateNotLearned

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetPlayerSlot() uint32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetHeroName() string {
	if m != nil && m.HeroName != nil {
		return *m.HeroName
	}
	return ""
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetDenies() uint32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetGoldPerMin() float32 {
	if m != nil && m.GoldPerMin != nil {
		return *m.GoldPerMin
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetXpPerMin() float32 {
	if m != nil && m.XpPerMin != nil {
		return *m.XpPerMin
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetUltimateState() CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState {
	if m != nil && m.UltimateState != nil {
		return *m.UltimateState
	}
	return Default_CMsgDOTALiveScoreboardUpdate_Team_Player_UltimateState
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetUltimateCooldown() float32 {
	if m != nil && m.UltimateCooldown != nil {
		return *m.UltimateCooldown
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetItem0() uint32 {
	if m != nil && m.Item0 != nil {
		return *m.Item0
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetItem1() uint32 {
	if m != nil && m.Item1 != nil {
		return *m.Item1
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetItem2() uint32 {
	if m != nil && m.Item2 != nil {
		return *m.Item2
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetItem3() uint32 {
	if m != nil && m.Item3 != nil {
		return *m.Item3
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetItem4() uint32 {
	if m != nil && m.Item4 != nil {
		return *m.Item4
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetItem5() uint32 {
	if m != nil && m.Item5 != nil {
		return *m.Item5
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetRespawnTimer() uint32 {
	if m != nil && m.RespawnTimer != nil {
		return *m.RespawnTimer
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetPositionX() float32 {
	if m != nil && m.PositionX != nil {
		return *m.PositionX
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetPositionY() float32 {
	if m != nil && m.PositionY != nil {
		return *m.PositionY
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player) GetAbilities() []*CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility {
	if m != nil {
		return m.Abilities
	}
	return nil
}

type CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility struct {
	AbilityId        *uint32 `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	AbilityLevel     *uint32 `protobuf:"varint,2,opt,name=ability_level,json=abilityLevel" json:"ability_level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility) Reset() {
	*m = CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility{}
}
func (m *CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility) ProtoMessage() {}
func (*CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{22, 0, 0, 0}
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility) GetAbilityId() uint32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility) GetAbilityLevel() uint32 {
	if m != nil && m.AbilityLevel != nil {
		return *m.AbilityLevel
	}
	return 0
}

type CMsgDOTARequestPlayerResources struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	PlayerId         *uint32 `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTARequestPlayerResources) Reset()         { *m = CMsgDOTARequestPlayerResources{} }
func (m *CMsgDOTARequestPlayerResources) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestPlayerResources) ProtoMessage()    {}
func (*CMsgDOTARequestPlayerResources) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{23}
}

func (m *CMsgDOTARequestPlayerResources) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTARequestPlayerResources) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CMsgDOTARequestPlayerResourcesResponse struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	Rank             *uint32 `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	PlayerId         *uint32 `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PreventTextChat  *bool   `protobuf:"varint,4,opt,name=prevent_text_chat,json=preventTextChat" json:"prevent_text_chat,omitempty"`
	PreventVoiceChat *bool   `protobuf:"varint,5,opt,name=prevent_voice_chat,json=preventVoiceChat" json:"prevent_voice_chat,omitempty"`
	LowPriority      *bool   `protobuf:"varint,6,opt,name=low_priority,json=lowPriority" json:"low_priority,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTARequestPlayerResourcesResponse) Reset() {
	*m = CMsgDOTARequestPlayerResourcesResponse{}
}
func (m *CMsgDOTARequestPlayerResourcesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestPlayerResourcesResponse) ProtoMessage()    {}
func (*CMsgDOTARequestPlayerResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{24}
}

func (m *CMsgDOTARequestPlayerResourcesResponse) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTARequestPlayerResourcesResponse) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMsgDOTARequestPlayerResourcesResponse) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CMsgDOTARequestPlayerResourcesResponse) GetPreventTextChat() bool {
	if m != nil && m.PreventTextChat != nil {
		return *m.PreventTextChat
	}
	return false
}

func (m *CMsgDOTARequestPlayerResourcesResponse) GetPreventVoiceChat() bool {
	if m != nil && m.PreventVoiceChat != nil {
		return *m.PreventVoiceChat
	}
	return false
}

func (m *CMsgDOTARequestPlayerResourcesResponse) GetLowPriority() bool {
	if m != nil && m.LowPriority != nil {
		return *m.LowPriority
	}
	return false
}

type CMsgDOTARequestBatchPlayerResources struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,packed,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	RankTypes        []uint32 `protobuf:"varint,4,rep,packed,name=rank_types,json=rankTypes" json:"rank_types,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTARequestBatchPlayerResources) Reset()         { *m = CMsgDOTARequestBatchPlayerResources{} }
func (m *CMsgDOTARequestBatchPlayerResources) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestBatchPlayerResources) ProtoMessage()    {}
func (*CMsgDOTARequestBatchPlayerResources) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{25}
}

func (m *CMsgDOTARequestBatchPlayerResources) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *CMsgDOTARequestBatchPlayerResources) GetRankTypes() []uint32 {
	if m != nil {
		return m.RankTypes
	}
	return nil
}

type CMsgDOTARequestBatchPlayerResourcesResponse struct {
	Results          []*CMsgDOTARequestBatchPlayerResourcesResponse_Result `protobuf:"bytes,6,rep,name=results" json:"results,omitempty"`
	XXX_unrecognized []byte                                                `json:"-"`
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse) Reset() {
	*m = CMsgDOTARequestBatchPlayerResourcesResponse{}
}
func (m *CMsgDOTARequestBatchPlayerResourcesResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARequestBatchPlayerResourcesResponse) ProtoMessage() {}
func (*CMsgDOTARequestBatchPlayerResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{26}
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse) GetResults() []*CMsgDOTARequestBatchPlayerResourcesResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type CMsgDOTARequestBatchPlayerResourcesResponse_Result struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PreventTextChat  *bool   `protobuf:"varint,2,opt,name=prevent_text_chat,json=preventTextChat" json:"prevent_text_chat,omitempty"`
	PreventVoiceChat *bool   `protobuf:"varint,3,opt,name=prevent_voice_chat,json=preventVoiceChat" json:"prevent_voice_chat,omitempty"`
	Rank             *uint32 `protobuf:"varint,4,opt,name=rank" json:"rank,omitempty"`
	RankCalibrated   *bool   `protobuf:"varint,5,opt,name=rank_calibrated,json=rankCalibrated" json:"rank_calibrated,omitempty"`
	LowPriority      *bool   `protobuf:"varint,6,opt,name=low_priority,json=lowPriority" json:"low_priority,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse_Result) Reset() {
	*m = CMsgDOTARequestBatchPlayerResourcesResponse_Result{}
}
func (m *CMsgDOTARequestBatchPlayerResourcesResponse_Result) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARequestBatchPlayerResourcesResponse_Result) ProtoMessage() {}
func (*CMsgDOTARequestBatchPlayerResourcesResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{26, 0}
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse_Result) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse_Result) GetPreventTextChat() bool {
	if m != nil && m.PreventTextChat != nil {
		return *m.PreventTextChat
	}
	return false
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse_Result) GetPreventVoiceChat() bool {
	if m != nil && m.PreventVoiceChat != nil {
		return *m.PreventVoiceChat
	}
	return false
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse_Result) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse_Result) GetRankCalibrated() bool {
	if m != nil && m.RankCalibrated != nil {
		return *m.RankCalibrated
	}
	return false
}

func (m *CMsgDOTARequestBatchPlayerResourcesResponse_Result) GetLowPriority() bool {
	if m != nil && m.LowPriority != nil {
		return *m.LowPriority
	}
	return false
}

type CMsgDOTAPlayerFailedToConnect struct {
	FailedLoaders    []uint64 `protobuf:"fixed64,1,rep,name=failed_loaders,json=failedLoaders" json:"failed_loaders,omitempty"`
	AbandonedLoaders []uint64 `protobuf:"fixed64,2,rep,name=abandoned_loaders,json=abandonedLoaders" json:"abandoned_loaders,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAPlayerFailedToConnect) Reset()                    { *m = CMsgDOTAPlayerFailedToConnect{} }
func (m *CMsgDOTAPlayerFailedToConnect) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAPlayerFailedToConnect) ProtoMessage()               {}
func (*CMsgDOTAPlayerFailedToConnect) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{27} }

func (m *CMsgDOTAPlayerFailedToConnect) GetFailedLoaders() []uint64 {
	if m != nil {
		return m.FailedLoaders
	}
	return nil
}

func (m *CMsgDOTAPlayerFailedToConnect) GetAbandonedLoaders() []uint64 {
	if m != nil {
		return m.AbandonedLoaders
	}
	return nil
}

type CMsgGCToRelayConnect struct {
	SourceTvPublicAddr  *uint32 `protobuf:"varint,1,opt,name=source_tv_public_addr,json=sourceTvPublicAddr" json:"source_tv_public_addr,omitempty"`
	SourceTvPrivateAddr *uint32 `protobuf:"varint,2,opt,name=source_tv_private_addr,json=sourceTvPrivateAddr" json:"source_tv_private_addr,omitempty"`
	SourceTvPort        *uint32 `protobuf:"varint,3,opt,name=source_tv_port,json=sourceTvPort" json:"source_tv_port,omitempty"`
	GameServerSteamId   *uint64 `protobuf:"varint,4,opt,name=game_server_steam_id,json=gameServerSteamId" json:"game_server_steam_id,omitempty"`
	ParentCount         *uint32 `protobuf:"varint,5,opt,name=parent_count,json=parentCount" json:"parent_count,omitempty"`
	TvUniqueSecretCode  *uint64 `protobuf:"fixed64,6,opt,name=tv_unique_secret_code,json=tvUniqueSecretCode" json:"tv_unique_secret_code,omitempty"`
	SourceTvSteamid     *uint64 `protobuf:"fixed64,7,opt,name=source_tv_steamid,json=sourceTvSteamid" json:"source_tv_steamid,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *CMsgGCToRelayConnect) Reset()                    { *m = CMsgGCToRelayConnect{} }
func (m *CMsgGCToRelayConnect) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToRelayConnect) ProtoMessage()               {}
func (*CMsgGCToRelayConnect) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{28} }

func (m *CMsgGCToRelayConnect) GetSourceTvPublicAddr() uint32 {
	if m != nil && m.SourceTvPublicAddr != nil {
		return *m.SourceTvPublicAddr
	}
	return 0
}

func (m *CMsgGCToRelayConnect) GetSourceTvPrivateAddr() uint32 {
	if m != nil && m.SourceTvPrivateAddr != nil {
		return *m.SourceTvPrivateAddr
	}
	return 0
}

func (m *CMsgGCToRelayConnect) GetSourceTvPort() uint32 {
	if m != nil && m.SourceTvPort != nil {
		return *m.SourceTvPort
	}
	return 0
}

func (m *CMsgGCToRelayConnect) GetGameServerSteamId() uint64 {
	if m != nil && m.GameServerSteamId != nil {
		return *m.GameServerSteamId
	}
	return 0
}

func (m *CMsgGCToRelayConnect) GetParentCount() uint32 {
	if m != nil && m.ParentCount != nil {
		return *m.ParentCount
	}
	return 0
}

func (m *CMsgGCToRelayConnect) GetTvUniqueSecretCode() uint64 {
	if m != nil && m.TvUniqueSecretCode != nil {
		return *m.TvUniqueSecretCode
	}
	return 0
}

func (m *CMsgGCToRelayConnect) GetSourceTvSteamid() uint64 {
	if m != nil && m.SourceTvSteamid != nil {
		return *m.SourceTvSteamid
	}
	return 0
}

type CMsgGCGCToLANServerRelayConnect struct {
	RelaySteamid     *uint64 `protobuf:"fixed64,1,opt,name=relay_steamid,json=relaySteamid" json:"relay_steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCGCToLANServerRelayConnect) Reset()         { *m = CMsgGCGCToLANServerRelayConnect{} }
func (m *CMsgGCGCToLANServerRelayConnect) String() string { return proto.CompactTextString(m) }
func (*CMsgGCGCToLANServerRelayConnect) ProtoMessage()    {}
func (*CMsgGCGCToLANServerRelayConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{29}
}

func (m *CMsgGCGCToLANServerRelayConnect) GetRelaySteamid() uint64 {
	if m != nil && m.RelaySteamid != nil {
		return *m.RelaySteamid
	}
	return 0
}

type CMsgGCToRelayConnectResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCToRelayConnectResponse) Reset()                    { *m = CMsgGCToRelayConnectResponse{} }
func (m *CMsgGCToRelayConnectResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToRelayConnectResponse) ProtoMessage()               {}
func (*CMsgGCToRelayConnectResponse) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{30} }

type CMsgGCBanStatusRequest struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCBanStatusRequest) Reset()                    { *m = CMsgGCBanStatusRequest{} }
func (m *CMsgGCBanStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCBanStatusRequest) ProtoMessage()               {}
func (*CMsgGCBanStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{31} }

func (m *CMsgGCBanStatusRequest) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGCBanStatusResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	LowPriority      *bool   `protobuf:"varint,2,opt,name=low_priority,json=lowPriority" json:"low_priority,omitempty"`
	TextChatBanned   *bool   `protobuf:"varint,3,opt,name=text_chat_banned,json=textChatBanned" json:"text_chat_banned,omitempty"`
	VoiceChatBanned  *bool   `protobuf:"varint,4,opt,name=voice_chat_banned,json=voiceChatBanned" json:"voice_chat_banned,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCBanStatusResponse) Reset()                    { *m = CMsgGCBanStatusResponse{} }
func (m *CMsgGCBanStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCBanStatusResponse) ProtoMessage()               {}
func (*CMsgGCBanStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{32} }

func (m *CMsgGCBanStatusResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgGCBanStatusResponse) GetLowPriority() bool {
	if m != nil && m.LowPriority != nil {
		return *m.LowPriority
	}
	return false
}

func (m *CMsgGCBanStatusResponse) GetTextChatBanned() bool {
	if m != nil && m.TextChatBanned != nil {
		return *m.TextChatBanned
	}
	return false
}

func (m *CMsgGCBanStatusResponse) GetVoiceChatBanned() bool {
	if m != nil && m.VoiceChatBanned != nil {
		return *m.VoiceChatBanned
	}
	return false
}

type CMsgTournamentItemEvent struct {
	KillerAccountId  *uint32                 `protobuf:"fixed32,1,opt,name=killer_account_id,json=killerAccountId" json:"killer_account_id,omitempty"`
	VictimAccountId  *uint32                 `protobuf:"fixed32,2,opt,name=victim_account_id,json=victimAccountId" json:"victim_account_id,omitempty"`
	EventType        *DOTA_TournamentEvents  `protobuf:"varint,3,opt,name=event_type,json=eventType,enum=dota.DOTA_TournamentEvents,def=0" json:"event_type,omitempty"`
	TvDelay          *int32                  `protobuf:"varint,4,opt,name=tv_delay,json=tvDelay" json:"tv_delay,omitempty"`
	DotaTime         *int32                  `protobuf:"varint,5,opt,name=dota_time,json=dotaTime" json:"dota_time,omitempty"`
	ReplayTime       *float32                `protobuf:"fixed32,6,opt,name=replay_time,json=replayTime" json:"replay_time,omitempty"`
	LootList         *string                 `protobuf:"bytes,7,opt,name=loot_list,json=lootList" json:"loot_list,omitempty"`
	EventTeam        *uint32                 `protobuf:"varint,8,opt,name=event_team,json=eventTeam" json:"event_team,omitempty"`
	MultiKillCount   *uint32                 `protobuf:"varint,9,opt,name=multi_kill_count,json=multiKillCount" json:"multi_kill_count,omitempty"`
	WinnerScore      *uint32                 `protobuf:"varint,10,opt,name=winner_score,json=winnerScore" json:"winner_score,omitempty"`
	LoserScore       *uint32                 `protobuf:"varint,11,opt,name=loser_score,json=loserScore" json:"loser_score,omitempty"`
	HeroStatues      []*CProtoItemHeroStatue `protobuf:"bytes,12,rep,name=hero_statues,json=heroStatues" json:"hero_statues,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CMsgTournamentItemEvent) Reset()                    { *m = CMsgTournamentItemEvent{} }
func (m *CMsgTournamentItemEvent) String() string            { return proto.CompactTextString(m) }
func (*CMsgTournamentItemEvent) ProtoMessage()               {}
func (*CMsgTournamentItemEvent) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{33} }

const Default_CMsgTournamentItemEvent_EventType DOTA_TournamentEvents = DOTA_TournamentEvents_TE_FIRST_BLOOD

func (m *CMsgTournamentItemEvent) GetKillerAccountId() uint32 {
	if m != nil && m.KillerAccountId != nil {
		return *m.KillerAccountId
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetVictimAccountId() uint32 {
	if m != nil && m.VictimAccountId != nil {
		return *m.VictimAccountId
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetEventType() DOTA_TournamentEvents {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return Default_CMsgTournamentItemEvent_EventType
}

func (m *CMsgTournamentItemEvent) GetTvDelay() int32 {
	if m != nil && m.TvDelay != nil {
		return *m.TvDelay
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetDotaTime() int32 {
	if m != nil && m.DotaTime != nil {
		return *m.DotaTime
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetReplayTime() float32 {
	if m != nil && m.ReplayTime != nil {
		return *m.ReplayTime
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetLootList() string {
	if m != nil && m.LootList != nil {
		return *m.LootList
	}
	return ""
}

func (m *CMsgTournamentItemEvent) GetEventTeam() uint32 {
	if m != nil && m.EventTeam != nil {
		return *m.EventTeam
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetMultiKillCount() uint32 {
	if m != nil && m.MultiKillCount != nil {
		return *m.MultiKillCount
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetWinnerScore() uint32 {
	if m != nil && m.WinnerScore != nil {
		return *m.WinnerScore
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetLoserScore() uint32 {
	if m != nil && m.LoserScore != nil {
		return *m.LoserScore
	}
	return 0
}

func (m *CMsgTournamentItemEvent) GetHeroStatues() []*CProtoItemHeroStatue {
	if m != nil {
		return m.HeroStatues
	}
	return nil
}

type CMsgTournamentItemEventResponse struct {
	EventType        *DOTA_TournamentEvents `protobuf:"varint,1,opt,name=event_type,json=eventType,enum=dota.DOTA_TournamentEvents,def=0" json:"event_type,omitempty"`
	ViewersGranted   *uint32                `protobuf:"varint,6,opt,name=viewers_granted,json=viewersGranted" json:"viewers_granted,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CMsgTournamentItemEventResponse) Reset()         { *m = CMsgTournamentItemEventResponse{} }
func (m *CMsgTournamentItemEventResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTournamentItemEventResponse) ProtoMessage()    {}
func (*CMsgTournamentItemEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{34}
}

const Default_CMsgTournamentItemEventResponse_EventType DOTA_TournamentEvents = DOTA_TournamentEvents_TE_FIRST_BLOOD

func (m *CMsgTournamentItemEventResponse) GetEventType() DOTA_TournamentEvents {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return Default_CMsgTournamentItemEventResponse_EventType
}

func (m *CMsgTournamentItemEventResponse) GetViewersGranted() uint32 {
	if m != nil && m.ViewersGranted != nil {
		return *m.ViewersGranted
	}
	return 0
}

type CMsgTeamFanfare struct {
	MatchId          *uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTeamFanfare) Reset()                    { *m = CMsgTeamFanfare{} }
func (m *CMsgTeamFanfare) String() string            { return proto.CompactTextString(m) }
func (*CMsgTeamFanfare) ProtoMessage()               {}
func (*CMsgTeamFanfare) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{35} }

func (m *CMsgTeamFanfare) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgResponseTeamFanfare struct {
	FanfareGoodguys  *uint32 `protobuf:"varint,1,opt,name=fanfare_goodguys,json=fanfareGoodguys" json:"fanfare_goodguys,omitempty"`
	FanfareBadguys   *uint32 `protobuf:"varint,2,opt,name=fanfare_badguys,json=fanfareBadguys" json:"fanfare_badguys,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgResponseTeamFanfare) Reset()                    { *m = CMsgResponseTeamFanfare{} }
func (m *CMsgResponseTeamFanfare) String() string            { return proto.CompactTextString(m) }
func (*CMsgResponseTeamFanfare) ProtoMessage()               {}
func (*CMsgResponseTeamFanfare) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{36} }

func (m *CMsgResponseTeamFanfare) GetFanfareGoodguys() uint32 {
	if m != nil && m.FanfareGoodguys != nil {
		return *m.FanfareGoodguys
	}
	return 0
}

func (m *CMsgResponseTeamFanfare) GetFanfareBadguys() uint32 {
	if m != nil && m.FanfareBadguys != nil {
		return *m.FanfareBadguys
	}
	return 0
}

type CMsgGameServerUploadSaveGame struct {
	GameTime         *uint32  `protobuf:"varint,1,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	SaveGameData     []byte   `protobuf:"bytes,2,opt,name=save_game_data,json=saveGameData" json:"save_game_data,omitempty"`
	LobbyId          *uint64  `protobuf:"varint,3,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	PlayerSteamIds   []uint64 `protobuf:"varint,4,rep,name=player_steam_ids,json=playerSteamIds" json:"player_steam_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGameServerUploadSaveGame) Reset()                    { *m = CMsgGameServerUploadSaveGame{} }
func (m *CMsgGameServerUploadSaveGame) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameServerUploadSaveGame) ProtoMessage()               {}
func (*CMsgGameServerUploadSaveGame) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{37} }

func (m *CMsgGameServerUploadSaveGame) GetGameTime() uint32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CMsgGameServerUploadSaveGame) GetSaveGameData() []byte {
	if m != nil {
		return m.SaveGameData
	}
	return nil
}

func (m *CMsgGameServerUploadSaveGame) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgGameServerUploadSaveGame) GetPlayerSteamIds() []uint64 {
	if m != nil {
		return m.PlayerSteamIds
	}
	return nil
}

type CMsgGameServerSaveGameResult struct {
	Result           *CMsgGameServerSaveGameResult_Result `protobuf:"varint,1,opt,name=result,enum=dota.CMsgGameServerSaveGameResult_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgGameServerSaveGameResult) Reset()                    { *m = CMsgGameServerSaveGameResult{} }
func (m *CMsgGameServerSaveGameResult) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameServerSaveGameResult) ProtoMessage()               {}
func (*CMsgGameServerSaveGameResult) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{38} }

const Default_CMsgGameServerSaveGameResult_Result CMsgGameServerSaveGameResult_Result = CMsgGameServerSaveGameResult_SaveSuccessful

func (m *CMsgGameServerSaveGameResult) GetResult() CMsgGameServerSaveGameResult_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgGameServerSaveGameResult_Result
}

type CMsgGameServerGetLoadGame struct {
	SaveId           *uint32 `protobuf:"varint,1,opt,name=save_id,json=saveId" json:"save_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGameServerGetLoadGame) Reset()                    { *m = CMsgGameServerGetLoadGame{} }
func (m *CMsgGameServerGetLoadGame) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameServerGetLoadGame) ProtoMessage()               {}
func (*CMsgGameServerGetLoadGame) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{39} }

func (m *CMsgGameServerGetLoadGame) GetSaveId() uint32 {
	if m != nil && m.SaveId != nil {
		return *m.SaveId
	}
	return 0
}

type CMsgGameServerGetLoadGameResult struct {
	SaveGameData     []byte `protobuf:"bytes,1,opt,name=save_game_data,json=saveGameData" json:"save_game_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGameServerGetLoadGameResult) Reset()         { *m = CMsgGameServerGetLoadGameResult{} }
func (m *CMsgGameServerGetLoadGameResult) String() string { return proto.CompactTextString(m) }
func (*CMsgGameServerGetLoadGameResult) ProtoMessage()    {}
func (*CMsgGameServerGetLoadGameResult) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{40}
}

func (m *CMsgGameServerGetLoadGameResult) GetSaveGameData() []byte {
	if m != nil {
		return m.SaveGameData
	}
	return nil
}

type CMsgDOTAGenerateDiretidePrizeList struct {
	PrizeList          *uint32 `protobuf:"varint,1,opt,name=prize_list,json=prizeList" json:"prize_list,omitempty"`
	HighestRoshanLevel *uint32 `protobuf:"varint,2,opt,name=highest_roshan_level,json=highestRoshanLevel" json:"highest_roshan_level,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgDOTAGenerateDiretidePrizeList) Reset()         { *m = CMsgDOTAGenerateDiretidePrizeList{} }
func (m *CMsgDOTAGenerateDiretidePrizeList) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGenerateDiretidePrizeList) ProtoMessage()    {}
func (*CMsgDOTAGenerateDiretidePrizeList) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{41}
}

func (m *CMsgDOTAGenerateDiretidePrizeList) GetPrizeList() uint32 {
	if m != nil && m.PrizeList != nil {
		return *m.PrizeList
	}
	return 0
}

func (m *CMsgDOTAGenerateDiretidePrizeList) GetHighestRoshanLevel() uint32 {
	if m != nil && m.HighestRoshanLevel != nil {
		return *m.HighestRoshanLevel
	}
	return 0
}

type CMsgDOTAGenerateDiretidePrizeListResponse struct {
	ItemDefs         []uint32 `protobuf:"varint,1,rep,name=item_defs,json=itemDefs" json:"item_defs,omitempty"`
	SteamIds         []uint64 `protobuf:"fixed64,2,rep,name=steam_ids,json=steamIds" json:"steam_ids,omitempty"`
	PrizeList        *uint32  `protobuf:"varint,3,opt,name=prize_list,json=prizeList" json:"prize_list,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAGenerateDiretidePrizeListResponse) Reset() {
	*m = CMsgDOTAGenerateDiretidePrizeListResponse{}
}
func (m *CMsgDOTAGenerateDiretidePrizeListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAGenerateDiretidePrizeListResponse) ProtoMessage()    {}
func (*CMsgDOTAGenerateDiretidePrizeListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{42}
}

func (m *CMsgDOTAGenerateDiretidePrizeListResponse) GetItemDefs() []uint32 {
	if m != nil {
		return m.ItemDefs
	}
	return nil
}

func (m *CMsgDOTAGenerateDiretidePrizeListResponse) GetSteamIds() []uint64 {
	if m != nil {
		return m.SteamIds
	}
	return nil
}

func (m *CMsgDOTAGenerateDiretidePrizeListResponse) GetPrizeList() uint32 {
	if m != nil && m.PrizeList != nil {
		return *m.PrizeList
	}
	return 0
}

type CMsgDOTARewardDiretidePrizes struct {
	Team             *uint32 `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	PrizeList        *uint32 `protobuf:"varint,2,opt,name=prize_list,json=prizeList" json:"prize_list,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTARewardDiretidePrizes) Reset()                    { *m = CMsgDOTARewardDiretidePrizes{} }
func (m *CMsgDOTARewardDiretidePrizes) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTARewardDiretidePrizes) ProtoMessage()               {}
func (*CMsgDOTARewardDiretidePrizes) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{43} }

func (m *CMsgDOTARewardDiretidePrizes) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CMsgDOTARewardDiretidePrizes) GetPrizeList() uint32 {
	if m != nil && m.PrizeList != nil {
		return *m.PrizeList
	}
	return 0
}

type CMsgDOTADiretidePrizesRewardedResponse struct {
	PrizeList        *uint32 `protobuf:"varint,1,opt,name=prize_list,json=prizeList" json:"prize_list,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTADiretidePrizesRewardedResponse) Reset() {
	*m = CMsgDOTADiretidePrizesRewardedResponse{}
}
func (m *CMsgDOTADiretidePrizesRewardedResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTADiretidePrizesRewardedResponse) ProtoMessage()    {}
func (*CMsgDOTADiretidePrizesRewardedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{44}
}

func (m *CMsgDOTADiretidePrizesRewardedResponse) GetPrizeList() uint32 {
	if m != nil && m.PrizeList != nil {
		return *m.PrizeList
	}
	return 0
}

type CMsgDOTAAwardEventPoints struct {
	AwardPoints      []*CMsgDOTAAwardEventPoints_AwardPoints `protobuf:"bytes,1,rep,name=award_points,json=awardPoints" json:"award_points,omitempty"`
	MatchId          *uint64                                 `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	EventId          *uint32                                 `protobuf:"varint,4,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	Timestamp        *uint32                                 `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	AuditAction      *uint32                                 `protobuf:"varint,6,opt,name=audit_action,json=auditAction" json:"audit_action,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CMsgDOTAAwardEventPoints) Reset()                    { *m = CMsgDOTAAwardEventPoints{} }
func (m *CMsgDOTAAwardEventPoints) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAAwardEventPoints) ProtoMessage()               {}
func (*CMsgDOTAAwardEventPoints) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{45} }

func (m *CMsgDOTAAwardEventPoints) GetAwardPoints() []*CMsgDOTAAwardEventPoints_AwardPoints {
	if m != nil {
		return m.AwardPoints
	}
	return nil
}

func (m *CMsgDOTAAwardEventPoints) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAAwardEventPoints) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgDOTAAwardEventPoints) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAAwardEventPoints) GetAuditAction() uint32 {
	if m != nil && m.AuditAction != nil {
		return *m.AuditAction
	}
	return 0
}

type CMsgDOTAAwardEventPoints_AwardPoints struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Points           *int32  `protobuf:"varint,2,opt,name=points" json:"points,omitempty"`
	PremiumPoints    *int32  `protobuf:"varint,3,opt,name=premium_points,json=premiumPoints" json:"premium_points,omitempty"`
	TradeBanTime     *uint32 `protobuf:"varint,5,opt,name=trade_ban_time,json=tradeBanTime" json:"trade_ban_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAAwardEventPoints_AwardPoints) Reset()         { *m = CMsgDOTAAwardEventPoints_AwardPoints{} }
func (m *CMsgDOTAAwardEventPoints_AwardPoints) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAAwardEventPoints_AwardPoints) ProtoMessage()    {}
func (*CMsgDOTAAwardEventPoints_AwardPoints) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{45, 0}
}

func (m *CMsgDOTAAwardEventPoints_AwardPoints) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAAwardEventPoints_AwardPoints) GetPoints() int32 {
	if m != nil && m.Points != nil {
		return *m.Points
	}
	return 0
}

func (m *CMsgDOTAAwardEventPoints_AwardPoints) GetPremiumPoints() int32 {
	if m != nil && m.PremiumPoints != nil {
		return *m.PremiumPoints
	}
	return 0
}

func (m *CMsgDOTAAwardEventPoints_AwardPoints) GetTradeBanTime() uint32 {
	if m != nil && m.TradeBanTime != nil {
		return *m.TradeBanTime
	}
	return 0
}

type CMsgServerToGCSignoutAwardAdditionalDrops struct {
	Drops            []*CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops `protobuf:"bytes,1,rep,name=drops" json:"drops,omitempty"`
	MatchId          *uint64                                                      `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XXX_unrecognized []byte                                                       `json:"-"`
}

func (m *CMsgServerToGCSignoutAwardAdditionalDrops) Reset() {
	*m = CMsgServerToGCSignoutAwardAdditionalDrops{}
}
func (m *CMsgServerToGCSignoutAwardAdditionalDrops) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCSignoutAwardAdditionalDrops) ProtoMessage()    {}
func (*CMsgServerToGCSignoutAwardAdditionalDrops) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{46}
}

func (m *CMsgServerToGCSignoutAwardAdditionalDrops) GetDrops() []*CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops {
	if m != nil {
		return m.Drops
	}
	return nil
}

func (m *CMsgServerToGCSignoutAwardAdditionalDrops) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops struct {
	LootList         *string  `protobuf:"bytes,1,opt,name=loot_list,json=lootList" json:"loot_list,omitempty"`
	PlayerAccountIds []uint32 `protobuf:"varint,2,rep,name=player_account_ids,json=playerAccountIds" json:"player_account_ids,omitempty"`
	NoTrade          *bool    `protobuf:"varint,3,opt,name=no_trade,json=noTrade" json:"no_trade,omitempty"`
	RandomizeReward  *bool    `protobuf:"varint,4,opt,name=randomize_reward,json=randomizeReward" json:"randomize_reward,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops) Reset() {
	*m = CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops{}
}
func (m *CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops) ProtoMessage() {}
func (*CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{46, 0}
}

func (m *CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops) GetLootList() string {
	if m != nil && m.LootList != nil {
		return *m.LootList
	}
	return ""
}

func (m *CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops) GetPlayerAccountIds() []uint32 {
	if m != nil {
		return m.PlayerAccountIds
	}
	return nil
}

func (m *CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops) GetNoTrade() bool {
	if m != nil && m.NoTrade != nil {
		return *m.NoTrade
	}
	return false
}

func (m *CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops) GetRandomizeReward() bool {
	if m != nil && m.RandomizeReward != nil {
		return *m.RandomizeReward
	}
	return false
}

type CMsgDOTAFrostivusTimeElapsed struct {
	Seconds          *uint32                              `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	Users            []*CMsgDOTAFrostivusTimeElapsed_User `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	MatchId          *uint64                              `protobuf:"varint,3,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgDOTAFrostivusTimeElapsed) Reset()                    { *m = CMsgDOTAFrostivusTimeElapsed{} }
func (m *CMsgDOTAFrostivusTimeElapsed) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAFrostivusTimeElapsed) ProtoMessage()               {}
func (*CMsgDOTAFrostivusTimeElapsed) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{47} }

func (m *CMsgDOTAFrostivusTimeElapsed) GetSeconds() uint32 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *CMsgDOTAFrostivusTimeElapsed) GetUsers() []*CMsgDOTAFrostivusTimeElapsed_User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *CMsgDOTAFrostivusTimeElapsed) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgDOTAFrostivusTimeElapsed_User struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TimeElapsedS     *uint32 `protobuf:"varint,2,opt,name=time_elapsed_s,json=timeElapsedS" json:"time_elapsed_s,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAFrostivusTimeElapsed_User) Reset()         { *m = CMsgDOTAFrostivusTimeElapsed_User{} }
func (m *CMsgDOTAFrostivusTimeElapsed_User) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFrostivusTimeElapsed_User) ProtoMessage()    {}
func (*CMsgDOTAFrostivusTimeElapsed_User) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{47, 0}
}

func (m *CMsgDOTAFrostivusTimeElapsed_User) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFrostivusTimeElapsed_User) GetTimeElapsedS() uint32 {
	if m != nil && m.TimeElapsedS != nil {
		return *m.TimeElapsedS
	}
	return 0
}

type CMsgGCToServerPingRequest struct {
	RequestId        *uint64 `protobuf:"fixed64,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	RequestTime      *uint64 `protobuf:"varint,2,opt,name=request_time,json=requestTime" json:"request_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToServerPingRequest) Reset()                    { *m = CMsgGCToServerPingRequest{} }
func (m *CMsgGCToServerPingRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToServerPingRequest) ProtoMessage()               {}
func (*CMsgGCToServerPingRequest) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{48} }

func (m *CMsgGCToServerPingRequest) GetRequestId() uint64 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CMsgGCToServerPingRequest) GetRequestTime() uint64 {
	if m != nil && m.RequestTime != nil {
		return *m.RequestTime
	}
	return 0
}

type CMsgGCToServerPingResponse struct {
	RequestId        *uint64 `protobuf:"fixed64,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	RequestTime      *uint64 `protobuf:"varint,2,opt,name=request_time,json=requestTime" json:"request_time,omitempty"`
	Cluster          *uint32 `protobuf:"varint,3,opt,name=cluster" json:"cluster,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToServerPingResponse) Reset()                    { *m = CMsgGCToServerPingResponse{} }
func (m *CMsgGCToServerPingResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToServerPingResponse) ProtoMessage()               {}
func (*CMsgGCToServerPingResponse) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{49} }

func (m *CMsgGCToServerPingResponse) GetRequestId() uint64 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CMsgGCToServerPingResponse) GetRequestTime() uint64 {
	if m != nil && m.RequestTime != nil {
		return *m.RequestTime
	}
	return 0
}

func (m *CMsgGCToServerPingResponse) GetCluster() uint32 {
	if m != nil && m.Cluster != nil {
		return *m.Cluster
	}
	return 0
}

type CMsgGCToServerConsoleCommand struct {
	ConsoleCommand   *string `protobuf:"bytes,1,opt,name=console_command,json=consoleCommand" json:"console_command,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToServerConsoleCommand) Reset()                    { *m = CMsgGCToServerConsoleCommand{} }
func (m *CMsgGCToServerConsoleCommand) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToServerConsoleCommand) ProtoMessage()               {}
func (*CMsgGCToServerConsoleCommand) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{50} }

func (m *CMsgGCToServerConsoleCommand) GetConsoleCommand() string {
	if m != nil && m.ConsoleCommand != nil {
		return *m.ConsoleCommand
	}
	return ""
}

type CMsgServerGetEventPoints struct {
	EventId          *uint32  `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	AccountId        []uint32 `protobuf:"varint,2,rep,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgServerGetEventPoints) Reset()                    { *m = CMsgServerGetEventPoints{} }
func (m *CMsgServerGetEventPoints) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerGetEventPoints) ProtoMessage()               {}
func (*CMsgServerGetEventPoints) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{51} }

func (m *CMsgServerGetEventPoints) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgServerGetEventPoints) GetAccountId() []uint32 {
	if m != nil {
		return m.AccountId
	}
	return nil
}

type CMsgServerGetEventPointsResponse struct {
	EventId          *uint32                                    `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	Points           []*CMsgServerGetEventPointsResponse_Points `protobuf:"bytes,2,rep,name=points" json:"points,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgServerGetEventPointsResponse) Reset()         { *m = CMsgServerGetEventPointsResponse{} }
func (m *CMsgServerGetEventPointsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgServerGetEventPointsResponse) ProtoMessage()    {}
func (*CMsgServerGetEventPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{52}
}

func (m *CMsgServerGetEventPointsResponse) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgServerGetEventPointsResponse) GetPoints() []*CMsgServerGetEventPointsResponse_Points {
	if m != nil {
		return m.Points
	}
	return nil
}

type CMsgServerGetEventPointsResponse_Points struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PointsTotal      *uint32 `protobuf:"varint,2,opt,name=points_total,json=pointsTotal" json:"points_total,omitempty"`
	Owned            *bool   `protobuf:"varint,4,opt,name=owned" json:"owned,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerGetEventPointsResponse_Points) Reset() {
	*m = CMsgServerGetEventPointsResponse_Points{}
}
func (m *CMsgServerGetEventPointsResponse_Points) String() string { return proto.CompactTextString(m) }
func (*CMsgServerGetEventPointsResponse_Points) ProtoMessage()    {}
func (*CMsgServerGetEventPointsResponse_Points) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{52, 0}
}

func (m *CMsgServerGetEventPointsResponse_Points) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerGetEventPointsResponse_Points) GetPointsTotal() uint32 {
	if m != nil && m.PointsTotal != nil {
		return *m.PointsTotal
	}
	return 0
}

func (m *CMsgServerGetEventPointsResponse_Points) GetOwned() bool {
	if m != nil && m.Owned != nil {
		return *m.Owned
	}
	return false
}

type CMsgServerGrantSurveyPermission struct {
	Surveys          []*CMsgServerGrantSurveyPermission_Survey `protobuf:"bytes,1,rep,name=surveys" json:"surveys,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgServerGrantSurveyPermission) Reset()         { *m = CMsgServerGrantSurveyPermission{} }
func (m *CMsgServerGrantSurveyPermission) String() string { return proto.CompactTextString(m) }
func (*CMsgServerGrantSurveyPermission) ProtoMessage()    {}
func (*CMsgServerGrantSurveyPermission) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{53}
}

func (m *CMsgServerGrantSurveyPermission) GetSurveys() []*CMsgServerGrantSurveyPermission_Survey {
	if m != nil {
		return m.Surveys
	}
	return nil
}

type CMsgServerGrantSurveyPermission_Survey struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	QuestionId       *uint32 `protobuf:"varint,2,opt,name=question_id,json=questionId" json:"question_id,omitempty"`
	ExpireTime       *uint32 `protobuf:"varint,3,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
	SurveyKey        *uint64 `protobuf:"varint,4,opt,name=survey_key,json=surveyKey" json:"survey_key,omitempty"`
	ExtraData        *uint64 `protobuf:"varint,5,opt,name=extra_data,json=extraData" json:"extra_data,omitempty"`
	ExtraData_32     *uint64 `protobuf:"varint,6,opt,name=extra_data_32,json=extraData32" json:"extra_data_32,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerGrantSurveyPermission_Survey) Reset() {
	*m = CMsgServerGrantSurveyPermission_Survey{}
}
func (m *CMsgServerGrantSurveyPermission_Survey) String() string { return proto.CompactTextString(m) }
func (*CMsgServerGrantSurveyPermission_Survey) ProtoMessage()    {}
func (*CMsgServerGrantSurveyPermission_Survey) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{53, 0}
}

func (m *CMsgServerGrantSurveyPermission_Survey) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerGrantSurveyPermission_Survey) GetQuestionId() uint32 {
	if m != nil && m.QuestionId != nil {
		return *m.QuestionId
	}
	return 0
}

func (m *CMsgServerGrantSurveyPermission_Survey) GetExpireTime() uint32 {
	if m != nil && m.ExpireTime != nil {
		return *m.ExpireTime
	}
	return 0
}

func (m *CMsgServerGrantSurveyPermission_Survey) GetSurveyKey() uint64 {
	if m != nil && m.SurveyKey != nil {
		return *m.SurveyKey
	}
	return 0
}

func (m *CMsgServerGrantSurveyPermission_Survey) GetExtraData() uint64 {
	if m != nil && m.ExtraData != nil {
		return *m.ExtraData
	}
	return 0
}

func (m *CMsgServerGrantSurveyPermission_Survey) GetExtraData_32() uint64 {
	if m != nil && m.ExtraData_32 != nil {
		return *m.ExtraData_32
	}
	return 0
}

type CMsgServerGrantSurveyPermissionResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerGrantSurveyPermissionResponse) Reset() {
	*m = CMsgServerGrantSurveyPermissionResponse{}
}
func (m *CMsgServerGrantSurveyPermissionResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgServerGrantSurveyPermissionResponse) ProtoMessage()    {}
func (*CMsgServerGrantSurveyPermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{54}
}

func (m *CMsgServerGrantSurveyPermissionResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgServerToGCMatchConnectionStats struct {
	MatchId          *uint64                                      `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	RegionId         *uint32                                      `protobuf:"varint,2,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	LeagueId         *uint32                                      `protobuf:"varint,3,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	Players          []*CMsgServerToGCMatchConnectionStats_Player `protobuf:"bytes,4,rep,name=players" json:"players,omitempty"`
	ClusterId        *uint32                                      `protobuf:"varint,5,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgServerToGCMatchConnectionStats) Reset()         { *m = CMsgServerToGCMatchConnectionStats{} }
func (m *CMsgServerToGCMatchConnectionStats) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCMatchConnectionStats) ProtoMessage()    {}
func (*CMsgServerToGCMatchConnectionStats) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{55}
}

func (m *CMsgServerToGCMatchConnectionStats) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgServerToGCMatchConnectionStats) GetRegionId() uint32 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *CMsgServerToGCMatchConnectionStats) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgServerToGCMatchConnectionStats) GetPlayers() []*CMsgServerToGCMatchConnectionStats_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgServerToGCMatchConnectionStats) GetClusterId() uint32 {
	if m != nil && m.ClusterId != nil {
		return *m.ClusterId
	}
	return 0
}

type CMsgServerToGCMatchConnectionStats_Player struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Ip               *uint32  `protobuf:"fixed32,2,opt,name=ip" json:"ip,omitempty"`
	AvgPingMs        *uint32  `protobuf:"varint,3,opt,name=avg_ping_ms,json=avgPingMs" json:"avg_ping_ms,omitempty"`
	PacketLoss       *float32 `protobuf:"fixed32,5,opt,name=packet_loss,json=packetLoss" json:"packet_loss,omitempty"`
	PingDeviation    *float32 `protobuf:"fixed32,6,opt,name=ping_deviation,json=pingDeviation" json:"ping_deviation,omitempty"`
	FullResends      *uint32  `protobuf:"varint,7,opt,name=full_resends,json=fullResends" json:"full_resends,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgServerToGCMatchConnectionStats_Player) Reset() {
	*m = CMsgServerToGCMatchConnectionStats_Player{}
}
func (m *CMsgServerToGCMatchConnectionStats_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCMatchConnectionStats_Player) ProtoMessage()    {}
func (*CMsgServerToGCMatchConnectionStats_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{55, 0}
}

func (m *CMsgServerToGCMatchConnectionStats_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCMatchConnectionStats_Player) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *CMsgServerToGCMatchConnectionStats_Player) GetAvgPingMs() uint32 {
	if m != nil && m.AvgPingMs != nil {
		return *m.AvgPingMs
	}
	return 0
}

func (m *CMsgServerToGCMatchConnectionStats_Player) GetPacketLoss() float32 {
	if m != nil && m.PacketLoss != nil {
		return *m.PacketLoss
	}
	return 0
}

func (m *CMsgServerToGCMatchConnectionStats_Player) GetPingDeviation() float32 {
	if m != nil && m.PingDeviation != nil {
		return *m.PingDeviation
	}
	return 0
}

func (m *CMsgServerToGCMatchConnectionStats_Player) GetFullResends() uint32 {
	if m != nil && m.FullResends != nil {
		return *m.FullResends
	}
	return 0
}

type CMsgServerGCUpdateSpectatorCount struct {
	SpectatorCount   *uint32 `protobuf:"varint,1,opt,name=spectator_count,json=spectatorCount" json:"spectator_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerGCUpdateSpectatorCount) Reset()         { *m = CMsgServerGCUpdateSpectatorCount{} }
func (m *CMsgServerGCUpdateSpectatorCount) String() string { return proto.CompactTextString(m) }
func (*CMsgServerGCUpdateSpectatorCount) ProtoMessage()    {}
func (*CMsgServerGCUpdateSpectatorCount) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{56}
}

func (m *CMsgServerGCUpdateSpectatorCount) GetSpectatorCount() uint32 {
	if m != nil && m.SpectatorCount != nil {
		return *m.SpectatorCount
	}
	return 0
}

type CSerializedCombatLog struct {
	Version          *uint32                          `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Dictionary       *CSerializedCombatLog_Dictionary `protobuf:"bytes,2,opt,name=dictionary" json:"dictionary,omitempty"`
	Entries          []*CMsgDOTACombatLogEntry        `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *CSerializedCombatLog) Reset()                    { *m = CSerializedCombatLog{} }
func (m *CSerializedCombatLog) String() string            { return proto.CompactTextString(m) }
func (*CSerializedCombatLog) ProtoMessage()               {}
func (*CSerializedCombatLog) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{57} }

func (m *CSerializedCombatLog) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CSerializedCombatLog) GetDictionary() *CSerializedCombatLog_Dictionary {
	if m != nil {
		return m.Dictionary
	}
	return nil
}

func (m *CSerializedCombatLog) GetEntries() []*CMsgDOTACombatLogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type CSerializedCombatLog_Dictionary struct {
	Strings          []*CSerializedCombatLog_Dictionary_DictString `protobuf:"bytes,1,rep,name=strings" json:"strings,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CSerializedCombatLog_Dictionary) Reset()         { *m = CSerializedCombatLog_Dictionary{} }
func (m *CSerializedCombatLog_Dictionary) String() string { return proto.CompactTextString(m) }
func (*CSerializedCombatLog_Dictionary) ProtoMessage()    {}
func (*CSerializedCombatLog_Dictionary) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{57, 0}
}

func (m *CSerializedCombatLog_Dictionary) GetStrings() []*CSerializedCombatLog_Dictionary_DictString {
	if m != nil {
		return m.Strings
	}
	return nil
}

type CSerializedCombatLog_Dictionary_DictString struct {
	Id               *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSerializedCombatLog_Dictionary_DictString) Reset() {
	*m = CSerializedCombatLog_Dictionary_DictString{}
}
func (m *CSerializedCombatLog_Dictionary_DictString) String() string {
	return proto.CompactTextString(m)
}
func (*CSerializedCombatLog_Dictionary_DictString) ProtoMessage() {}
func (*CSerializedCombatLog_Dictionary_DictString) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{57, 0, 0}
}

func (m *CSerializedCombatLog_Dictionary_DictString) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CSerializedCombatLog_Dictionary_DictString) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CMsgServerToGCGetAdditionalEquips struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgServerToGCGetAdditionalEquips) Reset()         { *m = CMsgServerToGCGetAdditionalEquips{} }
func (m *CMsgServerToGCGetAdditionalEquips) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCGetAdditionalEquips) ProtoMessage()    {}
func (*CMsgServerToGCGetAdditionalEquips) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{58}
}

func (m *CMsgServerToGCGetAdditionalEquips) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CMsgServerToGCGetAdditionalEquipsResponse struct {
	Equips           []*CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips `protobuf:"bytes,1,rep,name=equips" json:"equips,omitempty"`
	XXX_unrecognized []byte                                                   `json:"-"`
}

func (m *CMsgServerToGCGetAdditionalEquipsResponse) Reset() {
	*m = CMsgServerToGCGetAdditionalEquipsResponse{}
}
func (m *CMsgServerToGCGetAdditionalEquipsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCGetAdditionalEquipsResponse) ProtoMessage()    {}
func (*CMsgServerToGCGetAdditionalEquipsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{59}
}

func (m *CMsgServerToGCGetAdditionalEquipsResponse) GetEquips() []*CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips {
	if m != nil {
		return m.Equips
	}
	return nil
}

type CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips struct {
	AccountId        *uint32                 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Equips           []*CAdditionalEquipSlot `protobuf:"bytes,2,rep,name=equips" json:"equips,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips) Reset() {
	*m = CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips{}
}
func (m *CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips) ProtoMessage() {}
func (*CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{59, 0}
}

func (m *CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips) GetEquips() []*CAdditionalEquipSlot {
	if m != nil {
		return m.Equips
	}
	return nil
}

type CMsgServerToGCGetProfileCard struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgServerToGCGetProfileCard) Reset()                    { *m = CMsgServerToGCGetProfileCard{} }
func (m *CMsgServerToGCGetProfileCard) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerToGCGetProfileCard) ProtoMessage()               {}
func (*CMsgServerToGCGetProfileCard) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{60} }

func (m *CMsgServerToGCGetProfileCard) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CMsgServerToGCGetProfileCardResponse struct {
	Cards            []*CMsgDOTAProfileCard `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CMsgServerToGCGetProfileCardResponse) Reset()         { *m = CMsgServerToGCGetProfileCardResponse{} }
func (m *CMsgServerToGCGetProfileCardResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCGetProfileCardResponse) ProtoMessage()    {}
func (*CMsgServerToGCGetProfileCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{61}
}

func (m *CMsgServerToGCGetProfileCardResponse) GetCards() []*CMsgDOTAProfileCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

type CMsgServerToGCVictoryPredictions struct {
	Records          []*CMsgServerToGCVictoryPredictions_Record `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgServerToGCVictoryPredictions) Reset()         { *m = CMsgServerToGCVictoryPredictions{} }
func (m *CMsgServerToGCVictoryPredictions) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCVictoryPredictions) ProtoMessage()    {}
func (*CMsgServerToGCVictoryPredictions) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{62}
}

func (m *CMsgServerToGCVictoryPredictions) GetRecords() []*CMsgServerToGCVictoryPredictions_Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type CMsgServerToGCVictoryPredictions_Record struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ItemId           *uint64  `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemIds          []uint64 `protobuf:"varint,5,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgServerToGCVictoryPredictions_Record) Reset() {
	*m = CMsgServerToGCVictoryPredictions_Record{}
}
func (m *CMsgServerToGCVictoryPredictions_Record) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCVictoryPredictions_Record) ProtoMessage()    {}
func (*CMsgServerToGCVictoryPredictions_Record) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{62, 0}
}

func (m *CMsgServerToGCVictoryPredictions_Record) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCVictoryPredictions_Record) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgServerToGCVictoryPredictions_Record) GetItemIds() []uint64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type CMsgSuspiciousActivity struct {
	AccountId        *uint32              `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Activity         *ESuspiciousActivity `protobuf:"varint,2,opt,name=activity,enum=dota.ESuspiciousActivity,def=1" json:"activity,omitempty"`
	Intdata1         *int32               `protobuf:"zigzag32,3,opt,name=intdata1" json:"intdata1,omitempty"`
	Intdata2         *int32               `protobuf:"zigzag32,4,opt,name=intdata2" json:"intdata2,omitempty"`
	Time             *uint32              `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CMsgSuspiciousActivity) Reset()                    { *m = CMsgSuspiciousActivity{} }
func (m *CMsgSuspiciousActivity) String() string            { return proto.CompactTextString(m) }
func (*CMsgSuspiciousActivity) ProtoMessage()               {}
func (*CMsgSuspiciousActivity) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{63} }

const Default_CMsgSuspiciousActivity_Activity ESuspiciousActivity = ESuspiciousActivity_k_ESuspiciousActivity_VAC_MultipleInstances

func (m *CMsgSuspiciousActivity) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSuspiciousActivity) GetActivity() ESuspiciousActivity {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return Default_CMsgSuspiciousActivity_Activity
}

func (m *CMsgSuspiciousActivity) GetIntdata1() int32 {
	if m != nil && m.Intdata1 != nil {
		return *m.Intdata1
	}
	return 0
}

func (m *CMsgSuspiciousActivity) GetIntdata2() int32 {
	if m != nil && m.Intdata2 != nil {
		return *m.Intdata2
	}
	return 0
}

func (m *CMsgSuspiciousActivity) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type CMsgServerToGCRequestStatus struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgServerToGCRequestStatus) Reset()                    { *m = CMsgServerToGCRequestStatus{} }
func (m *CMsgServerToGCRequestStatus) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerToGCRequestStatus) ProtoMessage()               {}
func (*CMsgServerToGCRequestStatus) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{64} }

type CMsgServerToGCRequestStatus_Response struct {
	Response         *uint32 `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerToGCRequestStatus_Response) Reset()         { *m = CMsgServerToGCRequestStatus_Response{} }
func (m *CMsgServerToGCRequestStatus_Response) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCRequestStatus_Response) ProtoMessage()    {}
func (*CMsgServerToGCRequestStatus_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{65}
}

func (m *CMsgServerToGCRequestStatus_Response) GetResponse() uint32 {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return 0
}

type CMsgSignOutAssassinMiniGameInfo struct {
	WinningPlayers       []uint64 `protobuf:"fixed64,1,rep,name=winning_players,json=winningPlayers" json:"winning_players,omitempty"`
	LosingPlayers        []uint64 `protobuf:"fixed64,2,rep,name=losing_players,json=losingPlayers" json:"losing_players,omitempty"`
	ArcanaOwners         []uint64 `protobuf:"fixed64,3,rep,name=arcana_owners,json=arcanaOwners" json:"arcana_owners,omitempty"`
	AssassinWon          *bool    `protobuf:"varint,4,opt,name=assassin_won,json=assassinWon" json:"assassin_won,omitempty"`
	TargetHeroId         *uint32  `protobuf:"varint,5,opt,name=target_hero_id,json=targetHeroId" json:"target_hero_id,omitempty"`
	ContractCompleted    *bool    `protobuf:"varint,6,opt,name=contract_completed,json=contractCompleted" json:"contract_completed,omitempty"`
	ContractCompleteTime *float32 `protobuf:"fixed32,7,opt,name=contract_complete_time,json=contractCompleteTime" json:"contract_complete_time,omitempty"`
	PaIsRadiant          *bool    `protobuf:"varint,8,opt,name=pa_is_radiant,json=paIsRadiant" json:"pa_is_radiant,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *CMsgSignOutAssassinMiniGameInfo) Reset()         { *m = CMsgSignOutAssassinMiniGameInfo{} }
func (m *CMsgSignOutAssassinMiniGameInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgSignOutAssassinMiniGameInfo) ProtoMessage()    {}
func (*CMsgSignOutAssassinMiniGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{66}
}

func (m *CMsgSignOutAssassinMiniGameInfo) GetWinningPlayers() []uint64 {
	if m != nil {
		return m.WinningPlayers
	}
	return nil
}

func (m *CMsgSignOutAssassinMiniGameInfo) GetLosingPlayers() []uint64 {
	if m != nil {
		return m.LosingPlayers
	}
	return nil
}

func (m *CMsgSignOutAssassinMiniGameInfo) GetArcanaOwners() []uint64 {
	if m != nil {
		return m.ArcanaOwners
	}
	return nil
}

func (m *CMsgSignOutAssassinMiniGameInfo) GetAssassinWon() bool {
	if m != nil && m.AssassinWon != nil {
		return *m.AssassinWon
	}
	return false
}

func (m *CMsgSignOutAssassinMiniGameInfo) GetTargetHeroId() uint32 {
	if m != nil && m.TargetHeroId != nil {
		return *m.TargetHeroId
	}
	return 0
}

func (m *CMsgSignOutAssassinMiniGameInfo) GetContractCompleted() bool {
	if m != nil && m.ContractCompleted != nil {
		return *m.ContractCompleted
	}
	return false
}

func (m *CMsgSignOutAssassinMiniGameInfo) GetContractCompleteTime() float32 {
	if m != nil && m.ContractCompleteTime != nil {
		return *m.ContractCompleteTime
	}
	return 0
}

func (m *CMsgSignOutAssassinMiniGameInfo) GetPaIsRadiant() bool {
	if m != nil && m.PaIsRadiant != nil {
		return *m.PaIsRadiant
	}
	return false
}

type CMsgServerToGCGetIngameEventData struct {
	Event            *EEvent `protobuf:"varint,1,opt,name=event,enum=dota.EEvent,def=0" json:"event,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerToGCGetIngameEventData) Reset()         { *m = CMsgServerToGCGetIngameEventData{} }
func (m *CMsgServerToGCGetIngameEventData) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCGetIngameEventData) ProtoMessage()    {}
func (*CMsgServerToGCGetIngameEventData) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{67}
}

const Default_CMsgServerToGCGetIngameEventData_Event EEvent = EEvent_EVENT_ID_NONE

func (m *CMsgServerToGCGetIngameEventData) GetEvent() EEvent {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return Default_CMsgServerToGCGetIngameEventData_Event
}

type CMsgGCToServerIngameEventDataOraclePA struct {
	TargetHeroIds    []uint32 `protobuf:"varint,1,rep,name=target_hero_ids,json=targetHeroIds" json:"target_hero_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCToServerIngameEventDataOraclePA) Reset()         { *m = CMsgGCToServerIngameEventDataOraclePA{} }
func (m *CMsgGCToServerIngameEventDataOraclePA) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToServerIngameEventDataOraclePA) ProtoMessage()    {}
func (*CMsgGCToServerIngameEventDataOraclePA) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{68}
}

func (m *CMsgGCToServerIngameEventDataOraclePA) GetTargetHeroIds() []uint32 {
	if m != nil {
		return m.TargetHeroIds
	}
	return nil
}

type CMsgServerToGCKillSummaries struct {
	IngameeventId    *uint32                                    `protobuf:"varint,1,opt,name=ingameevent_id,json=ingameeventId" json:"ingameevent_id,omitempty"`
	Summaries        []*CMsgServerToGCKillSummaries_KillSummary `protobuf:"bytes,2,rep,name=summaries" json:"summaries,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgServerToGCKillSummaries) Reset()                    { *m = CMsgServerToGCKillSummaries{} }
func (m *CMsgServerToGCKillSummaries) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerToGCKillSummaries) ProtoMessage()               {}
func (*CMsgServerToGCKillSummaries) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{69} }

func (m *CMsgServerToGCKillSummaries) GetIngameeventId() uint32 {
	if m != nil && m.IngameeventId != nil {
		return *m.IngameeventId
	}
	return 0
}

func (m *CMsgServerToGCKillSummaries) GetSummaries() []*CMsgServerToGCKillSummaries_KillSummary {
	if m != nil {
		return m.Summaries
	}
	return nil
}

type CMsgServerToGCKillSummaries_KillSummary struct {
	KillerHeroId     *uint32 `protobuf:"varint,1,opt,name=killer_hero_id,json=killerHeroId" json:"killer_hero_id,omitempty"`
	VictimHeroId     *uint32 `protobuf:"varint,2,opt,name=victim_hero_id,json=victimHeroId" json:"victim_hero_id,omitempty"`
	KillCount        *uint32 `protobuf:"varint,3,opt,name=kill_count,json=killCount" json:"kill_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerToGCKillSummaries_KillSummary) Reset() {
	*m = CMsgServerToGCKillSummaries_KillSummary{}
}
func (m *CMsgServerToGCKillSummaries_KillSummary) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCKillSummaries_KillSummary) ProtoMessage()    {}
func (*CMsgServerToGCKillSummaries_KillSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{69, 0}
}

func (m *CMsgServerToGCKillSummaries_KillSummary) GetKillerHeroId() uint32 {
	if m != nil && m.KillerHeroId != nil {
		return *m.KillerHeroId
	}
	return 0
}

func (m *CMsgServerToGCKillSummaries_KillSummary) GetVictimHeroId() uint32 {
	if m != nil && m.VictimHeroId != nil {
		return *m.VictimHeroId
	}
	return 0
}

func (m *CMsgServerToGCKillSummaries_KillSummary) GetKillCount() uint32 {
	if m != nil && m.KillCount != nil {
		return *m.KillCount
	}
	return 0
}

type CMsgGCToServerPredictionResult struct {
	AccountId        *uint32                                      `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MatchId          *uint64                                      `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Correct          *bool                                        `protobuf:"varint,3,opt,name=correct" json:"correct,omitempty"`
	Predictions      []*CMsgGCToServerPredictionResult_Prediction `protobuf:"bytes,4,rep,name=predictions" json:"predictions,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgGCToServerPredictionResult) Reset()         { *m = CMsgGCToServerPredictionResult{} }
func (m *CMsgGCToServerPredictionResult) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToServerPredictionResult) ProtoMessage()    {}
func (*CMsgGCToServerPredictionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{70}
}

func (m *CMsgGCToServerPredictionResult) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCToServerPredictionResult) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGCToServerPredictionResult) GetCorrect() bool {
	if m != nil && m.Correct != nil {
		return *m.Correct
	}
	return false
}

func (m *CMsgGCToServerPredictionResult) GetPredictions() []*CMsgGCToServerPredictionResult_Prediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

type CMsgGCToServerPredictionResult_Prediction struct {
	ItemDef          *uint32                                            `protobuf:"varint,1,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	NumCorrect       *uint32                                            `protobuf:"varint,2,opt,name=num_correct,json=numCorrect" json:"num_correct,omitempty"`
	NumFails         *uint32                                            `protobuf:"varint,3,opt,name=num_fails,json=numFails" json:"num_fails,omitempty"`
	Result           *CMsgGCToServerPredictionResult_Prediction_EResult `protobuf:"varint,4,opt,name=result,enum=dota.CMsgGCToServerPredictionResult_Prediction_EResult,def=1" json:"result,omitempty"`
	GrantedItemDefs  []uint32                                           `protobuf:"varint,6,rep,name=granted_item_defs,json=grantedItemDefs" json:"granted_item_defs,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *CMsgGCToServerPredictionResult_Prediction) Reset() {
	*m = CMsgGCToServerPredictionResult_Prediction{}
}
func (m *CMsgGCToServerPredictionResult_Prediction) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToServerPredictionResult_Prediction) ProtoMessage()    {}
func (*CMsgGCToServerPredictionResult_Prediction) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{70, 0}
}

const Default_CMsgGCToServerPredictionResult_Prediction_Result CMsgGCToServerPredictionResult_Prediction_EResult = CMsgGCToServerPredictionResult_Prediction_k_eResult_ItemGranted

func (m *CMsgGCToServerPredictionResult_Prediction) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CMsgGCToServerPredictionResult_Prediction) GetNumCorrect() uint32 {
	if m != nil && m.NumCorrect != nil {
		return *m.NumCorrect
	}
	return 0
}

func (m *CMsgGCToServerPredictionResult_Prediction) GetNumFails() uint32 {
	if m != nil && m.NumFails != nil {
		return *m.NumFails
	}
	return 0
}

func (m *CMsgGCToServerPredictionResult_Prediction) GetResult() CMsgGCToServerPredictionResult_Prediction_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgGCToServerPredictionResult_Prediction_Result
}

func (m *CMsgGCToServerPredictionResult_Prediction) GetGrantedItemDefs() []uint32 {
	if m != nil {
		return m.GrantedItemDefs
	}
	return nil
}

type CMsgServerToGCLockCharmTrading struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ItemId           *uint64 `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerToGCLockCharmTrading) Reset()         { *m = CMsgServerToGCLockCharmTrading{} }
func (m *CMsgServerToGCLockCharmTrading) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCLockCharmTrading) ProtoMessage()    {}
func (*CMsgServerToGCLockCharmTrading) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{71}
}

func (m *CMsgServerToGCLockCharmTrading) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCLockCharmTrading) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgSignOutUpdatePlayerChallenge struct {
	AccountId        *uint32                                       `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Completed        []*CMsgSignOutUpdatePlayerChallenge_Challenge `protobuf:"bytes,2,rep,name=completed" json:"completed,omitempty"`
	Rerolled         []*CMsgSignOutUpdatePlayerChallenge_Challenge `protobuf:"bytes,3,rep,name=rerolled" json:"rerolled,omitempty"`
	MatchId          *uint64                                       `protobuf:"varint,4,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	HeroId           *uint32                                       `protobuf:"varint,5,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CMsgSignOutUpdatePlayerChallenge) Reset()         { *m = CMsgSignOutUpdatePlayerChallenge{} }
func (m *CMsgSignOutUpdatePlayerChallenge) String() string { return proto.CompactTextString(m) }
func (*CMsgSignOutUpdatePlayerChallenge) ProtoMessage()    {}
func (*CMsgSignOutUpdatePlayerChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{72}
}

func (m *CMsgSignOutUpdatePlayerChallenge) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSignOutUpdatePlayerChallenge) GetCompleted() []*CMsgSignOutUpdatePlayerChallenge_Challenge {
	if m != nil {
		return m.Completed
	}
	return nil
}

func (m *CMsgSignOutUpdatePlayerChallenge) GetRerolled() []*CMsgSignOutUpdatePlayerChallenge_Challenge {
	if m != nil {
		return m.Rerolled
	}
	return nil
}

func (m *CMsgSignOutUpdatePlayerChallenge) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgSignOutUpdatePlayerChallenge) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgSignOutUpdatePlayerChallenge_Challenge struct {
	EventId          *uint32 `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	SlotId           *uint32 `protobuf:"varint,2,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	SequenceId       *uint32 `protobuf:"varint,3,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Progress         *uint32 `protobuf:"varint,4,opt,name=progress" json:"progress,omitempty"`
	ChallengeRank    *uint32 `protobuf:"varint,5,opt,name=challenge_rank,json=challengeRank" json:"challenge_rank,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSignOutUpdatePlayerChallenge_Challenge) Reset() {
	*m = CMsgSignOutUpdatePlayerChallenge_Challenge{}
}
func (m *CMsgSignOutUpdatePlayerChallenge_Challenge) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSignOutUpdatePlayerChallenge_Challenge) ProtoMessage() {}
func (*CMsgSignOutUpdatePlayerChallenge_Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{72, 0}
}

func (m *CMsgSignOutUpdatePlayerChallenge_Challenge) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgSignOutUpdatePlayerChallenge_Challenge) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CMsgSignOutUpdatePlayerChallenge_Challenge) GetSequenceId() uint32 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

func (m *CMsgSignOutUpdatePlayerChallenge_Challenge) GetProgress() uint32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *CMsgSignOutUpdatePlayerChallenge_Challenge) GetChallengeRank() uint32 {
	if m != nil && m.ChallengeRank != nil {
		return *m.ChallengeRank
	}
	return 0
}

type CMsgServerToGCRerollPlayerChallenge struct {
	AccountId        *uint32                              `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	RerollMsg        *CMsgClientToGCRerollPlayerChallenge `protobuf:"bytes,2,opt,name=reroll_msg,json=rerollMsg" json:"reroll_msg,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgServerToGCRerollPlayerChallenge) Reset()         { *m = CMsgServerToGCRerollPlayerChallenge{} }
func (m *CMsgServerToGCRerollPlayerChallenge) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCRerollPlayerChallenge) ProtoMessage()    {}
func (*CMsgServerToGCRerollPlayerChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{73}
}

func (m *CMsgServerToGCRerollPlayerChallenge) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCRerollPlayerChallenge) GetRerollMsg() *CMsgClientToGCRerollPlayerChallenge {
	if m != nil {
		return m.RerollMsg
	}
	return nil
}

type CMsgServerToGCHoldEventPoints struct {
	Holds            []*CMsgServerToGCHoldEventPoints_HoldRequest `protobuf:"bytes,1,rep,name=holds" json:"holds,omitempty"`
	EventId          *uint32                                      `protobuf:"varint,2,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	HoldKey          *uint64                                      `protobuf:"varint,3,opt,name=hold_key,json=holdKey" json:"hold_key,omitempty"`
	HoldUntil        *uint32                                      `protobuf:"varint,4,opt,name=hold_until,json=holdUntil" json:"hold_until,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgServerToGCHoldEventPoints) Reset()                    { *m = CMsgServerToGCHoldEventPoints{} }
func (m *CMsgServerToGCHoldEventPoints) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerToGCHoldEventPoints) ProtoMessage()               {}
func (*CMsgServerToGCHoldEventPoints) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{74} }

func (m *CMsgServerToGCHoldEventPoints) GetHolds() []*CMsgServerToGCHoldEventPoints_HoldRequest {
	if m != nil {
		return m.Holds
	}
	return nil
}

func (m *CMsgServerToGCHoldEventPoints) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgServerToGCHoldEventPoints) GetHoldKey() uint64 {
	if m != nil && m.HoldKey != nil {
		return *m.HoldKey
	}
	return 0
}

func (m *CMsgServerToGCHoldEventPoints) GetHoldUntil() uint32 {
	if m != nil && m.HoldUntil != nil {
		return *m.HoldUntil
	}
	return 0
}

type CMsgServerToGCHoldEventPoints_HoldRequest struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PointsHeld       *uint32 `protobuf:"varint,2,opt,name=points_held,json=pointsHeld" json:"points_held,omitempty"`
	PremiumHeld      *uint32 `protobuf:"varint,3,opt,name=premium_held,json=premiumHeld" json:"premium_held,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerToGCHoldEventPoints_HoldRequest) Reset() {
	*m = CMsgServerToGCHoldEventPoints_HoldRequest{}
}
func (m *CMsgServerToGCHoldEventPoints_HoldRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCHoldEventPoints_HoldRequest) ProtoMessage()    {}
func (*CMsgServerToGCHoldEventPoints_HoldRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{74, 0}
}

func (m *CMsgServerToGCHoldEventPoints_HoldRequest) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCHoldEventPoints_HoldRequest) GetPointsHeld() uint32 {
	if m != nil && m.PointsHeld != nil {
		return *m.PointsHeld
	}
	return 0
}

func (m *CMsgServerToGCHoldEventPoints_HoldRequest) GetPremiumHeld() uint32 {
	if m != nil && m.PremiumHeld != nil {
		return *m.PremiumHeld
	}
	return 0
}

type CMsgSignOutReleaseEventPointHolds struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	EventId          *uint32  `protobuf:"varint,2,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	HoldKey          *uint64  `protobuf:"varint,3,opt,name=hold_key,json=holdKey" json:"hold_key,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSignOutReleaseEventPointHolds) Reset()         { *m = CMsgSignOutReleaseEventPointHolds{} }
func (m *CMsgSignOutReleaseEventPointHolds) String() string { return proto.CompactTextString(m) }
func (*CMsgSignOutReleaseEventPointHolds) ProtoMessage()    {}
func (*CMsgSignOutReleaseEventPointHolds) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{75}
}

func (m *CMsgSignOutReleaseEventPointHolds) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *CMsgSignOutReleaseEventPointHolds) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgSignOutReleaseEventPointHolds) GetHoldKey() uint64 {
	if m != nil && m.HoldKey != nil {
		return *m.HoldKey
	}
	return 0
}

type CMsgGCToServerUpdateBroadcastCheers struct {
	TimeStamp        *uint32 `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	Team_1Cheers     *uint32 `protobuf:"varint,2,opt,name=team_1_cheers,json=team1Cheers" json:"team_1_cheers,omitempty"`
	Team_2Cheers     *uint32 `protobuf:"varint,3,opt,name=team_2_cheers,json=team2Cheers" json:"team_2_cheers,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToServerUpdateBroadcastCheers) Reset()         { *m = CMsgGCToServerUpdateBroadcastCheers{} }
func (m *CMsgGCToServerUpdateBroadcastCheers) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToServerUpdateBroadcastCheers) ProtoMessage()    {}
func (*CMsgGCToServerUpdateBroadcastCheers) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{76}
}

func (m *CMsgGCToServerUpdateBroadcastCheers) GetTimeStamp() uint32 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *CMsgGCToServerUpdateBroadcastCheers) GetTeam_1Cheers() uint32 {
	if m != nil && m.Team_1Cheers != nil {
		return *m.Team_1Cheers
	}
	return 0
}

func (m *CMsgGCToServerUpdateBroadcastCheers) GetTeam_2Cheers() uint32 {
	if m != nil && m.Team_2Cheers != nil {
		return *m.Team_2Cheers
	}
	return 0
}

type CMsgSignOutWagerStats struct {
	Players          []*CMsgSignOutWagerStats_Player `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	EventId          *uint32                         `protobuf:"varint,2,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CMsgSignOutWagerStats) Reset()                    { *m = CMsgSignOutWagerStats{} }
func (m *CMsgSignOutWagerStats) String() string            { return proto.CompactTextString(m) }
func (*CMsgSignOutWagerStats) ProtoMessage()               {}
func (*CMsgSignOutWagerStats) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{77} }

func (m *CMsgSignOutWagerStats) GetPlayers() []*CMsgSignOutWagerStats_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgSignOutWagerStats) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

type CMsgSignOutWagerStats_Player struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Winnings         *uint32 `protobuf:"varint,2,opt,name=winnings" json:"winnings,omitempty"`
	MaxWager         *uint32 `protobuf:"varint,3,opt,name=max_wager,json=maxWager" json:"max_wager,omitempty"`
	Wager            *uint32 `protobuf:"varint,4,opt,name=wager" json:"wager,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSignOutWagerStats_Player) Reset()         { *m = CMsgSignOutWagerStats_Player{} }
func (m *CMsgSignOutWagerStats_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgSignOutWagerStats_Player) ProtoMessage()    {}
func (*CMsgSignOutWagerStats_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{77, 0}
}

func (m *CMsgSignOutWagerStats_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSignOutWagerStats_Player) GetWinnings() uint32 {
	if m != nil && m.Winnings != nil {
		return *m.Winnings
	}
	return 0
}

func (m *CMsgSignOutWagerStats_Player) GetMaxWager() uint32 {
	if m != nil && m.MaxWager != nil {
		return *m.MaxWager
	}
	return 0
}

func (m *CMsgSignOutWagerStats_Player) GetWager() uint32 {
	if m != nil && m.Wager != nil {
		return *m.Wager
	}
	return 0
}

type CMsgSpendWager struct {
	Players          []*CMsgSpendWager_Player `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	EventId          *uint32                  `protobuf:"varint,2,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	Timestamp        *uint32                  `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	MatchId          *uint64                  `protobuf:"varint,4,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	ServerSteamId    *uint64                  `protobuf:"varint,5,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CMsgSpendWager) Reset()                    { *m = CMsgSpendWager{} }
func (m *CMsgSpendWager) String() string            { return proto.CompactTextString(m) }
func (*CMsgSpendWager) ProtoMessage()               {}
func (*CMsgSpendWager) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{78} }

func (m *CMsgSpendWager) GetPlayers() []*CMsgSpendWager_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgSpendWager) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgSpendWager) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgSpendWager) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgSpendWager) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

type CMsgSpendWager_Player struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Wager            *uint32 `protobuf:"varint,2,opt,name=wager" json:"wager,omitempty"`
	WagerTokenItemId *uint64 `protobuf:"varint,3,opt,name=wager_token_item_id,json=wagerTokenItemId" json:"wager_token_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSpendWager_Player) Reset()                    { *m = CMsgSpendWager_Player{} }
func (m *CMsgSpendWager_Player) String() string            { return proto.CompactTextString(m) }
func (*CMsgSpendWager_Player) ProtoMessage()               {}
func (*CMsgSpendWager_Player) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{78, 0} }

func (m *CMsgSpendWager_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSpendWager_Player) GetWager() uint32 {
	if m != nil && m.Wager != nil {
		return *m.Wager
	}
	return 0
}

func (m *CMsgSpendWager_Player) GetWagerTokenItemId() uint64 {
	if m != nil && m.WagerTokenItemId != nil {
		return *m.WagerTokenItemId
	}
	return 0
}

type CMsgSignOutXPCoins struct {
	Players          []*CMsgSignOutXPCoins_Player `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	EventId          *uint32                      `protobuf:"varint,2,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	MatchId          *uint64                      `protobuf:"varint,3,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Timestamp        *uint32                      `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgSignOutXPCoins) Reset()                    { *m = CMsgSignOutXPCoins{} }
func (m *CMsgSignOutXPCoins) String() string            { return proto.CompactTextString(m) }
func (*CMsgSignOutXPCoins) ProtoMessage()               {}
func (*CMsgSignOutXPCoins) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{79} }

func (m *CMsgSignOutXPCoins) GetPlayers() []*CMsgSignOutXPCoins_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgSignOutXPCoins) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgSignOutXPCoins) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgSignOutXPCoins) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type CMsgSignOutXPCoins_Player struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XpGained         *uint32 `protobuf:"varint,2,opt,name=xp_gained,json=xpGained" json:"xp_gained,omitempty"`
	CoinsSpent       *uint32 `protobuf:"varint,3,opt,name=coins_spent,json=coinsSpent" json:"coins_spent,omitempty"`
	WagerTokenItemId *uint64 `protobuf:"varint,4,opt,name=wager_token_item_id,json=wagerTokenItemId" json:"wager_token_item_id,omitempty"`
	RankWager        *uint32 `protobuf:"varint,5,opt,name=rank_wager,json=rankWager" json:"rank_wager,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSignOutXPCoins_Player) Reset()                    { *m = CMsgSignOutXPCoins_Player{} }
func (m *CMsgSignOutXPCoins_Player) String() string            { return proto.CompactTextString(m) }
func (*CMsgSignOutXPCoins_Player) ProtoMessage()               {}
func (*CMsgSignOutXPCoins_Player) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{79, 0} }

func (m *CMsgSignOutXPCoins_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSignOutXPCoins_Player) GetXpGained() uint32 {
	if m != nil && m.XpGained != nil {
		return *m.XpGained
	}
	return 0
}

func (m *CMsgSignOutXPCoins_Player) GetCoinsSpent() uint32 {
	if m != nil && m.CoinsSpent != nil {
		return *m.CoinsSpent
	}
	return 0
}

func (m *CMsgSignOutXPCoins_Player) GetWagerTokenItemId() uint64 {
	if m != nil && m.WagerTokenItemId != nil {
		return *m.WagerTokenItemId
	}
	return 0
}

func (m *CMsgSignOutXPCoins_Player) GetRankWager() uint32 {
	if m != nil && m.RankWager != nil {
		return *m.RankWager
	}
	return 0
}

type CMsgSignOutCommunityGoalProgress struct {
	EventId          *uint32                                                `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	EventIncrements  []*CMsgSignOutCommunityGoalProgress_EventGoalIncrement `protobuf:"bytes,2,rep,name=event_increments,json=eventIncrements" json:"event_increments,omitempty"`
	XXX_unrecognized []byte                                                 `json:"-"`
}

func (m *CMsgSignOutCommunityGoalProgress) Reset()         { *m = CMsgSignOutCommunityGoalProgress{} }
func (m *CMsgSignOutCommunityGoalProgress) String() string { return proto.CompactTextString(m) }
func (*CMsgSignOutCommunityGoalProgress) ProtoMessage()    {}
func (*CMsgSignOutCommunityGoalProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{80}
}

func (m *CMsgSignOutCommunityGoalProgress) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgSignOutCommunityGoalProgress) GetEventIncrements() []*CMsgSignOutCommunityGoalProgress_EventGoalIncrement {
	if m != nil {
		return m.EventIncrements
	}
	return nil
}

type CMsgSignOutCommunityGoalProgress_EventGoalIncrement struct {
	EventGoalId      *uint32 `protobuf:"varint,1,opt,name=event_goal_id,json=eventGoalId" json:"event_goal_id,omitempty"`
	IncrementAmount  *uint32 `protobuf:"varint,2,opt,name=increment_amount,json=incrementAmount" json:"increment_amount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSignOutCommunityGoalProgress_EventGoalIncrement) Reset() {
	*m = CMsgSignOutCommunityGoalProgress_EventGoalIncrement{}
}
func (m *CMsgSignOutCommunityGoalProgress_EventGoalIncrement) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSignOutCommunityGoalProgress_EventGoalIncrement) ProtoMessage() {}
func (*CMsgSignOutCommunityGoalProgress_EventGoalIncrement) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{80, 0}
}

func (m *CMsgSignOutCommunityGoalProgress_EventGoalIncrement) GetEventGoalId() uint32 {
	if m != nil && m.EventGoalId != nil {
		return *m.EventGoalId
	}
	return 0
}

func (m *CMsgSignOutCommunityGoalProgress_EventGoalIncrement) GetIncrementAmount() uint32 {
	if m != nil && m.IncrementAmount != nil {
		return *m.IncrementAmount
	}
	return 0
}

type CMsgServerToGCPostMatchTip struct {
	EventId            *uint32 `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	MatchId            *uint64 `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	TipperAccountId    *uint32 `protobuf:"varint,3,opt,name=tipper_account_id,json=tipperAccountId" json:"tipper_account_id,omitempty"`
	RecipientAccountId *uint32 `protobuf:"varint,4,opt,name=recipient_account_id,json=recipientAccountId" json:"recipient_account_id,omitempty"`
	TipAmount          *uint32 `protobuf:"varint,5,opt,name=tip_amount,json=tipAmount" json:"tip_amount,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgServerToGCPostMatchTip) Reset()                    { *m = CMsgServerToGCPostMatchTip{} }
func (m *CMsgServerToGCPostMatchTip) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerToGCPostMatchTip) ProtoMessage()               {}
func (*CMsgServerToGCPostMatchTip) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{81} }

func (m *CMsgServerToGCPostMatchTip) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgServerToGCPostMatchTip) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgServerToGCPostMatchTip) GetTipperAccountId() uint32 {
	if m != nil && m.TipperAccountId != nil {
		return *m.TipperAccountId
	}
	return 0
}

func (m *CMsgServerToGCPostMatchTip) GetRecipientAccountId() uint32 {
	if m != nil && m.RecipientAccountId != nil {
		return *m.RecipientAccountId
	}
	return 0
}

func (m *CMsgServerToGCPostMatchTip) GetTipAmount() uint32 {
	if m != nil && m.TipAmount != nil {
		return *m.TipAmount
	}
	return 0
}

type CMsgServerToGCPostMatchTipResponse struct {
	MatchId            *uint64                                    `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	TipperAccountId    *uint32                                    `protobuf:"varint,2,opt,name=tipper_account_id,json=tipperAccountId" json:"tipper_account_id,omitempty"`
	RecipientAccountId *uint32                                    `protobuf:"varint,3,opt,name=recipient_account_id,json=recipientAccountId" json:"recipient_account_id,omitempty"`
	Result             *CMsgServerToGCPostMatchTipResponse_Result `protobuf:"varint,4,opt,name=result,enum=dota.CMsgServerToGCPostMatchTipResponse_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized   []byte                                     `json:"-"`
}

func (m *CMsgServerToGCPostMatchTipResponse) Reset()         { *m = CMsgServerToGCPostMatchTipResponse{} }
func (m *CMsgServerToGCPostMatchTipResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCPostMatchTipResponse) ProtoMessage()    {}
func (*CMsgServerToGCPostMatchTipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{82}
}

const Default_CMsgServerToGCPostMatchTipResponse_Result CMsgServerToGCPostMatchTipResponse_Result = CMsgServerToGCPostMatchTipResponse_SUCCESS

func (m *CMsgServerToGCPostMatchTipResponse) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgServerToGCPostMatchTipResponse) GetTipperAccountId() uint32 {
	if m != nil && m.TipperAccountId != nil {
		return *m.TipperAccountId
	}
	return 0
}

func (m *CMsgServerToGCPostMatchTipResponse) GetRecipientAccountId() uint32 {
	if m != nil && m.RecipientAccountId != nil {
		return *m.RecipientAccountId
	}
	return 0
}

func (m *CMsgServerToGCPostMatchTipResponse) GetResult() CMsgServerToGCPostMatchTipResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgServerToGCPostMatchTipResponse_Result
}

type CMsgServerToGCCloseCompendiumInGamePredictionVoting struct {
	MatchId          *uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	HltvDelay        *uint32 `protobuf:"varint,2,opt,name=hltv_delay,json=hltvDelay" json:"hltv_delay,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerToGCCloseCompendiumInGamePredictionVoting) Reset() {
	*m = CMsgServerToGCCloseCompendiumInGamePredictionVoting{}
}
func (m *CMsgServerToGCCloseCompendiumInGamePredictionVoting) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCCloseCompendiumInGamePredictionVoting) ProtoMessage() {}
func (*CMsgServerToGCCloseCompendiumInGamePredictionVoting) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{83}
}

func (m *CMsgServerToGCCloseCompendiumInGamePredictionVoting) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgServerToGCCloseCompendiumInGamePredictionVoting) GetHltvDelay() uint32 {
	if m != nil && m.HltvDelay != nil {
		return *m.HltvDelay
	}
	return 0
}

type CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse struct {
	Result           *bool  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse) Reset() {
	*m = CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse{}
}
func (m *CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse) ProtoMessage() {}
func (*CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{84}
}

func (m *CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CMsgServerToGCCompendiumInGamePredictionResults struct {
	MatchId          *uint64                                                             `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Results          []*CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
	LeagueId         *uint32                                                             `protobuf:"varint,3,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	SeriesId         *uint32                                                             `protobuf:"varint,4,opt,name=series_id,json=seriesId" json:"series_id,omitempty"`
	XXX_unrecognized []byte                                                              `json:"-"`
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults) Reset() {
	*m = CMsgServerToGCCompendiumInGamePredictionResults{}
}
func (m *CMsgServerToGCCompendiumInGamePredictionResults) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCCompendiumInGamePredictionResults) ProtoMessage() {}
func (*CMsgServerToGCCompendiumInGamePredictionResults) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{85}
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults) GetResults() []*CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

type CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult struct {
	PredictionId          *uint32 `protobuf:"varint,1,opt,name=prediction_id,json=predictionId" json:"prediction_id,omitempty"`
	PredictionValue       *uint32 `protobuf:"varint,2,opt,name=prediction_value,json=predictionValue" json:"prediction_value,omitempty"`
	PredictionValueIsMask *bool   `protobuf:"varint,3,opt,name=prediction_value_is_mask,json=predictionValueIsMask" json:"prediction_value_is_mask,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult) Reset() {
	*m = CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult{}
}
func (m *CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult) ProtoMessage() {}
func (*CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{85, 0}
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult) GetPredictionId() uint32 {
	if m != nil && m.PredictionId != nil {
		return *m.PredictionId
	}
	return 0
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult) GetPredictionValue() uint32 {
	if m != nil && m.PredictionValue != nil {
		return *m.PredictionValue
	}
	return 0
}

func (m *CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult) GetPredictionValueIsMask() bool {
	if m != nil && m.PredictionValueIsMask != nil {
		return *m.PredictionValueIsMask
	}
	return false
}

type CMsgServerToGCCompendiumInGamePredictionResultsResponse struct {
	Result           *bool  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgServerToGCCompendiumInGamePredictionResultsResponse) Reset() {
	*m = CMsgServerToGCCompendiumInGamePredictionResultsResponse{}
}
func (m *CMsgServerToGCCompendiumInGamePredictionResultsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCCompendiumInGamePredictionResultsResponse) ProtoMessage() {}
func (*CMsgServerToGCCompendiumInGamePredictionResultsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{86}
}

func (m *CMsgServerToGCCompendiumInGamePredictionResultsResponse) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CMsgGCToGCCompendiumInGamePredictionResults struct {
	Results          *CMsgServerToGCCompendiumInGamePredictionResults `protobuf:"bytes,1,opt,name=results" json:"results,omitempty"`
	XXX_unrecognized []byte                                           `json:"-"`
}

func (m *CMsgGCToGCCompendiumInGamePredictionResults) Reset() {
	*m = CMsgGCToGCCompendiumInGamePredictionResults{}
}
func (m *CMsgGCToGCCompendiumInGamePredictionResults) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCToGCCompendiumInGamePredictionResults) ProtoMessage() {}
func (*CMsgGCToGCCompendiumInGamePredictionResults) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{87}
}

func (m *CMsgGCToGCCompendiumInGamePredictionResults) GetResults() *CMsgServerToGCCompendiumInGamePredictionResults {
	if m != nil {
		return m.Results
	}
	return nil
}

type CMsgServerToGCMatchPlayerItemPurchaseHistory struct {
	MatchId          *uint64                                                `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Mmr              *uint32                                                `protobuf:"varint,2,opt,name=mmr" json:"mmr,omitempty"`
	Players          []*CMsgServerToGCMatchPlayerItemPurchaseHistory_Player `protobuf:"bytes,3,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte                                                 `json:"-"`
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory) Reset() {
	*m = CMsgServerToGCMatchPlayerItemPurchaseHistory{}
}
func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCMatchPlayerItemPurchaseHistory) ProtoMessage() {}
func (*CMsgServerToGCMatchPlayerItemPurchaseHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{88}
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory) GetMmr() uint32 {
	if m != nil && m.Mmr != nil {
		return *m.Mmr
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory) GetPlayers() []*CMsgServerToGCMatchPlayerItemPurchaseHistory_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase struct {
	Item             *uint32  `protobuf:"varint,1,opt,name=item" json:"item,omitempty"`
	Gold             *uint32  `protobuf:"varint,2,opt,name=gold" json:"gold,omitempty"`
	NetWorth         *uint32  `protobuf:"varint,3,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	GameTime         *uint32  `protobuf:"varint,4,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	InventoryItems   []uint32 `protobuf:"varint,5,rep,name=inventory_items,json=inventoryItems" json:"inventory_items,omitempty"`
	TalentsSkilled   []bool   `protobuf:"varint,7,rep,name=talents_skilled,json=talentsSkilled" json:"talents_skilled,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) Reset() {
	*m = CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase{}
}
func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) ProtoMessage() {}
func (*CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{88, 0}
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) GetItem() uint32 {
	if m != nil && m.Item != nil {
		return *m.Item
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) GetGameTime() uint32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) GetInventoryItems() []uint32 {
	if m != nil {
		return m.InventoryItems
	}
	return nil
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase) GetTalentsSkilled() []bool {
	if m != nil {
		return m.TalentsSkilled
	}
	return nil
}

type CMsgServerToGCMatchPlayerItemPurchaseHistory_Player struct {
	PlayerSlot       *uint32                                                      `protobuf:"varint,1,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	AccountId        *uint32                                                      `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroId           *uint32                                                      `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	AlliedHeroIds    []uint32                                                     `protobuf:"varint,4,rep,name=allied_hero_ids,json=alliedHeroIds" json:"allied_hero_ids,omitempty"`
	EnemyHeroIds     []uint32                                                     `protobuf:"varint,5,rep,name=enemy_hero_ids,json=enemyHeroIds" json:"enemy_hero_ids,omitempty"`
	ItemPurchases    []*CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase `protobuf:"bytes,6,rep,name=item_purchases,json=itemPurchases" json:"item_purchases,omitempty"`
	XXX_unrecognized []byte                                                       `json:"-"`
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) Reset() {
	*m = CMsgServerToGCMatchPlayerItemPurchaseHistory_Player{}
}
func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) ProtoMessage() {}
func (*CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{88, 1}
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) GetPlayerSlot() uint32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) GetAlliedHeroIds() []uint32 {
	if m != nil {
		return m.AlliedHeroIds
	}
	return nil
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) GetEnemyHeroIds() []uint32 {
	if m != nil {
		return m.EnemyHeroIds
	}
	return nil
}

func (m *CMsgServerToGCMatchPlayerItemPurchaseHistory_Player) GetItemPurchases() []*CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase {
	if m != nil {
		return m.ItemPurchases
	}
	return nil
}

type CMsgServerToGCMatchStateHistory struct {
	MatchId          *uint64                                       `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	RadiantWon       *bool                                         `protobuf:"varint,2,opt,name=radiant_won,json=radiantWon" json:"radiant_won,omitempty"`
	Mmr              *uint32                                       `protobuf:"varint,3,opt,name=mmr" json:"mmr,omitempty"`
	MatchStates      []*CMsgServerToGCMatchStateHistory_MatchState `protobuf:"bytes,4,rep,name=match_states,json=matchStates" json:"match_states,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CMsgServerToGCMatchStateHistory) Reset()         { *m = CMsgServerToGCMatchStateHistory{} }
func (m *CMsgServerToGCMatchStateHistory) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCMatchStateHistory) ProtoMessage()    {}
func (*CMsgServerToGCMatchStateHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{89}
}

func (m *CMsgServerToGCMatchStateHistory) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory) GetRadiantWon() bool {
	if m != nil && m.RadiantWon != nil {
		return *m.RadiantWon
	}
	return false
}

func (m *CMsgServerToGCMatchStateHistory) GetMmr() uint32 {
	if m != nil && m.Mmr != nil {
		return *m.Mmr
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory) GetMatchStates() []*CMsgServerToGCMatchStateHistory_MatchState {
	if m != nil {
		return m.MatchStates
	}
	return nil
}

type CMsgServerToGCMatchStateHistory_PlayerState struct {
	HeroId           *uint32 `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	NetWorth         *uint32 `protobuf:"varint,2,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	Level            *uint32 `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	Deaths           *uint32 `protobuf:"varint,4,opt,name=deaths" json:"deaths,omitempty"`
	RespawnTime      *uint32 `protobuf:"varint,5,opt,name=respawn_time,json=respawnTime" json:"respawn_time,omitempty"`
	HasBuyback       *bool   `protobuf:"varint,6,opt,name=has_buyback,json=hasBuyback" json:"has_buyback,omitempty"`
	HasAegis         *bool   `protobuf:"varint,7,opt,name=has_aegis,json=hasAegis" json:"has_aegis,omitempty"`
	HasRapier        *bool   `protobuf:"varint,8,opt,name=has_rapier,json=hasRapier" json:"has_rapier,omitempty"`
	Distance         *uint32 `protobuf:"varint,9,opt,name=distance" json:"distance,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) Reset() {
	*m = CMsgServerToGCMatchStateHistory_PlayerState{}
}
func (m *CMsgServerToGCMatchStateHistory_PlayerState) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCMatchStateHistory_PlayerState) ProtoMessage() {}
func (*CMsgServerToGCMatchStateHistory_PlayerState) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{89, 0}
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetRespawnTime() uint32 {
	if m != nil && m.RespawnTime != nil {
		return *m.RespawnTime
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetHasBuyback() bool {
	if m != nil && m.HasBuyback != nil {
		return *m.HasBuyback
	}
	return false
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetHasAegis() bool {
	if m != nil && m.HasAegis != nil {
		return *m.HasAegis
	}
	return false
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetHasRapier() bool {
	if m != nil && m.HasRapier != nil {
		return *m.HasRapier
	}
	return false
}

func (m *CMsgServerToGCMatchStateHistory_PlayerState) GetDistance() uint32 {
	if m != nil && m.Distance != nil {
		return *m.Distance
	}
	return 0
}

type CMsgServerToGCMatchStateHistory_TeamState struct {
	Team              *uint32                                        `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	PlayerStates      []*CMsgServerToGCMatchStateHistory_PlayerState `protobuf:"bytes,2,rep,name=player_states,json=playerStates" json:"player_states,omitempty"`
	TowerHealthPct    []uint32                                       `protobuf:"varint,3,rep,name=tower_health_pct,json=towerHealthPct" json:"tower_health_pct,omitempty"`
	BarracksHealthPct []uint32                                       `protobuf:"varint,4,rep,name=barracks_health_pct,json=barracksHealthPct" json:"barracks_health_pct,omitempty"`
	AncientHealthPct  *uint32                                        `protobuf:"varint,5,opt,name=ancient_health_pct,json=ancientHealthPct" json:"ancient_health_pct,omitempty"`
	GlyphCooldown     *uint32                                        `protobuf:"varint,6,opt,name=glyph_cooldown,json=glyphCooldown" json:"glyph_cooldown,omitempty"`
	Kills             *uint32                                        `protobuf:"varint,7,opt,name=kills" json:"kills,omitempty"`
	CreepDistanceSafe *uint32                                        `protobuf:"varint,8,opt,name=creep_distance_safe,json=creepDistanceSafe" json:"creep_distance_safe,omitempty"`
	CreepDistanceMid  *uint32                                        `protobuf:"varint,9,opt,name=creep_distance_mid,json=creepDistanceMid" json:"creep_distance_mid,omitempty"`
	CreepDistanceOff  *uint32                                        `protobuf:"varint,10,opt,name=creep_distance_off,json=creepDistanceOff" json:"creep_distance_off,omitempty"`
	XXX_unrecognized  []byte                                         `json:"-"`
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) Reset() {
	*m = CMsgServerToGCMatchStateHistory_TeamState{}
}
func (m *CMsgServerToGCMatchStateHistory_TeamState) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCMatchStateHistory_TeamState) ProtoMessage()    {}
func (*CMsgServerToGCMatchStateHistory_TeamState) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{89, 1}
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetPlayerStates() []*CMsgServerToGCMatchStateHistory_PlayerState {
	if m != nil {
		return m.PlayerStates
	}
	return nil
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetTowerHealthPct() []uint32 {
	if m != nil {
		return m.TowerHealthPct
	}
	return nil
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetBarracksHealthPct() []uint32 {
	if m != nil {
		return m.BarracksHealthPct
	}
	return nil
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetAncientHealthPct() uint32 {
	if m != nil && m.AncientHealthPct != nil {
		return *m.AncientHealthPct
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetGlyphCooldown() uint32 {
	if m != nil && m.GlyphCooldown != nil {
		return *m.GlyphCooldown
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetCreepDistanceSafe() uint32 {
	if m != nil && m.CreepDistanceSafe != nil {
		return *m.CreepDistanceSafe
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetCreepDistanceMid() uint32 {
	if m != nil && m.CreepDistanceMid != nil {
		return *m.CreepDistanceMid
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_TeamState) GetCreepDistanceOff() uint32 {
	if m != nil && m.CreepDistanceOff != nil {
		return *m.CreepDistanceOff
	}
	return 0
}

type CMsgServerToGCMatchStateHistory_MatchState struct {
	GameTime         *uint32                                    `protobuf:"varint,1,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	RadiantState     *CMsgServerToGCMatchStateHistory_TeamState `protobuf:"bytes,2,opt,name=radiant_state,json=radiantState" json:"radiant_state,omitempty"`
	DireState        *CMsgServerToGCMatchStateHistory_TeamState `protobuf:"bytes,3,opt,name=dire_state,json=direState" json:"dire_state,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgServerToGCMatchStateHistory_MatchState) Reset() {
	*m = CMsgServerToGCMatchStateHistory_MatchState{}
}
func (m *CMsgServerToGCMatchStateHistory_MatchState) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCMatchStateHistory_MatchState) ProtoMessage() {}
func (*CMsgServerToGCMatchStateHistory_MatchState) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{89, 2}
}

func (m *CMsgServerToGCMatchStateHistory_MatchState) GetGameTime() uint32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CMsgServerToGCMatchStateHistory_MatchState) GetRadiantState() *CMsgServerToGCMatchStateHistory_TeamState {
	if m != nil {
		return m.RadiantState
	}
	return nil
}

func (m *CMsgServerToGCMatchStateHistory_MatchState) GetDireState() *CMsgServerToGCMatchStateHistory_TeamState {
	if m != nil {
		return m.DireState
	}
	return nil
}

type CMsgServerToGCCavernCrawlIsHeroActive struct {
	EventId          *uint32 `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	AccountId        *uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroId           *uint32 `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerToGCCavernCrawlIsHeroActive) Reset()         { *m = CMsgServerToGCCavernCrawlIsHeroActive{} }
func (m *CMsgServerToGCCavernCrawlIsHeroActive) String() string { return proto.CompactTextString(m) }
func (*CMsgServerToGCCavernCrawlIsHeroActive) ProtoMessage()    {}
func (*CMsgServerToGCCavernCrawlIsHeroActive) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{90}
}

func (m *CMsgServerToGCCavernCrawlIsHeroActive) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgServerToGCCavernCrawlIsHeroActive) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgServerToGCCavernCrawlIsHeroActive) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgServerToGCCavernCrawlIsHeroActiveResponse struct {
	Result            *bool   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	PotentialWinnings *uint32 `protobuf:"varint,2,opt,name=potential_winnings,json=potentialWinnings" json:"potential_winnings,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgServerToGCCavernCrawlIsHeroActiveResponse) Reset() {
	*m = CMsgServerToGCCavernCrawlIsHeroActiveResponse{}
}
func (m *CMsgServerToGCCavernCrawlIsHeroActiveResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgServerToGCCavernCrawlIsHeroActiveResponse) ProtoMessage() {}
func (*CMsgServerToGCCavernCrawlIsHeroActiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor20, []int{91}
}

func (m *CMsgServerToGCCavernCrawlIsHeroActiveResponse) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *CMsgServerToGCCavernCrawlIsHeroActiveResponse) GetPotentialWinnings() uint32 {
	if m != nil && m.PotentialWinnings != nil {
		return *m.PotentialWinnings
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgPoorNetworkConditions)(nil), "dota.CMsgPoorNetworkConditions")
	proto.RegisterType((*CMsgPoorNetworkConditions_Player)(nil), "dota.CMsgPoorNetworkConditions.Player")
	proto.RegisterType((*CMsgGameserverCrash)(nil), "dota.CMsgGameserverCrash")
	proto.RegisterType((*CMsgConnectedPlayers)(nil), "dota.CMsgConnectedPlayers")
	proto.RegisterType((*CMsgConnectedPlayers_Player)(nil), "dota.CMsgConnectedPlayers.Player")
	proto.RegisterType((*CMsgGameServerInfo)(nil), "dota.CMsgGameServerInfo")
	proto.RegisterType((*CMsgLeaverDetected)(nil), "dota.CMsgLeaverDetected")
	proto.RegisterType((*CMsgLeaverDetectedResponse)(nil), "dota.CMsgLeaverDetectedResponse")
	proto.RegisterType((*CMsgDOTAFantasyFinalPlayerStats)(nil), "dota.CMsgDOTAFantasyFinalPlayerStats")
	proto.RegisterType((*CMsgDOTAFantasyLivePlayerStats)(nil), "dota.CMsgDOTAFantasyLivePlayerStats")
	proto.RegisterType((*CMsgDOTAFantasyMatch)(nil), "dota.CMsgDOTAFantasyMatch")
	proto.RegisterType((*CMsgDOTAUpdateClippy)(nil), "dota.CMsgDOTAUpdateClippy")
	proto.RegisterType((*CMsgServerToGCRealtimeStats)(nil), "dota.CMsgServerToGCRealtimeStats")
	proto.RegisterType((*CMsgGCToServerRealtimeStatsStartStop)(nil), "dota.CMsgGCToServerRealtimeStatsStartStop")
	proto.RegisterType((*CMsgGameMatchSignOut)(nil), "dota.CMsgGameMatchSignOut")
	proto.RegisterType((*CMsgGameMatchSignOut_CTeam)(nil), "dota.CMsgGameMatchSignOut.CTeam")
	proto.RegisterType((*CMsgGameMatchSignOut_CTeam_CPlayer)(nil), "dota.CMsgGameMatchSignOut.CTeam.CPlayer")
	proto.RegisterType((*CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData)(nil), "dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData")
	proto.RegisterType((*CMsgGameMatchSignOut_CAdditionalSignoutMsg)(nil), "dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg")
	proto.RegisterType((*CMsgGameMatchSignOut_CSocialFeedMatchEvent)(nil), "dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent")
	proto.RegisterType((*CMsgGameMatchSignOut_CCustomGameData)(nil), "dota.CMsgGameMatchSignOut.CCustomGameData")
	proto.RegisterType((*CMsgGameMatchSignOut_EventGameLeaderboardEntry)(nil), "dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry")
	proto.RegisterType((*CMsgGameMatchSignOut_WardPlacement)(nil), "dota.CMsgGameMatchSignOut.WardPlacement")
	proto.RegisterType((*CMsgSignOutDraftInfo)(nil), "dota.CMsgSignOutDraftInfo")
	proto.RegisterType((*CMsgSignOutBotInfo)(nil), "dota.CMsgSignOutBotInfo")
	proto.RegisterType((*CMsgSignOutPlayerStats)(nil), "dota.CMsgSignOutPlayerStats")
	proto.RegisterType((*CMsgSignOutCommunicationSummary)(nil), "dota.CMsgSignOutCommunicationSummary")
	proto.RegisterType((*CMsgSignOutCommunicationSummary_PlayerCommunication)(nil), "dota.CMsgSignOutCommunicationSummary.PlayerCommunication")
	proto.RegisterType((*CMsgGameMatchSignoutResponse)(nil), "dota.CMsgGameMatchSignoutResponse")
	proto.RegisterType((*CMsgGameMatchSignoutResponse_PlayerMetadata)(nil), "dota.CMsgGameMatchSignoutResponse.PlayerMetadata")
	proto.RegisterType((*CMsgTimedRewardContainer)(nil), "dota.CMsgTimedRewardContainer")
	proto.RegisterType((*CMsgGameMatchSignOutPermissionRequest)(nil), "dota.CMsgGameMatchSignOutPermissionRequest")
	proto.RegisterType((*CMsgGameMatchSignOutPermissionResponse)(nil), "dota.CMsgGameMatchSignOutPermissionResponse")
	proto.RegisterType((*CMsgGameMatchSignOutEventGameData)(nil), "dota.CMsgGameMatchSignOutEventGameData")
	proto.RegisterType((*CMsgDOTALiveScoreboardUpdate)(nil), "dota.CMsgDOTALiveScoreboardUpdate")
	proto.RegisterType((*CMsgDOTALiveScoreboardUpdate_Team)(nil), "dota.CMsgDOTALiveScoreboardUpdate.Team")
	proto.RegisterType((*CMsgDOTALiveScoreboardUpdate_Team_Player)(nil), "dota.CMsgDOTALiveScoreboardUpdate.Team.Player")
	proto.RegisterType((*CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility)(nil), "dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility")
	proto.RegisterType((*CMsgDOTARequestPlayerResources)(nil), "dota.CMsgDOTARequestPlayerResources")
	proto.RegisterType((*CMsgDOTARequestPlayerResourcesResponse)(nil), "dota.CMsgDOTARequestPlayerResourcesResponse")
	proto.RegisterType((*CMsgDOTARequestBatchPlayerResources)(nil), "dota.CMsgDOTARequestBatchPlayerResources")
	proto.RegisterType((*CMsgDOTARequestBatchPlayerResourcesResponse)(nil), "dota.CMsgDOTARequestBatchPlayerResourcesResponse")
	proto.RegisterType((*CMsgDOTARequestBatchPlayerResourcesResponse_Result)(nil), "dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result")
	proto.RegisterType((*CMsgDOTAPlayerFailedToConnect)(nil), "dota.CMsgDOTAPlayerFailedToConnect")
	proto.RegisterType((*CMsgGCToRelayConnect)(nil), "dota.CMsgGCToRelayConnect")
	proto.RegisterType((*CMsgGCGCToLANServerRelayConnect)(nil), "dota.CMsgGCGCToLANServerRelayConnect")
	proto.RegisterType((*CMsgGCToRelayConnectResponse)(nil), "dota.CMsgGCToRelayConnectResponse")
	proto.RegisterType((*CMsgGCBanStatusRequest)(nil), "dota.CMsgGCBanStatusRequest")
	proto.RegisterType((*CMsgGCBanStatusResponse)(nil), "dota.CMsgGCBanStatusResponse")
	proto.RegisterType((*CMsgTournamentItemEvent)(nil), "dota.CMsgTournamentItemEvent")
	proto.RegisterType((*CMsgTournamentItemEventResponse)(nil), "dota.CMsgTournamentItemEventResponse")
	proto.RegisterType((*CMsgTeamFanfare)(nil), "dota.CMsgTeamFanfare")
	proto.RegisterType((*CMsgResponseTeamFanfare)(nil), "dota.CMsgResponseTeamFanfare")
	proto.RegisterType((*CMsgGameServerUploadSaveGame)(nil), "dota.CMsgGameServerUploadSaveGame")
	proto.RegisterType((*CMsgGameServerSaveGameResult)(nil), "dota.CMsgGameServerSaveGameResult")
	proto.RegisterType((*CMsgGameServerGetLoadGame)(nil), "dota.CMsgGameServerGetLoadGame")
	proto.RegisterType((*CMsgGameServerGetLoadGameResult)(nil), "dota.CMsgGameServerGetLoadGameResult")
	proto.RegisterType((*CMsgDOTAGenerateDiretidePrizeList)(nil), "dota.CMsgDOTAGenerateDiretidePrizeList")
	proto.RegisterType((*CMsgDOTAGenerateDiretidePrizeListResponse)(nil), "dota.CMsgDOTAGenerateDiretidePrizeListResponse")
	proto.RegisterType((*CMsgDOTARewardDiretidePrizes)(nil), "dota.CMsgDOTARewardDiretidePrizes")
	proto.RegisterType((*CMsgDOTADiretidePrizesRewardedResponse)(nil), "dota.CMsgDOTADiretidePrizesRewardedResponse")
	proto.RegisterType((*CMsgDOTAAwardEventPoints)(nil), "dota.CMsgDOTAAwardEventPoints")
	proto.RegisterType((*CMsgDOTAAwardEventPoints_AwardPoints)(nil), "dota.CMsgDOTAAwardEventPoints.AwardPoints")
	proto.RegisterType((*CMsgServerToGCSignoutAwardAdditionalDrops)(nil), "dota.CMsgServerToGCSignoutAwardAdditionalDrops")
	proto.RegisterType((*CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops)(nil), "dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops")
	proto.RegisterType((*CMsgDOTAFrostivusTimeElapsed)(nil), "dota.CMsgDOTAFrostivusTimeElapsed")
	proto.RegisterType((*CMsgDOTAFrostivusTimeElapsed_User)(nil), "dota.CMsgDOTAFrostivusTimeElapsed.User")
	proto.RegisterType((*CMsgGCToServerPingRequest)(nil), "dota.CMsgGCToServerPingRequest")
	proto.RegisterType((*CMsgGCToServerPingResponse)(nil), "dota.CMsgGCToServerPingResponse")
	proto.RegisterType((*CMsgGCToServerConsoleCommand)(nil), "dota.CMsgGCToServerConsoleCommand")
	proto.RegisterType((*CMsgServerGetEventPoints)(nil), "dota.CMsgServerGetEventPoints")
	proto.RegisterType((*CMsgServerGetEventPointsResponse)(nil), "dota.CMsgServerGetEventPointsResponse")
	proto.RegisterType((*CMsgServerGetEventPointsResponse_Points)(nil), "dota.CMsgServerGetEventPointsResponse.Points")
	proto.RegisterType((*CMsgServerGrantSurveyPermission)(nil), "dota.CMsgServerGrantSurveyPermission")
	proto.RegisterType((*CMsgServerGrantSurveyPermission_Survey)(nil), "dota.CMsgServerGrantSurveyPermission.Survey")
	proto.RegisterType((*CMsgServerGrantSurveyPermissionResponse)(nil), "dota.CMsgServerGrantSurveyPermissionResponse")
	proto.RegisterType((*CMsgServerToGCMatchConnectionStats)(nil), "dota.CMsgServerToGCMatchConnectionStats")
	proto.RegisterType((*CMsgServerToGCMatchConnectionStats_Player)(nil), "dota.CMsgServerToGCMatchConnectionStats.Player")
	proto.RegisterType((*CMsgServerGCUpdateSpectatorCount)(nil), "dota.CMsgServerGCUpdateSpectatorCount")
	proto.RegisterType((*CSerializedCombatLog)(nil), "dota.CSerializedCombatLog")
	proto.RegisterType((*CSerializedCombatLog_Dictionary)(nil), "dota.CSerializedCombatLog.Dictionary")
	proto.RegisterType((*CSerializedCombatLog_Dictionary_DictString)(nil), "dota.CSerializedCombatLog.Dictionary.DictString")
	proto.RegisterType((*CMsgServerToGCGetAdditionalEquips)(nil), "dota.CMsgServerToGCGetAdditionalEquips")
	proto.RegisterType((*CMsgServerToGCGetAdditionalEquipsResponse)(nil), "dota.CMsgServerToGCGetAdditionalEquipsResponse")
	proto.RegisterType((*CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips)(nil), "dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips")
	proto.RegisterType((*CMsgServerToGCGetProfileCard)(nil), "dota.CMsgServerToGCGetProfileCard")
	proto.RegisterType((*CMsgServerToGCGetProfileCardResponse)(nil), "dota.CMsgServerToGCGetProfileCardResponse")
	proto.RegisterType((*CMsgServerToGCVictoryPredictions)(nil), "dota.CMsgServerToGCVictoryPredictions")
	proto.RegisterType((*CMsgServerToGCVictoryPredictions_Record)(nil), "dota.CMsgServerToGCVictoryPredictions.Record")
	proto.RegisterType((*CMsgSuspiciousActivity)(nil), "dota.CMsgSuspiciousActivity")
	proto.RegisterType((*CMsgServerToGCRequestStatus)(nil), "dota.CMsgServerToGCRequestStatus")
	proto.RegisterType((*CMsgServerToGCRequestStatus_Response)(nil), "dota.CMsgServerToGCRequestStatus_Response")
	proto.RegisterType((*CMsgSignOutAssassinMiniGameInfo)(nil), "dota.CMsgSignOutAssassinMiniGameInfo")
	proto.RegisterType((*CMsgServerToGCGetIngameEventData)(nil), "dota.CMsgServerToGCGetIngameEventData")
	proto.RegisterType((*CMsgGCToServerIngameEventDataOraclePA)(nil), "dota.CMsgGCToServerIngameEventDataOraclePA")
	proto.RegisterType((*CMsgServerToGCKillSummaries)(nil), "dota.CMsgServerToGCKillSummaries")
	proto.RegisterType((*CMsgServerToGCKillSummaries_KillSummary)(nil), "dota.CMsgServerToGCKillSummaries.KillSummary")
	proto.RegisterType((*CMsgGCToServerPredictionResult)(nil), "dota.CMsgGCToServerPredictionResult")
	proto.RegisterType((*CMsgGCToServerPredictionResult_Prediction)(nil), "dota.CMsgGCToServerPredictionResult.Prediction")
	proto.RegisterType((*CMsgServerToGCLockCharmTrading)(nil), "dota.CMsgServerToGCLockCharmTrading")
	proto.RegisterType((*CMsgSignOutUpdatePlayerChallenge)(nil), "dota.CMsgSignOutUpdatePlayerChallenge")
	proto.RegisterType((*CMsgSignOutUpdatePlayerChallenge_Challenge)(nil), "dota.CMsgSignOutUpdatePlayerChallenge.Challenge")
	proto.RegisterType((*CMsgServerToGCRerollPlayerChallenge)(nil), "dota.CMsgServerToGCRerollPlayerChallenge")
	proto.RegisterType((*CMsgServerToGCHoldEventPoints)(nil), "dota.CMsgServerToGCHoldEventPoints")
	proto.RegisterType((*CMsgServerToGCHoldEventPoints_HoldRequest)(nil), "dota.CMsgServerToGCHoldEventPoints.HoldRequest")
	proto.RegisterType((*CMsgSignOutReleaseEventPointHolds)(nil), "dota.CMsgSignOutReleaseEventPointHolds")
	proto.RegisterType((*CMsgGCToServerUpdateBroadcastCheers)(nil), "dota.CMsgGCToServerUpdateBroadcastCheers")
	proto.RegisterType((*CMsgSignOutWagerStats)(nil), "dota.CMsgSignOutWagerStats")
	proto.RegisterType((*CMsgSignOutWagerStats_Player)(nil), "dota.CMsgSignOutWagerStats.Player")
	proto.RegisterType((*CMsgSpendWager)(nil), "dota.CMsgSpendWager")
	proto.RegisterType((*CMsgSpendWager_Player)(nil), "dota.CMsgSpendWager.Player")
	proto.RegisterType((*CMsgSignOutXPCoins)(nil), "dota.CMsgSignOutXPCoins")
	proto.RegisterType((*CMsgSignOutXPCoins_Player)(nil), "dota.CMsgSignOutXPCoins.Player")
	proto.RegisterType((*CMsgSignOutCommunityGoalProgress)(nil), "dota.CMsgSignOutCommunityGoalProgress")
	proto.RegisterType((*CMsgSignOutCommunityGoalProgress_EventGoalIncrement)(nil), "dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement")
	proto.RegisterType((*CMsgServerToGCPostMatchTip)(nil), "dota.CMsgServerToGCPostMatchTip")
	proto.RegisterType((*CMsgServerToGCPostMatchTipResponse)(nil), "dota.CMsgServerToGCPostMatchTipResponse")
	proto.RegisterType((*CMsgServerToGCCloseCompendiumInGamePredictionVoting)(nil), "dota.CMsgServerToGCCloseCompendiumInGamePredictionVoting")
	proto.RegisterType((*CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse)(nil), "dota.CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse")
	proto.RegisterType((*CMsgServerToGCCompendiumInGamePredictionResults)(nil), "dota.CMsgServerToGCCompendiumInGamePredictionResults")
	proto.RegisterType((*CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult)(nil), "dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult")
	proto.RegisterType((*CMsgServerToGCCompendiumInGamePredictionResultsResponse)(nil), "dota.CMsgServerToGCCompendiumInGamePredictionResultsResponse")
	proto.RegisterType((*CMsgGCToGCCompendiumInGamePredictionResults)(nil), "dota.CMsgGCToGCCompendiumInGamePredictionResults")
	proto.RegisterType((*CMsgServerToGCMatchPlayerItemPurchaseHistory)(nil), "dota.CMsgServerToGCMatchPlayerItemPurchaseHistory")
	proto.RegisterType((*CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase)(nil), "dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase")
	proto.RegisterType((*CMsgServerToGCMatchPlayerItemPurchaseHistory_Player)(nil), "dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player")
	proto.RegisterType((*CMsgServerToGCMatchStateHistory)(nil), "dota.CMsgServerToGCMatchStateHistory")
	proto.RegisterType((*CMsgServerToGCMatchStateHistory_PlayerState)(nil), "dota.CMsgServerToGCMatchStateHistory.PlayerState")
	proto.RegisterType((*CMsgServerToGCMatchStateHistory_TeamState)(nil), "dota.CMsgServerToGCMatchStateHistory.TeamState")
	proto.RegisterType((*CMsgServerToGCMatchStateHistory_MatchState)(nil), "dota.CMsgServerToGCMatchStateHistory.MatchState")
	proto.RegisterType((*CMsgServerToGCCavernCrawlIsHeroActive)(nil), "dota.CMsgServerToGCCavernCrawlIsHeroActive")
	proto.RegisterType((*CMsgServerToGCCavernCrawlIsHeroActiveResponse)(nil), "dota.CMsgServerToGCCavernCrawlIsHeroActiveResponse")
	proto.RegisterEnum("dota.EPoorNetworkConditionsType", EPoorNetworkConditionsType_name, EPoorNetworkConditionsType_value)
	proto.RegisterEnum("dota.EAbilityAbuseType", EAbilityAbuseType_name, EAbilityAbuseType_value)
	proto.RegisterEnum("dota.EIntentionalFeedingType", EIntentionalFeedingType_name, EIntentionalFeedingType_value)
	proto.RegisterEnum("dota.ESuspiciousActivity", ESuspiciousActivity_name, ESuspiciousActivity_value)
	proto.RegisterEnum("dota.ESuspiciousBuildType", ESuspiciousBuildType_name, ESuspiciousBuildType_value)
	proto.RegisterEnum("dota.CMsgConnectedPlayers_SendReason", CMsgConnectedPlayers_SendReason_name, CMsgConnectedPlayers_SendReason_value)
	proto.RegisterEnum("dota.CMsgGameServerInfo_ServerType", CMsgGameServerInfo_ServerType_name, CMsgGameServerInfo_ServerType_value)
	proto.RegisterEnum("dota.CMsgGameServerInfo_CustomGames", CMsgGameServerInfo_CustomGames_name, CMsgGameServerInfo_CustomGames_value)
	proto.RegisterEnum("dota.CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState", CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_name, CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_value)
	proto.RegisterEnum("dota.CMsgGameServerSaveGameResult_Result", CMsgGameServerSaveGameResult_Result_name, CMsgGameServerSaveGameResult_Result_value)
	proto.RegisterEnum("dota.CMsgGCToServerPredictionResult_Prediction_EResult", CMsgGCToServerPredictionResult_Prediction_EResult_name, CMsgGCToServerPredictionResult_Prediction_EResult_value)
	proto.RegisterEnum("dota.CMsgServerToGCPostMatchTipResponse_Result", CMsgServerToGCPostMatchTipResponse_Result_name, CMsgServerToGCPostMatchTipResponse_Result_value)
}

func init() { proto.RegisterFile("dota_gcmessages_server.proto", fileDescriptor20) }

var fileDescriptor20 = []byte{
	// 10733 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x7d, 0x5b, 0x6c, 0x1c, 0xc9,
	0x76, 0xd8, 0xce, 0xf0, 0x35, 0x73, 0x86, 0x33, 0x1c, 0x36, 0x29, 0x69, 0x34, 0x5a, 0xad, 0xa4,
	0x91, 0x56, 0xd2, 0x6a, 0x57, 0x5c, 0x89, 0xab, 0xdd, 0x7b, 0x2d, 0xe7, 0xfa, 0x9a, 0x1c, 0x52,
	0xd4, 0x58, 0x24, 0xc5, 0xed, 0xa1, 0x56, 0xbb, 0x79, 0xb5, 0x8b, 0xd3, 0xc5, 0x61, 0x9b, 0x3d,
	0xdd, 0xed, 0xae, 0x1e, 0x3e, 0xee, 0x47, 0xb0, 0x30, 0x82, 0x3c, 0x10, 0x27, 0x46, 0x10, 0x20,
	0x09, 0xe0, 0xe4, 0x27, 0x0e, 0x8c, 0x20, 0x81, 0x3f, 0xec, 0x7c, 0x24, 0x46, 0x80, 0x3c, 0x6e,
	0x00, 0xc3, 0x40, 0x3e, 0xfc, 0x19, 0xdc, 0xaf, 0xc0, 0x0e, 0x92, 0xf8, 0xd7, 0x80, 0x7f, 0x82,
	0x04, 0x49, 0x50, 0xe7, 0x54, 0xf5, 0x63, 0x5e, 0xa4, 0xf6, 0xc6, 0x7f, 0x53, 0xe7, 0x9c, 0xaa,
	0xae, 0xc7, 0xa9, 0x53, 0xe7, 0x9c, 0x3a, 0xa7, 0x06, 0xde, 0xb7, 0xfd, 0x88, 0x59, 0xdd, 0x4e,
	0x8f, 0x0b, 0xc1, 0xba, 0x5c, 0x58, 0x82, 0x87, 0x27, 0x3c, 0x5c, 0x09, 0x42, 0x3f, 0xf2, 0x8d,
	0x69, 0x89, 0xad, 0x2f, 0x89, 0x88, 0xb3, 0x9e, 0xa6, 0x20, 0x54, 0xfd, 0x1a, 0x56, 0x14, 0x47,
	0x2c, 0xe4, 0xb6, 0xc5, 0xbd, 0x7e, 0x4f, 0x23, 0x86, 0x5a, 0xec, 0xf8, 0xbd, 0x9e, 0xef, 0x29,
	0xec, 0x15, 0xde, 0xf1, 0xbd, 0x14, 0x56, 0x81, 0x6b, 0x1e, 0x8f, 0x4e, 0xfd, 0xf0, 0xd8, 0xea,
	0xf8, 0x9e, 0xc7, 0x3b, 0x91, 0x13, 0x57, 0x78, 0x3c, 0xba, 0x39, 0xab, 0xc7, 0xa2, 0xce, 0x91,
	0xd5, 0x63, 0x1e, 0xeb, 0xf2, 0x1e, 0xf7, 0x22, 0x22, 0x6f, 0xfc, 0x8b, 0x29, 0xb8, 0xde, 0xdc,
	0x11, 0xdd, 0x3d, 0xdf, 0x0f, 0x77, 0xa9, 0xcd, 0xa6, 0xef, 0xd9, 0x8e, 0x6c, 0x51, 0x18, 0x87,
	0x50, 0xb1, 0x79, 0x44, 0xed, 0x5b, 0xd1, 0x79, 0xc0, 0x6b, 0xb9, 0xdb, 0xb9, 0x87, 0x95, 0xd5,
	0xdb, 0x2b, 0xf2, 0x2b, 0x2b, 0x9b, 0x23, 0x6b, 0xed, 0x9f, 0x07, 0xfc, 0xf9, 0xcd, 0x63, 0x6b,
	0x34, 0xd6, 0xda, 0xf5, 0x3d, 0x6e, 0x96, 0xe3, 0x66, 0x25, 0xb5, 0xf1, 0xf3, 0x30, 0x17, 0xb8,
	0xec, 0x9c, 0x87, 0xa2, 0x96, 0xbf, 0x3d, 0xf5, 0xb0, 0xb4, 0x7a, 0x9f, 0x3e, 0x30, 0xb6, 0x67,
	0x2b, 0x7b, 0x48, 0x6e, 0xea, 0x6a, 0xf5, 0xff, 0x9a, 0x83, 0x59, 0x82, 0x19, 0x37, 0x01, 0x58,
	0xa7, 0xe3, 0xf7, 0xbd, 0xc8, 0x72, 0x6c, 0xec, 0x70, 0xd9, 0x2c, 0x2a, 0x48, 0xcb, 0x36, 0x7e,
	0x09, 0x16, 0x6d, 0x47, 0xa8, 0x79, 0xb3, 0x42, 0xce, 0x84, 0xef, 0xd5, 0xf2, 0x38, 0xac, 0x3b,
	0x6a, 0x58, 0xea, 0x73, 0x1b, 0x31, 0x99, 0xe3, 0x7b, 0x26, 0x12, 0x3e, 0xaf, 0xef, 0x6e, 0xee,
	0xbf, 0x7d, 0x6d, 0xbe, 0xb2, 0x36, 0x5a, 0xed, 0xe6, 0xeb, 0xdd, 0xdd, 0xcd, 0xe6, 0xbe, 0xd5,
	0xda, 0xfd, 0x6a, 0x6d, 0xbb, 0xb5, 0x61, 0x56, 0x93, 0x76, 0x89, 0xda, 0x78, 0x04, 0x8b, 0x5e,
	0xbf, 0x67, 0x1d, 0x30, 0xdb, 0x72, 0xbc, 0x88, 0x87, 0x27, 0xcc, 0x15, 0xb5, 0x29, 0xec, 0xd1,
	0x82, 0xd7, 0xef, 0xad, 0x33, 0xbb, 0xa5, 0xc1, 0x46, 0x03, 0xca, 0x01, 0x67, 0xc7, 0x96, 0xeb,
	0x0b, 0x61, 0x05, 0x9d, 0xa8, 0x36, 0x8d, 0x74, 0x25, 0x09, 0xdc, 0xf6, 0x85, 0xd8, 0xeb, 0x44,
	0x8d, 0x3f, 0x9c, 0x82, 0x25, 0x39, 0x27, 0x5b, 0xac, 0xc7, 0x89, 0xf1, 0x9a, 0x21, 0x13, 0x47,
	0xc6, 0x75, 0x28, 0xd0, 0xfa, 0xaa, 0x01, 0x4f, 0x9b, 0x73, 0x58, 0x6e, 0xd9, 0x12, 0xe5, 0xfa,
	0x07, 0x07, 0xe7, 0x12, 0x25, 0x47, 0x39, 0x6b, 0xce, 0x61, 0xb9, 0x65, 0x1b, 0xbb, 0x00, 0x5d,
	0xd6, 0xe3, 0x96, 0x88, 0x58, 0xc4, 0xb1, 0x5b, 0x95, 0xd5, 0x65, 0x9a, 0x82, 0x8d, 0xd7, 0xfb,
	0x6b, 0x96, 0xfc, 0x4a, 0x5b, 0xe2, 0x9e, 0x5f, 0xa7, 0xf2, 0xda, 0xce, 0xa6, 0xf9, 0x66, 0x7b,
	0xb3, 0x6d, 0xb5, 0xf7, 0xd7, 0xf6, 0x37, 0xad, 0xd6, 0x6e, 0x6b, 0xdf, 0x2c, 0x76, 0x35, 0x95,
	0xf1, 0x09, 0x18, 0x82, 0x7b, 0x91, 0xe3, 0x71, 0xd7, 0x12, 0xec, 0x84, 0x5b, 0x91, 0xd3, 0xe3,
	0x38, 0x8c, 0x39, 0xb3, 0xaa, 0x31, 0x6d, 0x76, 0xc2, 0xf7, 0x9d, 0x1e, 0x37, 0xee, 0x41, 0xa5,
	0xd3, 0x17, 0x91, 0xdf, 0xb3, 0xb0, 0x13, 0x8e, 0x5d, 0x2b, 0x61, 0xf7, 0xe6, 0x09, 0x2a, 0x3f,
	0xde, 0xb2, 0x8d, 0xbb, 0x50, 0x8e, 0xfc, 0x7e, 0xe8, 0x31, 0xc9, 0xb3, 0x92, 0x68, 0x1e, 0x67,
	0x65, 0x3e, 0x01, 0xb6, 0x6c, 0xe3, 0x3e, 0x2c, 0xd0, 0x6c, 0x58, 0xb8, 0xf3, 0x24, 0xd9, 0x0c,
	0xb6, 0x55, 0x26, 0x70, 0x5b, 0x42, 0x5b, 0xb6, 0xf1, 0x14, 0xae, 0x28, 0xba, 0xa0, 0x7f, 0xe0,
	0x3a, 0x1d, 0xcb, 0x09, 0x2c, 0x66, 0xdb, 0x61, 0x6d, 0x16, 0xfb, 0x68, 0x10, 0x72, 0x0f, 0x71,
	0xad, 0x60, 0xcd, 0xb6, 0x43, 0xe3, 0x16, 0x94, 0x74, 0x15, 0x3f, 0x8c, 0x6a, 0x73, 0xf8, 0x75,
	0x50, 0x84, 0x7e, 0x18, 0x19, 0x1f, 0x42, 0x45, 0x11, 0x74, 0xdc, 0xbe, 0x88, 0x78, 0x58, 0x2b,
	0x20, 0x8d, 0xfa, 0x74, 0x93, 0x80, 0x46, 0x15, 0xa6, 0x02, 0xc7, 0xae, 0x15, 0x11, 0x27, 0x7f,
	0x1a, 0x57, 0x61, 0x96, 0x7b, 0x5d, 0xc7, 0xe3, 0x35, 0x40, 0xa0, 0x2a, 0x35, 0xfe, 0x71, 0x11,
	0x96, 0xe5, 0x1a, 0x37, 0x89, 0x93, 0xb8, 0x4d, 0x6c, 0x2d, 0x8c, 0x5d, 0x58, 0xec, 0x68, 0x98,
	0xa5, 0xb7, 0x4b, 0x0e, 0xb7, 0xcb, 0x9d, 0x64, 0xbb, 0x0c, 0x56, 0xd3, 0x3b, 0xa5, 0xda, 0x19,
	0x6c, 0x6f, 0x1f, 0x96, 0x13, 0x86, 0x4d, 0x35, 0x39, 0x77, 0xd9, 0x26, 0x97, 0xd2, 0xd5, 0x93,
	0x5e, 0xa6, 0x99, 0x2a, 0xff, 0x53, 0x33, 0xd5, 0x13, 0x58, 0x3e, 0x74, 0x42, 0x11, 0x59, 0x07,
	0xae, 0xef, 0xdb, 0xd6, 0x11, 0x0b, 0x02, 0xee, 0x71, 0x1b, 0x97, 0xac, 0x60, 0x1a, 0x88, 0x5b,
	0x97, 0xa8, 0x97, 0x0a, 0x63, 0x3c, 0x83, 0xab, 0x2e, 0xef, 0xb2, 0xce, 0xb9, 0xd5, 0x63, 0x42,
	0x58, 0x49, 0x27, 0x71, 0xf6, 0x0b, 0xe6, 0x32, 0x61, 0x77, 0x98, 0x10, 0xc9, 0x0e, 0x37, 0xde,
	0xc2, 0xb5, 0xc0, 0xf7, 0x43, 0x2b, 0x25, 0x58, 0x95, 0xac, 0xc1, 0xf5, 0x29, 0xad, 0xde, 0xba,
	0x40, 0x24, 0x99, 0x57, 0x82, 0x91, 0x32, 0xf4, 0xb5, 0xe4, 0x20, 0xcf, 0xd6, 0x92, 0xa6, 0x80,
	0x33, 0xf2, 0xe1, 0x84, 0xd9, 0x6d, 0x73, 0xcf, 0x56, 0xd2, 0x66, 0x4e, 0x8b, 0x16, 0x10, 0x31,
	0x50, 0x6e, 0x89, 0x90, 0xd9, 0x0e, 0xf3, 0x22, 0xeb, 0xd8, 0x71, 0x5d, 0x81, 0xfb, 0xa6, 0x6c,
	0xce, 0x2b, 0xe0, 0x2b, 0x09, 0x93, 0x42, 0xd0, 0x76, 0x42, 0xae, 0x28, 0x68, 0xd3, 0x14, 0x25,
	0x84, 0xd0, 0x77, 0x40, 0x93, 0x5b, 0x2e, 0x67, 0x76, 0xad, 0x72, 0x3b, 0xf7, 0x70, 0xc6, 0x2c,
	0x29, 0xd8, 0x36, 0x67, 0xb6, 0x64, 0xec, 0x83, 0xbe, 0xe3, 0xda, 0x8e, 0xd7, 0x55, 0x8b, 0xb9,
	0x40, 0x8c, 0xad, 0xa1, 0xb8, 0x3e, 0xf5, 0x3f, 0x4a, 0x04, 0xef, 0x75, 0x28, 0xc4, 0xfb, 0x2f,
	0x47, 0xa2, 0x46, 0xa8, 0x9d, 0x77, 0x0d, 0xe6, 0x8e, 0x78, 0xe8, 0x6b, 0x21, 0x54, 0x36, 0x67,
	0x65, 0xb1, 0x65, 0x1b, 0xdf, 0x87, 0x79, 0x97, 0x33, 0xda, 0xba, 0x5a, 0x0a, 0x95, 0x56, 0xaf,
	0x24, 0xd3, 0xb3, 0x8d, 0x58, 0xfc, 0x96, 0x59, 0x72, 0x93, 0xc2, 0x68, 0x39, 0x3e, 0xfd, 0x67,
	0x22, 0xc7, 0x1b, 0x7f, 0x33, 0x0f, 0x90, 0x2c, 0x8b, 0x51, 0x02, 0xbd, 0x30, 0xd5, 0xf7, 0x8c,
	0x32, 0x14, 0x5f, 0x6e, 0xae, 0x99, 0xfb, 0xeb, 0x9b, 0x6b, 0xfb, 0xd5, 0x9c, 0x51, 0x01, 0x90,
	0x2c, 0x4d, 0xdc, 0x5c, 0xcd, 0x1b, 0x0b, 0x50, 0x7a, 0xd1, 0x32, 0xdb, 0xfb, 0xd6, 0xfa, 0xf6,
	0xeb, 0xd7, 0x1b, 0xd5, 0x29, 0x63, 0x19, 0xaa, 0x7b, 0xdb, 0x6b, 0xdf, 0x6c, 0x9a, 0x96, 0xfa,
	0xee, 0xe6, 0x46, 0x75, 0x5a, 0x92, 0x29, 0xe8, 0xcb, 0x4d, 0xf3, 0x75, 0x75, 0xc6, 0xb8, 0x07,
	0xb7, 0x15, 0x20, 0xe9, 0xe1, 0xe6, 0x86, 0xac, 0xd3, 0xde, 0xfc, 0xf2, 0xcd, 0xe6, 0x6e, 0x73,
	0xb3, 0x5d, 0x9d, 0x35, 0xee, 0x43, 0x63, 0x14, 0xd5, 0xee, 0xeb, 0x0c, 0xdd, 0x9c, 0x71, 0x05,
	0x16, 0x65, 0xaf, 0x68, 0x8b, 0xed, 0xb7, 0x76, 0x36, 0x5f, 0xbf, 0xd9, 0xaf, 0x82, 0xb1, 0x04,
	0x0b, 0x3b, 0x6b, 0xed, 0x76, 0xaa, 0x72, 0xb5, 0x64, 0x14, 0x61, 0xe6, 0x55, 0x6b, 0x7b, 0xbb,
	0x5d, 0x2d, 0x1b, 0x06, 0x54, 0xd6, 0xdf, 0xb4, 0xb6, 0x37, 0x5a, 0xbb, 0x5b, 0x6a, 0x40, 0x95,
	0xc6, 0x9f, 0x16, 0xc1, 0xd0, 0x67, 0x50, 0x1b, 0x65, 0x5c, 0xcb, 0x3b, 0xf4, 0xc7, 0xcb, 0xd6,
	0xdc, 0x58, 0xd9, 0xfa, 0x19, 0x5c, 0xd5, 0x55, 0x42, 0xe7, 0x84, 0x45, 0x3c, 0xae, 0x93, 0xc7,
	0x3a, 0x4b, 0xaa, 0x0e, 0x21, 0x47, 0x0b, 0xe4, 0xa9, 0x21, 0x81, 0x7c, 0x2f, 0x16, 0xc8, 0xd1,
	0x09, 0xd1, 0xd0, 0x41, 0x3a, 0x4f, 0xd0, 0xfd, 0x13, 0xa4, 0xfa, 0x1c, 0xae, 0x31, 0x21, 0x9c,
	0xae, 0xc7, 0x6d, 0x6b, 0x80, 0xfc, 0x2a, 0x92, 0x2f, 0x6b, 0x74, 0x3b, 0x5d, 0xed, 0x39, 0x5c,
	0x4f, 0x9f, 0x34, 0x36, 0x8b, 0x58, 0x37, 0x64, 0x3d, 0xaa, 0x78, 0x05, 0x2b, 0x5e, 0x4b, 0x9d,
	0x39, 0x1a, 0x8f, 0x75, 0x6f, 0x82, 0xea, 0xa6, 0x75, 0xcc, 0xcf, 0xf1, 0x80, 0x2a, 0x9a, 0x45,
	0x82, 0xbc, 0xe2, 0xe7, 0xc6, 0x63, 0x50, 0x73, 0x64, 0x1d, 0x39, 0x07, 0x3c, 0xf4, 0x98, 0xe4,
	0x56, 0x25, 0xe6, 0x16, 0x09, 0xf3, 0x32, 0x41, 0x18, 0x5f, 0xc6, 0xf3, 0x80, 0x7a, 0xd9, 0x1c,
	0x32, 0xfe, 0xdd, 0x64, 0xdf, 0x64, 0x97, 0x67, 0x45, 0x8d, 0x42, 0xaa, 0x66, 0xa5, 0x37, 0xbb,
	0xed, 0xbd, 0xcd, 0x66, 0xeb, 0x45, 0x6b, 0x73, 0x43, 0xcf, 0x1c, 0x6a, 0x61, 0x77, 0x41, 0x1d,
	0x5a, 0x56, 0xc8, 0xbb, 0x8e, 0x92, 0x55, 0xf1, 0xc4, 0x99, 0x08, 0x4b, 0x9d, 0x77, 0xae, 0xcf,
	0x6c, 0x76, 0xd2, 0x45, 0xa9, 0x9a, 0xd7, 0xe7, 0xdd, 0x36, 0x01, 0x8d, 0xef, 0x41, 0x2d, 0x99,
	0xd6, 0x83, 0xd0, 0x67, 0x76, 0x87, 0x89, 0x88, 0x34, 0x02, 0xc0, 0x0a, 0x57, 0xf4, 0x7a, 0xac,
	0x6b, 0x2c, 0xaa, 0x05, 0x0f, 0xa1, 0xaa, 0x2a, 0xe2, 0x31, 0x82, 0x15, 0x4a, 0x58, 0x41, 0x7d,
	0x57, 0x0e, 0x0c, 0x29, 0x37, 0xe0, 0x56, 0xdc, 0x5d, 0x97, 0x9d, 0x5b, 0xc9, 0x49, 0x16, 0x4b,
	0xa1, 0x79, 0x94, 0x42, 0x37, 0xf4, 0x00, 0x5c, 0x76, 0x1e, 0x4b, 0x5b, 0xad, 0x13, 0xdc, 0x87,
	0x05, 0xaa, 0x2e, 0x5c, 0x3f, 0x12, 0x56, 0x8f, 0x9d, 0xd5, 0xca, 0x24, 0xe7, 0x10, 0xdc, 0x96,
	0xd0, 0x1d, 0x76, 0x66, 0x7c, 0x04, 0x55, 0x04, 0x88, 0xe4, 0x3b, 0x4a, 0x6a, 0x52, 0x7d, 0x11,
	0xb7, 0x6c, 0x7c, 0x01, 0xd7, 0x54, 0x8f, 0x5c, 0x87, 0x7b, 0x51, 0xba, 0xc6, 0x02, 0xd6, 0xb8,
	0x82, 0xe8, 0x26, 0x61, 0x93, 0x7a, 0x3f, 0x07, 0xef, 0x23, 0x82, 0xdb, 0x34, 0xf6, 0x41, 0x9d,
	0xa6, 0x8a, 0xa3, 0xa9, 0x29, 0x9a, 0x64, 0x81, 0xf5, 0x50, 0x3e, 0x01, 0x23, 0x60, 0xa1, 0xd4,
	0x93, 0xf4, 0x84, 0xf4, 0xbd, 0xa8, 0xb6, 0x88, 0xa3, 0xa9, 0x12, 0x46, 0xcd, 0x41, 0xdf, 0xc3,
	0x7d, 0x12, 0x9d, 0x58, 0x82, 0x77, 0x42, 0x1e, 0x59, 0x1d, 0xdf, 0xe6, 0x35, 0x83, 0xf4, 0xaf,
	0xe8, 0xa4, 0x8d, 0xc0, 0xa6, 0x6f, 0xf3, 0xd4, 0x72, 0x9f, 0xf0, 0x50, 0x48, 0xa6, 0x58, 0x4a,
	0xab, 0x37, 0x5f, 0x11, 0x70, 0x84, 0x16, 0xb4, 0x3c, 0x4a, 0x0b, 0xfa, 0x1a, 0x0c, 0xe6, 0xba,
	0xfe, 0xa9, 0x95, 0xd2, 0xfc, 0x44, 0xed, 0x1a, 0xf2, 0xee, 0xbd, 0xb1, 0xbc, 0xdb, 0x8c, 0x15,
	0x42, 0xf1, 0x7c, 0x7a, 0xfd, 0xf5, 0xfe, 0x4b, 0xb3, 0x8a, 0xad, 0xa4, 0xe0, 0x8d, 0x55, 0x29,
	0xa0, 0x63, 0x4e, 0x5e, 0x80, 0x34, 0x93, 0x57, 0xdf, 0x33, 0x0a, 0x30, 0x2d, 0xe5, 0x5f, 0x35,
	0x27, 0xa5, 0xdb, 0x9e, 0xf9, 0xfa, 0xeb, 0x6f, 0xaa, 0xf9, 0xc6, 0xc7, 0x50, 0x4a, 0x35, 0x21,
	0x69, 0x64, 0xe3, 0x44, 0xbd, 0xfb, 0x7a, 0x57, 0x52, 0x17, 0x60, 0xfa, 0xf5, 0xee, 0xb6, 0x24,
	0xfe, 0xcd, 0x29, 0x12, 0x7b, 0x74, 0x1e, 0x6d, 0xa0, 0xf9, 0xc2, 0xed, 0x49, 0x67, 0xde, 0x6b,
	0x28, 0xa7, 0x8e, 0xb6, 0xbe, 0x50, 0xca, 0x50, 0x2d, 0x51, 0x86, 0x92, 0xb3, 0xad, 0x2f, 0xac,
	0xe8, 0x79, 0x15, 0x15, 0xa2, 0xed, 0xcd, 0xb5, 0xaf, 0x36, 0x4d, 0x4b, 0x76, 0xc0, 0x9c, 0x77,
	0x53, 0x14, 0x43, 0x67, 0xe5, 0xf4, 0xa5, 0xcf, 0xca, 0xe1, 0xe5, 0x99, 0x19, 0xb5, 0x3c, 0x23,
	0x8f, 0xd4, 0xd9, 0x3f, 0x1b, 0xd3, 0x68, 0x82, 0xbe, 0x35, 0xf7, 0xd3, 0xe8, 0x5b, 0x8d, 0x67,
	0x50, 0x1f, 0x5e, 0x27, 0x93, 0x8b, 0xc0, 0xf7, 0x04, 0x97, 0x5a, 0x77, 0xc8, 0x45, 0xdf, 0x8d,
	0x94, 0x61, 0xa8, 0x4a, 0x8d, 0x6f, 0xe0, 0x96, 0xac, 0x25, 0x57, 0xe0, 0x05, 0xf3, 0x22, 0x26,
	0xce, 0x5f, 0x38, 0x1e, 0x73, 0x49, 0xb3, 0x91, 0x93, 0x28, 0x8c, 0x2f, 0x60, 0x46, 0xce, 0xbb,
	0x36, 0x51, 0x6f, 0x27, 0xfd, 0x4b, 0xd5, 0x4a, 0x55, 0x30, 0x89, 0xbc, 0xf1, 0x35, 0x7c, 0x30,
	0x40, 0xb4, 0xed, 0x9c, 0xf0, 0xff, 0x1f, 0x2d, 0xff, 0x24, 0x47, 0xa6, 0x42, 0x8a, 0x6a, 0x47,
	0x9a, 0x7d, 0x93, 0xec, 0xc1, 0x1b, 0x50, 0x74, 0x39, 0xeb, 0xf6, 0x79, 0xa2, 0x8b, 0x15, 0x08,
	0x40, 0x48, 0xc1, 0x43, 0x87, 0x0b, 0x89, 0xa4, 0xa3, 0xb5, 0x40, 0x80, 0x96, 0x8d, 0xe7, 0x57,
	0xc4, 0xc2, 0x28, 0x31, 0xeb, 0xca, 0x66, 0x11, 0x21, 0x28, 0x8e, 0xe9, 0x60, 0x96, 0x75, 0xf1,
	0x40, 0x9a, 0x89, 0x0f, 0x66, 0x87, 0xa3, 0x4b, 0xc0, 0xb8, 0x02, 0xb3, 0xb8, 0x53, 0x9e, 0x22,
	0x4b, 0x95, 0xcd, 0x19, 0x59, 0x7a, 0x1a, 0x83, 0x57, 0x95, 0x71, 0x85, 0xe0, 0xd5, 0x86, 0x97,
	0x0c, 0xed, 0x4d, 0x60, 0xb3, 0x88, 0x37, 0x5d, 0x27, 0x08, 0xce, 0x8d, 0x8f, 0xc1, 0xe8, 0x4a,
	0x43, 0x00, 0xeb, 0x28, 0x9d, 0x92, 0xcc, 0xa0, 0xb2, 0xb9, 0x20, 0x31, 0xfb, 0x9c, 0xf5, 0x5e,
	0xa2, 0x72, 0x29, 0x8c, 0x8f, 0x60, 0x51, 0xda, 0xde, 0x59, 0xda, 0x3c, 0xd2, 0x56, 0x0e, 0x58,
	0x9a, 0xb4, 0xf1, 0x0f, 0x73, 0x70, 0x43, 0x7e, 0x50, 0x49, 0x11, 0x7f, 0xab, 0x69, 0x72, 0xe6,
	0xca, 0xa1, 0xd2, 0x1a, 0xfd, 0x1c, 0xcc, 0xd9, 0x24, 0x78, 0x71, 0x46, 0x4b, 0x69, 0x79, 0x25,
	0x3b, 0xa9, 0xa9, 0xb5, 0x7d, 0x23, 0xf6, 0x79, 0x28, 0xb8, 0xa9, 0x2b, 0x19, 0x3f, 0x03, 0x73,
	0x9d, 0x7e, 0x28, 0x65, 0x30, 0xce, 0x7a, 0x86, 0xbf, 0x47, 0xd6, 0x37, 0x35, 0x7d, 0xe3, 0xcf,
	0xc3, 0x3d, 0x94, 0x8a, 0xcd, 0x7d, 0xbf, 0xad, 0x4e, 0xb2, 0x54, 0xcf, 0xda, 0x72, 0x05, 0xda,
	0x91, 0x1f, 0x18, 0xb5, 0x6c, 0x17, 0x0b, 0xc9, 0xc7, 0x6b, 0xd9, 0x8f, 0x17, 0x92, 0xb6, 0x7f,
	0xe5, 0x21, 0xcd, 0xb3, 0xfc, 0x2c, 0xf2, 0x4e, 0xdb, 0xe9, 0x7a, 0xaf, 0xfb, 0x91, 0x71, 0x6b,
	0x90, 0x85, 0xd6, 0xa7, 0xbf, 0xfd, 0xcd, 0x9b, 0xb9, 0x84, 0x91, 0xea, 0x50, 0xb0, 0xfb, 0x21,
	0x69, 0x29, 0x8a, 0x8f, 0x74, 0xd9, 0x68, 0x40, 0x19, 0x17, 0xa9, 0xdb, 0x3f, 0x17, 0xd6, 0xa9,
	0xe3, 0x21, 0x2f, 0x15, 0xcc, 0x92, 0x04, 0x6e, 0xf5, 0xcf, 0xc5, 0x5b, 0xc7, 0x33, 0x0c, 0x98,
	0xb6, 0xb5, 0x14, 0x9b, 0x33, 0xf1, 0xb7, 0xe4, 0x21, 0xaf, 0xdf, 0x8b, 0x2d, 0xd1, 0x19, 0x5c,
	0x29, 0xf0, 0xfa, 0x3d, 0x6d, 0x5d, 0x7e, 0x01, 0xc8, 0x1e, 0xa2, 0x36, 0x3b, 0xb8, 0x53, 0x06,
	0x07, 0xb0, 0xd2, 0x94, 0xab, 0x4b, 0xdc, 0x84, 0xf6, 0x4e, 0xe4, 0x9f, 0x26, 0xa2, 0xb8, 0x80,
	0x2d, 0x97, 0x10, 0xa6, 0xa4, 0xeb, 0x03, 0x58, 0x38, 0x60, 0x61, 0xc8, 0x3a, 0xc7, 0x42, 0x53,
	0x15, 0x35, 0xa7, 0x10, 0x58, 0x11, 0xca, 0xc9, 0x54, 0x52, 0x94, 0x2c, 0x77, 0x5d, 0x4c, 0xe9,
	0xa6, 0xa8, 0xc5, 0x96, 0x50, 0xc5, 0x53, 0x1a, 0x16, 0x2a, 0xaf, 0x0f, 0xa1, 0x9a, 0x36, 0x66,
	0x71, 0x23, 0x91, 0x6d, 0x56, 0x49, 0x0c, 0x59, 0xdc, 0x4d, 0x77, 0x60, 0x1e, 0x75, 0x80, 0x03,
	0xe6, 0x32, 0xaf, 0xc3, 0x51, 0x27, 0xc9, 0x9b, 0x25, 0x09, 0x5b, 0x27, 0x90, 0xfc, 0x1a, 0x3f,
	0x91, 0xa7, 0xbd, 0xe8, 0xf8, 0x21, 0x47, 0x65, 0xa4, 0x6c, 0x02, 0x82, 0xda, 0x12, 0x62, 0x3c,
	0x07, 0x08, 0x1c, 0x39, 0x9c, 0x03, 0xe6, 0x89, 0xda, 0x02, 0xce, 0xd8, 0x0d, 0x3d, 0x63, 0x72,
	0xaa, 0x24, 0xef, 0xb7, 0xb9, 0xcb, 0x3b, 0xd1, 0xa6, 0xac, 0x65, 0x16, 0x91, 0x7c, 0x9d, 0x79,
	0xc2, 0xd8, 0x84, 0xf2, 0x21, 0x49, 0x14, 0x8b, 0x44, 0xd3, 0x47, 0x97, 0x14, 0x4d, 0xf3, 0xaa,
	0x1a, 0xed, 0x1a, 0x01, 0xb7, 0x69, 0x31, 0x2d, 0x11, 0x85, 0xcc, 0xeb, 0x72, 0x52, 0x4a, 0x2c,
	0x66, 0xff, 0x52, 0x5f, 0x44, 0x3d, 0xa9, 0xff, 0xd4, 0x16, 0xb1, 0xe5, 0x47, 0x49, 0xcb, 0x9b,
	0x1d, 0xdf, 0xd3, 0x4d, 0x62, 0x25, 0x54, 0x58, 0xd6, 0xe2, 0x2a, 0xe6, 0xcd, 0x60, 0x02, 0x56,
	0x18, 0x9f, 0xc2, 0x12, 0xeb, 0x47, 0x7e, 0x8f, 0x45, 0x4e, 0xc7, 0x12, 0xc8, 0xe8, 0x36, 0x0f,
	0x51, 0xbd, 0x29, 0x98, 0x46, 0x8c, 0x6a, 0x6b, 0xcc, 0x65, 0x95, 0x9c, 0xf1, 0x8e, 0x85, 0x2b,
	0xdf, 0xcd, 0xb1, 0x70, 0xf7, 0xa7, 0x72, 0x2c, 0x7c, 0x03, 0x0b, 0xcc, 0xa6, 0x02, 0x73, 0xad,
	0x9e, 0xe8, 0x8a, 0xda, 0x32, 0x4e, 0xe5, 0x93, 0x49, 0xbb, 0x62, 0x2d, 0xae, 0x22, 0x41, 0x7e,
	0x3f, 0xda, 0x11, 0x5d, 0xb3, 0x92, 0x34, 0xb4, 0x23, 0xba, 0xc2, 0xf8, 0xcb, 0x60, 0x08, 0xbf,
	0xe3, 0x30, 0xd7, 0x3a, 0xe4, 0xdc, 0xb6, 0x90, 0xa7, 0x44, 0xed, 0xde, 0xc5, 0xad, 0xb7, 0xb1,
	0xd6, 0x0b, 0xce, 0x6d, 0x84, 0x13, 0x5b, 0x55, 0x45, 0x0c, 0x45, 0x80, 0x90, 0x33, 0x29, 0x4f,
	0x67, 0xd6, 0xe5, 0x6a, 0x5a, 0xa2, 0x23, 0xcb, 0xe6, 0x6e, 0xc4, 0xd0, 0xf8, 0x5a, 0x34, 0x97,
	0x15, 0x76, 0x57, 0x21, 0x37, 0x24, 0xce, 0x78, 0x02, 0xcb, 0x59, 0x6a, 0xab, 0xe7, 0x78, 0x4f,
	0x9f, 0xa0, 0xfe, 0xb8, 0x68, 0x1a, 0x5e, 0x9a, 0x78, 0x47, 0x62, 0x46, 0xd7, 0x58, 0x7d, 0x52,
	0xab, 0x8d, 0xae, 0xb1, 0xfa, 0xc4, 0xf8, 0x21, 0xbc, 0xdf, 0x63, 0x67, 0x4e, 0xaf, 0xdf, 0xb3,
	0x5c, 0x5f, 0x38, 0x5e, 0x37, 0xe9, 0x20, 0x3a, 0x4a, 0xae, 0x63, 0xcd, 0xeb, 0x8a, 0x66, 0x1b,
	0x49, 0x74, 0x2f, 0xd1, 0x6d, 0xf2, 0x7d, 0xa8, 0xe9, 0xa1, 0xf1, 0xb3, 0x40, 0x9e, 0x7e, 0x5e,
	0x87, 0xab, 0xc1, 0xd5, 0xb1, 0xb2, 0x1e, 0xfa, 0x66, 0x8c, 0xa6, 0xe1, 0x3d, 0x83, 0xab, 0x83,
	0x35, 0xd4, 0x00, 0x6f, 0xd0, 0xa4, 0xf0, 0x6c, 0x05, 0x1a, 0xe2, 0x98, 0x5a, 0xab, 0x4f, 0x6a,
	0xef, 0x8f, 0xab, 0xb5, 0xfa, 0x44, 0x9a, 0xbf, 0x07, 0xbe, 0xd7, 0x17, 0x56, 0xd7, 0x77, 0x6d,
	0x29, 0xa1, 0x3d, 0x1e, 0xaa, 0x8f, 0xdd, 0xa4, 0x6a, 0x88, 0xde, 0xf2, 0x5d, 0xfb, 0x2d, 0x22,
	0xe9, 0x63, 0xe3, 0xaa, 0xad, 0x3e, 0xa9, 0x7d, 0x30, 0xae, 0xda, 0xb8, 0xaf, 0x45, 0x7e, 0xc4,
	0xdc, 0xda, 0x2d, 0x32, 0xb6, 0x07, 0xaa, 0xed, 0x4b, 0x9c, 0xf1, 0x19, 0x5c, 0x4d, 0x55, 0x73,
	0x7d, 0x11, 0xf7, 0xf1, 0x36, 0x7e, 0x6c, 0x29, 0xae, 0xb5, 0x2d, 0x71, 0xd4, 0xc5, 0x31, 0x95,
	0x56, 0x9f, 0xd4, 0xee, 0x8c, 0xa9, 0xb4, 0x3a, 0xba, 0x12, 0xf5, 0xaf, 0x81, 0xfd, 0x1b, 0xa8,
	0x44, 0xdd, 0xdb, 0x87, 0x6a, 0xda, 0x81, 0x2d, 0x6d, 0xfd, 0xda, 0x87, 0xb8, 0xa3, 0x1f, 0x4d,
	0xda, 0x22, 0x89, 0xc9, 0xb1, 0xc1, 0x22, 0x66, 0x56, 0x3a, 0x99, 0xb2, 0x94, 0xea, 0x74, 0xee,
	0x1e, 0xba, 0xac, 0x2b, 0x6a, 0xf7, 0x49, 0xaa, 0x23, 0xe8, 0x85, 0x84, 0x48, 0x02, 0xd4, 0x67,
	0x50, 0xea, 0x8b, 0xda, 0x03, 0x3a, 0x23, 0x25, 0x08, 0xa5, 0xbe, 0x30, 0x1e, 0xc1, 0x62, 0x10,
	0x72, 0xd5, 0x29, 0x7d, 0x42, 0x3f, 0xa4, 0x4b, 0x87, 0x20, 0x44, 0x05, 0x63, 0x43, 0x1f, 0xd4,
	0xe7, 0xf0, 0x01, 0x9d, 0x21, 0x48, 0x2d, 0x39, 0x9c, 0x87, 0x07, 0x3e, 0x0b, 0x6d, 0x8b, 0x7b,
	0x91, 0xd4, 0xdc, 0x6a, 0x8f, 0x70, 0xd3, 0x3f, 0x9b, 0x30, 0x22, 0xdc, 0xd3, 0x12, 0xba, 0x9d,
	0x54, 0xdf, 0xf4, 0xa2, 0xf0, 0xdc, 0xbc, 0xc1, 0xc7, 0xa0, 0x1c, 0x2e, 0x8c, 0x2f, 0x61, 0xe1,
	0x54, 0x7e, 0x28, 0x70, 0x59, 0x87, 0xd3, 0x49, 0xf0, 0x31, 0x7e, 0xeb, 0xe1, 0x84, 0x6f, 0xbd,
	0x65, 0xa1, 0xbd, 0xa7, 0x2b, 0x98, 0x95, 0xd3, 0x74, 0x51, 0x18, 0xdf, 0x83, 0xda, 0x81, 0x3c,
	0x0c, 0xce, 0xad, 0xb0, 0xef, 0xf1, 0x34, 0xb7, 0x89, 0xda, 0x27, 0x38, 0x01, 0x57, 0x08, 0x6f,
	0xf6, 0x3d, 0x9e, 0x70, 0x9b, 0x20, 0x06, 0x1d, 0xa8, 0x88, 0x5c, 0x20, 0x6a, 0x8f, 0x35, 0x83,
	0xa6, 0xeb, 0x21, 0x17, 0x88, 0xfa, 0xff, 0xaa, 0xc0, 0x0c, 0xaa, 0x19, 0xc6, 0x7a, 0x72, 0x81,
	0x95, 0xbb, 0x70, 0x10, 0x58, 0x65, 0xa5, 0x39, 0x78, 0x85, 0xf5, 0x5b, 0x15, 0x98, 0x6b, 0xbe,
	0x93, 0x2b, 0x75, 0x2a, 0xe3, 0x4a, 0x5d, 0x86, 0x19, 0x27, 0xe2, 0x3d, 0x51, 0x9b, 0x46, 0x96,
	0xa0, 0x82, 0x54, 0xb3, 0xe4, 0x70, 0x94, 0x3e, 0x8e, 0xbf, 0x25, 0x25, 0xf9, 0x85, 0x95, 0x22,
	0x8e, 0x05, 0x69, 0x1a, 0xd9, 0x9c, 0x45, 0x47, 0x42, 0x29, 0xe2, 0xaa, 0x24, 0xf5, 0x1d, 0x26,
	0x84, 0x23, 0x22, 0xa1, 0x1c, 0x42, 0xba, 0x68, 0xdc, 0x1d, 0xb4, 0x70, 0xe9, 0x7a, 0x23, 0x6b,
	0xb5, 0x4a, 0x83, 0x83, 0x89, 0xc8, 0x3a, 0x72, 0x22, 0xa1, 0x14, 0xa6, 0x82, 0x04, 0xbc, 0x74,
	0x22, 0xf5, 0x4d, 0x4f, 0xf2, 0x59, 0x49, 0x7f, 0x53, 0x96, 0x8c, 0xdb, 0x30, 0x8f, 0x8b, 0x10,
	0xd0, 0xee, 0x55, 0x4a, 0x12, 0x48, 0xd8, 0x1e, 0x6e, 0x5a, 0xa9, 0x62, 0x9e, 0x05, 0x1a, 0xdf,
	0x8f, 0xb8, 0xf2, 0xda, 0x94, 0xce, 0x02, 0x22, 0xe8, 0x47, 0x5c, 0x5a, 0x2c, 0xd8, 0x8a, 0x08,
	0xa4, 0xe6, 0x4b, 0x0a, 0x52, 0x51, 0x42, 0xda, 0x12, 0x20, 0xa7, 0xc1, 0xe5, 0x27, 0xdc, 0x55,
	0x8e, 0x6d, 0x2a, 0xe0, 0x2d, 0x56, 0x87, 0xb9, 0xdc, 0x26, 0x8b, 0xc1, 0x66, 0x3d, 0xd6, 0xe5,
	0xe8, 0x7b, 0x29, 0x9b, 0x55, 0xc2, 0x48, 0xbd, 0x69, 0x03, 0xe1, 0xc6, 0x0a, 0x2c, 0x29, 0x6a,
	0xd2, 0x2f, 0x15, 0x39, 0x39, 0x5d, 0x16, 0x09, 0xb5, 0x2f, 0x31, 0x43, 0xf4, 0xd8, 0xfa, 0x11,
	0x67, 0xae, 0xe3, 0x75, 0x51, 0x37, 0x89, 0xe9, 0x65, 0xf3, 0x2f, 0x09, 0x81, 0x5e, 0x1a, 0x47,
	0x6e, 0x4d, 0x39, 0x85, 0x82, 0x73, 0xad, 0x9a, 0xcc, 0x4b, 0xe8, 0x36, 0x13, 0x51, 0x9b, 0x73,
	0xcf, 0x58, 0x85, 0x2b, 0xa2, 0x1f, 0x04, 0x7e, 0x18, 0x59, 0xec, 0xc0, 0x71, 0x9d, 0xe8, 0xdc,
	0x3a, 0x61, 0x6e, 0x9f, 0x2b, 0x2f, 0xcc, 0x92, 0x42, 0xae, 0x11, 0xee, 0x2b, 0x89, 0x92, 0x2c,
	0x16, 0xb0, 0x30, 0xc2, 0x8b, 0xc1, 0x2b, 0x64, 0x23, 0x62, 0xb9, 0x65, 0x4b, 0xe5, 0x53, 0x75,
	0x92, 0xd8, 0xa4, 0x46, 0xca, 0x27, 0xc1, 0xe8, 0x02, 0xe1, 0x2e, 0x94, 0x15, 0x89, 0xe2, 0x99,
	0xeb, 0x48, 0xa3, 0xea, 0x6d, 0x10, 0xe7, 0x48, 0xbd, 0x8a, 0x88, 0x34, 0x03, 0xd5, 0x95, 0xaf,
	0x10, 0xa1, 0x6b, 0x8a, 0x8d, 0x1e, 0xc1, 0x62, 0xc7, 0x65, 0x4e, 0x8f, 0xdb, 0xd6, 0x21, 0x0b,
	0x7b, 0xb8, 0xfd, 0xf0, 0xcc, 0x2b, 0x9b, 0x0b, 0x0a, 0xf1, 0x82, 0x85, 0x3d, 0xb9, 0xf1, 0xb0,
	0x6b, 0x6a, 0xa4, 0x48, 0xf6, 0x3e, 0xad, 0xba, 0x82, 0x21, 0xc9, 0x87, 0x50, 0xd1, 0xcd, 0x29,
	0xde, 0xba, 0x49, 0xda, 0x9c, 0x82, 0x6e, 0x10, 0x8b, 0xa5, 0xc8, 0x7a, 0x8e, 0x10, 0x5c, 0xe0,
	0x11, 0x96, 0x90, 0xed, 0x20, 0x50, 0x72, 0xa8, 0x42, 0xd3, 0x51, 0xa5, 0x4a, 0x92, 0xad, 0x3d,
	0x1e, 0x59, 0x78, 0xf0, 0xab, 0x53, 0xa2, 0xe0, 0xf1, 0xe8, 0xad, 0x2c, 0x4b, 0x19, 0x9d, 0x66,
	0x9e, 0x0f, 0x89, 0x7b, 0x8f, 0x12, 0xb6, 0x89, 0xed, 0x11, 0x45, 0x41, 0x62, 0x9e, 0xec, 0x91,
	0x84, 0x24, 0xc3, 0x22, 0x0f, 0x88, 0xe4, 0x28, 0xc5, 0x1c, 0xaf, 0xa0, 0xaa, 0x97, 0xbb, 0x1f,
	0x74, 0x43, 0x66, 0x73, 0x51, 0xbb, 0x9d, 0xd5, 0xd3, 0xa5, 0xdc, 0x21, 0x99, 0xa2, 0x16, 0xff,
	0x0d, 0x11, 0x9a, 0x0b, 0x2c, 0x53, 0x16, 0x06, 0x83, 0x7a, 0x4a, 0x9d, 0xec, 0x7b, 0x4e, 0x24,
	0x2c, 0xc7, 0x93, 0x02, 0xdc, 0x0f, 0xcf, 0x6b, 0x77, 0xb0, 0xd9, 0xbb, 0xe9, 0x66, 0x13, 0x4d,
	0xf2, 0x8d, 0xe7, 0x44, 0x2d, 0x4d, 0x6a, 0xd6, 0x58, 0x06, 0x21, 0x62, 0x8c, 0xf1, 0x12, 0x16,
	0x02, 0x1e, 0xf6, 0x98, 0x27, 0x4f, 0x9c, 0x83, 0xfe, 0xe1, 0xa1, 0xa8, 0x3d, 0xc4, 0x76, 0x6f,
	0x0d, 0x77, 0x77, 0x4f, 0x13, 0xae, 0xf7, 0x0f, 0x0f, 0xcd, 0x4a, 0x90, 0x2e, 0x0a, 0xe3, 0x60,
	0xc4, 0xd9, 0x4b, 0xda, 0xf4, 0xf7, 0x2f, 0x2b, 0x78, 0x2f, 0x3c, 0x89, 0x3f, 0x01, 0x83, 0x4e,
	0x62, 0x65, 0xc1, 0xd0, 0x81, 0x7c, 0x8f, 0x04, 0x41, 0x2f, 0xe9, 0x29, 0x1d, 0xcb, 0x9f, 0x80,
	0x11, 0x31, 0x57, 0x0e, 0x4c, 0x2f, 0x89, 0x63, 0x93, 0xd5, 0x54, 0x36, 0xab, 0x84, 0x51, 0x2b,
	0xd0, 0xb2, 0x85, 0x71, 0x1f, 0x16, 0x70, 0x71, 0xa5, 0xc1, 0x65, 0xf9, 0xa1, 0x34, 0x4f, 0x1e,
	0x11, 0xf7, 0x49, 0xf0, 0x9e, 0xd3, 0x39, 0x7e, 0x2d, 0x81, 0x72, 0x6b, 0x20, 0xdd, 0x29, 0x13,
	0x56, 0xc8, 0x3c, 0xdb, 0xef, 0x71, 0xbb, 0xf6, 0x31, 0x5a, 0x1b, 0xd8, 0xc0, 0x5b, 0x26, 0x4c,
	0x05, 0x96, 0xa2, 0x22, 0xa6, 0x45, 0x7d, 0x05, 0xcf, 0xbc, 0x82, 0x39, 0xaf, 0x08, 0xd7, 0x25,
	0x4c, 0x9e, 0x07, 0x2e, 0xf3, 0xb8, 0x3a, 0xd7, 0xf0, 0xb7, 0xf1, 0x03, 0x28, 0x45, 0xb8, 0x11,
	0xc8, 0xd4, 0x5b, 0xc1, 0x35, 0x79, 0x7f, 0x78, 0x4d, 0xa4, 0x65, 0x6a, 0x93, 0x99, 0x07, 0x51,
	0xfc, 0xdb, 0x78, 0x0c, 0x4b, 0x8e, 0xb0, 0xfa, 0xa8, 0x2d, 0x07, 0xae, 0xd4, 0xa2, 0xfa, 0x8e,
	0xcd, 0x6b, 0x9f, 0xe2, 0xd7, 0xab, 0x8e, 0x78, 0x23, 0x31, 0x7b, 0x6e, 0x5f, 0x6c, 0x49, 0x78,
	0xfd, 0x05, 0x2c, 0x0c, 0x4c, 0xbd, 0xdc, 0x4c, 0x18, 0xb6, 0x22, 0x8f, 0x38, 0xe5, 0x98, 0x2b,
	0x48, 0x00, 0x9e, 0xad, 0x57, 0x61, 0x96, 0x0e, 0x71, 0xe5, 0xbb, 0x50, 0xa5, 0x7a, 0x13, 0xae,
	0x8c, 0xb4, 0x66, 0x8c, 0x0a, 0xe4, 0xe3, 0xc0, 0x8f, 0xbc, 0x83, 0x9e, 0x8a, 0x8e, 0xef, 0x45,
	0xa8, 0x62, 0xc8, 0x26, 0xe6, 0xcd, 0xb8, 0x5c, 0xff, 0xed, 0x1c, 0x5c, 0x19, 0x69, 0xb5, 0x5c,
	0x14, 0x46, 0xf2, 0x3e, 0x14, 0xe5, 0x14, 0x88, 0x88, 0xf5, 0x02, 0xe5, 0xff, 0x48, 0x00, 0xb2,
	0x32, 0xe9, 0x55, 0xe8, 0x0b, 0xa3, 0x73, 0xba, 0x88, 0x10, 0x74, 0x85, 0xdd, 0x80, 0x62, 0x72,
	0xbb, 0x31, 0x8d, 0x77, 0x02, 0x85, 0xae, 0xbe, 0xd7, 0xb8, 0x05, 0xa5, 0x90, 0x4b, 0x9e, 0x23,
	0xb4, 0x72, 0xa4, 0x11, 0x48, 0x12, 0xd4, 0x7f, 0x6e, 0x78, 0x02, 0x3f, 0x86, 0x45, 0xbc, 0x76,
	0x13, 0x47, 0x56, 0xd2, 0xab, 0x9c, 0xf2, 0xfc, 0x13, 0x62, 0x5f, 0xc3, 0xeb, 0xff, 0x3b, 0x07,
	0xd7, 0xc7, 0x2a, 0x6d, 0xe8, 0x83, 0xc1, 0xdb, 0x87, 0xfe, 0xe1, 0xa1, 0x73, 0x86, 0x8d, 0x14,
	0x4d, 0x90, 0xa0, 0x36, 0x42, 0xe4, 0xb1, 0x49, 0x1e, 0x87, 0x3c, 0x76, 0x9c, 0x0a, 0xf2, 0xc4,
	0xe6, 0x67, 0x51, 0xc8, 0x70, 0x2f, 0x5a, 0x4f, 0xf5, 0xc5, 0x1c, 0xc2, 0x64, 0x17, 0x9f, 0x0e,
	0x50, 0xac, 0x2a, 0x0f, 0x62, 0x42, 0xb1, 0x3a, 0x40, 0xf1, 0x99, 0x1e, 0x7a, 0x4c, 0xf1, 0xd9,
	0x00, 0xc5, 0x33, 0xa5, 0xc0, 0x24, 0x14, 0xcf, 0x06, 0x28, 0x3e, 0xd7, 0x11, 0x1b, 0x31, 0xc5,
	0xe7, 0xf5, 0x5f, 0xcb, 0x43, 0x39, 0xa3, 0x47, 0xca, 0xe5, 0x50, 0x7b, 0x3c, 0x5e, 0xe9, 0x02,
	0x01, 0x48, 0xdf, 0xd2, 0x9a, 0x98, 0xba, 0xba, 0x56, 0x8a, 0xd8, 0x2d, 0x28, 0xa1, 0xee, 0xaa,
	0xfc, 0x38, 0x6a, 0xc0, 0x04, 0xc2, 0x85, 0x1c, 0xbe, 0x41, 0x9f, 0x1e, 0x71, 0x83, 0x2e, 0xdb,
	0xe9, 0x84, 0x9c, 0x07, 0x8a, 0x46, 0x0d, 0x1a, 0x41, 0x44, 0x70, 0x07, 0xe6, 0x43, 0x5f, 0x1c,
	0x31, 0xcf, 0x62, 0xae, 0x73, 0xc2, 0xd5, 0x9d, 0x60, 0x89, 0x60, 0x6b, 0x12, 0x24, 0xf9, 0x2d,
	0xf0, 0x05, 0x6e, 0x05, 0xeb, 0x4c, 0x8d, 0xb9, 0xa8, 0x21, 0x5f, 0x67, 0xd0, 0xe7, 0x4a, 0x8b,
	0x8b, 0xd1, 0xdf, 0x34, 0x7e, 0x4f, 0xf9, 0x91, 0x95, 0x9c, 0xdc, 0x08, 0xd9, 0x61, 0x84, 0x97,
	0xba, 0x3f, 0x0b, 0x75, 0x1d, 0x26, 0xd0, 0x61, 0x41, 0xc4, 0x1c, 0xcf, 0x1a, 0xda, 0x13, 0xd7,
	0x14, 0x45, 0x93, 0x08, 0xd6, 0xe2, 0x1d, 0xf2, 0x39, 0x5c, 0xc3, 0x10, 0x84, 0x11, 0x35, 0x69,
	0x22, 0x97, 0x25, 0x7a, 0xa8, 0x5a, 0xd6, 0x6b, 0x35, 0xf5, 0x2e, 0x5e, 0xab, 0xc6, 0x3f, 0xcd,
	0xd3, 0x25, 0x8d, 0x1a, 0xc8, 0xba, 0x4f, 0xc3, 0xb8, 0x03, 0xf3, 0xea, 0xda, 0xe9, 0x88, 0x4b,
	0x01, 0x47, 0xde, 0xd1, 0x12, 0x5d, 0x22, 0x21, 0xc8, 0xe0, 0xd2, 0x02, 0x8c, 0x2c, 0xdb, 0x39,
	0x3c, 0x74, 0x3a, 0x7d, 0x57, 0x5a, 0x02, 0x34, 0x2c, 0x75, 0x6b, 0x73, 0x2d, 0xb9, 0xb5, 0x59,
	0xf7, 0xa3, 0x8d, 0x98, 0xec, 0xf9, 0xd5, 0xf5, 0xd7, 0xfb, 0xd6, 0x46, 0xeb, 0xc5, 0x8b, 0x56,
	0xf3, 0xcd, 0xf6, 0xfe, 0x37, 0xd6, 0xde, 0x5a, 0xbb, 0xdd, 0xfa, 0x6a, 0x53, 0x5a, 0x0c, 0x29,
	0x32, 0x93, 0x1a, 0x93, 0x6a, 0x53, 0x27, 0xe4, 0x2c, 0xe2, 0xd2, 0xbe, 0x38, 0x38, 0x38, 0x57,
	0x8e, 0xd1, 0x79, 0x05, 0xdc, 0x96, 0x30, 0xc3, 0x82, 0xa5, 0x81, 0xbe, 0xc8, 0x89, 0x42, 0xc6,
	0xf8, 0x0e, 0x1d, 0x59, 0xcc, 0x74, 0x64, 0xc3, 0x09, 0x79, 0xe3, 0x27, 0xb3, 0x70, 0x35, 0x35,
	0x4d, 0xe9, 0xab, 0x88, 0x61, 0xa9, 0x37, 0x93, 0x96, 0x7a, 0xe9, 0x8b, 0x85, 0x7c, 0xf6, 0x62,
	0xc1, 0x80, 0xe9, 0x90, 0x79, 0xc7, 0x6a, 0x1f, 0xe0, 0xef, 0xb4, 0xad, 0x32, 0x9d, 0xb1, 0x55,
	0xea, 0x50, 0x08, 0x59, 0x2f, 0x60, 0x5d, 0x2e, 0x14, 0xc3, 0xc7, 0x65, 0xd4, 0x8d, 0x42, 0x27,
	0x70, 0x75, 0xf0, 0xca, 0xac, 0xd2, 0x8d, 0x10, 0x46, 0xda, 0xe7, 0x0a, 0x2c, 0xa5, 0xfd, 0xa8,
	0x4a, 0x63, 0x53, 0x7c, 0xbf, 0x98, 0xb8, 0x52, 0x9b, 0x84, 0x90, 0xc7, 0x68, 0x9a, 0xbe, 0xeb,
	0x9c, 0x70, 0x7d, 0xbb, 0xbd, 0x90, 0x50, 0x6f, 0x49, 0xb0, 0xf1, 0x00, 0x16, 0x3a, 0x7e, 0x3f,
	0x74, 0x78, 0x28, 0xb0, 0x03, 0x5c, 0x47, 0x6d, 0x55, 0x34, 0xf8, 0x15, 0x42, 0x8d, 0x8f, 0xa0,
	0xca, 0x78, 0xd7, 0x11, 0x5c, 0x58, 0xc2, 0x93, 0x93, 0xc0, 0x6d, 0x65, 0xdf, 0x2c, 0x28, 0x78,
	0x5b, 0x81, 0x71, 0xd9, 0x8f, 0x38, 0x97, 0xa4, 0x72, 0x9d, 0x3d, 0x1d, 0xb2, 0xa3, 0x80, 0x9b,
	0x12, 0x86, 0x0a, 0xa9, 0xdc, 0xf4, 0xe8, 0x7e, 0xee, 0x1c, 0x73, 0x1d, 0xeb, 0x56, 0x26, 0x68,
	0x9b, 0x80, 0x52, 0x5c, 0x1c, 0x3a, 0xdd, 0x23, 0xed, 0xf6, 0x25, 0xc7, 0x30, 0x20, 0x88, 0xdc,
	0xbe, 0x37, 0x01, 0x50, 0x8d, 0x4e, 0xdc, 0xc2, 0x79, 0xb3, 0x28, 0x21, 0x84, 0x96, 0x9a, 0xbb,
	0xd2, 0xa0, 0x89, 0x62, 0x41, 0x69, 0xee, 0x04, 0x8c, 0xdb, 0x08, 0xfa, 0xe2, 0x48, 0x51, 0x54,
	0xa9, 0x0d, 0x09, 0x21, 0x74, 0x6c, 0x40, 0x2e, 0x8e, 0x36, 0x20, 0x8d, 0x71, 0x06, 0xe4, 0x52,
	0xd6, 0x80, 0xcc, 0xd8, 0x86, 0xcb, 0x63, 0x6d, 0xc3, 0x2b, 0x19, 0xdb, 0xb0, 0x0a, 0x53, 0xdd,
	0xa0, 0x87, 0x9e, 0xc2, 0xbc, 0x29, 0x7f, 0x4a, 0xd6, 0x3b, 0x0b, 0x82, 0x1e, 0x3a, 0x02, 0xf3,
	0x26, 0xfe, 0xce, 0xea, 0xe7, 0x64, 0xc0, 0x24, 0xfa, 0xb9, 0x6c, 0x9a, 0x14, 0x6f, 0x32, 0x5b,
	0x54, 0x49, 0x8e, 0x4b, 0xaa, 0xdb, 0xda, 0x4e, 0xa1, 0x82, 0x3c, 0x5c, 0x43, 0x16, 0x20, 0x43,
	0x04, 0xfd, 0xb0, 0x73, 0xc4, 0x04, 0xd7, 0xf6, 0x49, 0x55, 0x21, 0xf6, 0x34, 0xbc, 0xf1, 0x3b,
	0x33, 0x74, 0x93, 0xa8, 0xf6, 0x56, 0xd3, 0xef, 0xf5, 0xfa, 0x9e, 0xd3, 0x41, 0x77, 0x4b, 0xbb,
	0xdf, 0xeb, 0xb1, 0xf0, 0xdc, 0x68, 0x0f, 0x7a, 0x0b, 0x7e, 0x26, 0x51, 0x5a, 0x27, 0xd4, 0x53,
	0x71, 0x77, 0x19, 0x54, 0xe2, 0x3e, 0xf8, 0xdd, 0x69, 0x58, 0x1a, 0x41, 0x70, 0x91, 0x1e, 0xb3,
	0x0c, 0x33, 0x81, 0xe3, 0x75, 0x85, 0x92, 0xc9, 0x54, 0x30, 0x3e, 0x83, 0xab, 0x3d, 0x76, 0x66,
	0x61, 0x01, 0x8d, 0x6c, 0x1d, 0xbe, 0xaa, 0xb6, 0xf7, 0x52, 0x8f, 0x9d, 0xed, 0x49, 0xe4, 0x1e,
	0x0f, 0x75, 0x08, 0xab, 0x64, 0x60, 0x0c, 0x7c, 0x66, 0x11, 0xa7, 0x9a, 0xfa, 0xbc, 0xd3, 0x50,
	0xac, 0x61, 0x6c, 0xc0, 0x2d, 0xd9, 0x76, 0x96, 0x34, 0xfb, 0x11, 0x12, 0x09, 0x37, 0x7a, 0xec,
	0x6c, 0x3f, 0x5d, 0x35, 0xfd, 0x31, 0xa9, 0x6f, 0xcb, 0x63, 0xb9, 0x73, 0xc4, 0x22, 0x4b, 0x07,
	0x3b, 0x2b, 0x59, 0x51, 0x95, 0x98, 0xe6, 0x11, 0x8b, 0x76, 0x14, 0x5c, 0x0a, 0x00, 0xe6, 0xba,
	0x03, 0xc4, 0x73, 0x6a, 0xb3, 0xba, 0x6e, 0x86, 0x76, 0x05, 0x96, 0x90, 0xee, 0xf4, 0x88, 0x73,
	0x37, 0xa1, 0x26, 0x71, 0xb1, 0x28, 0x51, 0x6f, 0x25, 0x26, 0xa6, 0xbf, 0x0a, 0xb3, 0x01, 0xeb,
	0x4b, 0x0b, 0x91, 0xe4, 0x84, 0x2a, 0x49, 0x19, 0xd7, 0xf7, 0x14, 0x46, 0xf9, 0x3d, 0x74, 0x59,
	0x6e, 0x62, 0xd7, 0xf1, 0xb8, 0xb0, 0xec, 0x90, 0x9d, 0x6a, 0x71, 0x00, 0x08, 0xda, 0x90, 0x10,
	0x39, 0xbc, 0x13, 0xdf, 0xe9, 0x70, 0xea, 0xb2, 0xe0, 0x1d, 0xdf, 0xb3, 0x75, 0x1c, 0x5f, 0x15,
	0x31, 0xb2, 0xcf, 0x6d, 0x82, 0xcb, 0x35, 0xa6, 0xa1, 0xf5, 0x23, 0x2e, 0x94, 0x27, 0xa4, 0x28,
	0x21, 0x3b, 0x12, 0x20, 0xbf, 0x46, 0x8d, 0x11, 0x5e, 0xdd, 0x14, 0x21, 0x08, 0x09, 0x1a, 0xbf,
	0x33, 0x07, 0xef, 0x0f, 0x59, 0x4c, 0x7e, 0x3f, 0x8a, 0xaf, 0xcd, 0x27, 0x5c, 0x28, 0x27, 0xea,
	0xaa, 0x60, 0x6e, 0xa4, 0x42, 0xb7, 0x94, 0xba, 0xda, 0x66, 0x6e, 0x64, 0xec, 0xc1, 0x32, 0x59,
	0x17, 0x21, 0x47, 0x87, 0x9f, 0xcd, 0x23, 0xe6, 0xb8, 0xfa, 0x68, 0xff, 0x40, 0xb1, 0x3e, 0x1e,
	0x7d, 0x68, 0x60, 0x98, 0x48, 0xb6, 0x41, 0x54, 0xa6, 0x11, 0x0d, 0xc1, 0x8c, 0x75, 0x58, 0x3c,
	0x0b, 0x06, 0x9b, 0x9b, 0xc6, 0xe6, 0xae, 0xaa, 0xe6, 0x30, 0xbc, 0x42, 0x36, 0xb9, 0xc3, 0x7b,
	0x07, 0x3c, 0x34, 0x17, 0xce, 0x82, 0x6c, 0x1b, 0x75, 0x50, 0xd7, 0xde, 0x8e, 0xf6, 0x8d, 0xc5,
	0x65, 0xe3, 0x09, 0x2c, 0xf7, 0x78, 0xc4, 0x50, 0x83, 0xd4, 0xa1, 0x69, 0xc7, 0xfc, 0x1c, 0x19,
	0x66, 0xce, 0x34, 0x34, 0x4e, 0x05, 0xa6, 0xbd, 0xe2, 0xe7, 0xc6, 0xf7, 0xa1, 0x4c, 0xf3, 0xa3,
	0x7b, 0x53, 0x40, 0x63, 0x74, 0x29, 0x7b, 0x5d, 0x86, 0x53, 0x6b, 0xce, 0x23, 0xa5, 0xee, 0xc7,
	0x5f, 0x84, 0xaa, 0xda, 0xc1, 0x96, 0x6e, 0x17, 0xef, 0x1d, 0x4b, 0xab, 0x4f, 0xc7, 0x58, 0xb2,
	0xa9, 0x75, 0x51, 0x12, 0x61, 0x47, 0x55, 0x34, 0x17, 0x54, 0x53, 0x1a, 0x50, 0xff, 0xc9, 0x14,
	0x54, 0xb2, 0x34, 0xe9, 0x33, 0x39, 0x97, 0x39, 0x93, 0x1b, 0x50, 0x66, 0x27, 0x5d, 0x3a, 0x74,
	0xad, 0xb3, 0xa7, 0x5f, 0x28, 0x89, 0x50, 0x62, 0x27, 0x5d, 0x3c, 0x75, 0xbf, 0x7e, 0xfa, 0x85,
	0xb4, 0x31, 0x25, 0x0d, 0x09, 0x76, 0x24, 0x22, 0x79, 0x30, 0xcf, 0x4e, 0xba, 0xe4, 0xf4, 0x91,
	0x54, 0xf7, 0x61, 0x41, 0x52, 0x29, 0x29, 0x8f, 0x64, 0x4a, 0x12, 0xb0, 0x93, 0xae, 0xf2, 0xfa,
	0x48, 0xba, 0x0f, 0x40, 0x36, 0x6e, 0x75, 0x83, 0x1e, 0xd2, 0xcc, 0x28, 0xd9, 0x74, 0xd2, 0xdd,
	0x0a, 0x7a, 0x29, 0xfc, 0x99, 0xc2, 0xcf, 0xc6, 0xf8, 0xaf, 0x09, 0x7f, 0x0f, 0x2a, 0x07, 0x5c,
	0x44, 0xa9, 0x2e, 0xd3, 0x96, 0x9e, 0x97, 0xd0, 0xb8, 0xcf, 0x0f, 0xa1, 0x8a, 0x54, 0xe9, 0xee,
	0xd0, 0x66, 0xc6, 0xda, 0xa9, 0xfe, 0xdc, 0x06, 0xac, 0x19, 0x77, 0x88, 0xf6, 0x33, 0x48, 0x98,
	0xea, 0x91, 0xa6, 0xd0, 0x5d, 0x82, 0x84, 0x42, 0xf5, 0xe9, 0x26, 0xc0, 0xa9, 0xe3, 0x59, 0x22,
	0x0a, 0x39, 0x3b, 0x56, 0x1b, 0xbb, 0x78, 0xea, 0x78, 0x6d, 0x04, 0xc8, 0xa9, 0xc1, 0x06, 0x52,
	0x34, 0xea, 0x94, 0x97, 0xe0, 0xb7, 0x31, 0x9d, 0xba, 0xff, 0x15, 0xe4, 0x7c, 0xb0, 0xb5, 0x77,
	0x13, 0x61, 0xb8, 0xa0, 0x76, 0xc3, 0x85, 0x9a, 0xe4, 0x8d, 0xd4, 0x9e, 0x69, 0xfa, 0x9e, 0xd4,
	0xa5, 0x79, 0x38, 0x76, 0xcf, 0xe5, 0xbe, 0xeb, 0x9e, 0x6b, 0xfc, 0xbb, 0x1c, 0x7c, 0x38, 0xca,
	0xa9, 0xb2, 0xc7, 0xc3, 0x9e, 0x23, 0x04, 0x86, 0x01, 0xfd, 0x72, 0x9f, 0x8b, 0x68, 0xc4, 0x6d,
	0x6a, 0x6e, 0xd4, 0x6d, 0xea, 0x5d, 0x28, 0xbb, 0x7e, 0x87, 0xb9, 0x16, 0x8b, 0x22, 0xde, 0x0b,
	0x22, 0xc5, 0x6e, 0xf3, 0x08, 0x5c, 0x23, 0x18, 0x85, 0xff, 0x47, 0x29, 0xa2, 0x29, 0x1d, 0xfe,
	0x1f, 0x25, 0x44, 0xf8, 0x41, 0x14, 0x84, 0xd6, 0x29, 0x73, 0x22, 0xae, 0x95, 0xcd, 0xb2, 0x82,
	0xbe, 0x45, 0x60, 0xe3, 0x3f, 0xe4, 0xe0, 0xfe, 0x45, 0x23, 0x50, 0xe2, 0xee, 0x19, 0x18, 0x41,
	0x0c, 0xb5, 0xba, 0x21, 0xf3, 0x22, 0x1d, 0x54, 0xf1, 0x7c, 0xe6, 0x90, 0xb9, 0x82, 0x9b, 0x8b,
	0x09, 0xc1, 0x16, 0xe1, 0x8d, 0x15, 0x58, 0x60, 0x07, 0xcc, 0xb3, 0x7d, 0xcf, 0x12, 0xb4, 0x4f,
	0xc9, 0x63, 0xa1, 0xab, 0x54, 0x14, 0x56, 0x6d, 0x62, 0xe3, 0x29, 0x2c, 0x85, 0x3c, 0x0a, 0xcf,
	0x2d, 0x9b, 0x02, 0x10, 0x95, 0x90, 0xc7, 0x21, 0x3e, 0xcf, 0x3d, 0x31, 0x17, 0x11, 0xbb, 0x81,
	0x61, 0x88, 0x84, 0x6b, 0xfc, 0x9b, 0x1c, 0xdc, 0x19, 0x35, 0x86, 0xd8, 0x9c, 0x47, 0x6f, 0xc0,
	0x17, 0x50, 0x20, 0xef, 0x83, 0xda, 0xe3, 0x95, 0xd5, 0x79, 0x15, 0xbe, 0x85, 0x74, 0xcf, 0xcb,
	0x9b, 0x5f, 0x6d, 0xee, 0xee, 0x5b, 0xad, 0x0d, 0x8a, 0x32, 0x9b, 0x43, 0x62, 0x0a, 0xff, 0x41,
	0xb7, 0x84, 0x34, 0xf6, 0xb1, 0xeb, 0x45, 0x72, 0x4b, 0xec, 0xb2, 0x9e, 0x3a, 0x02, 0x02, 0xc2,
	0x4d, 0x21, 0x6e, 0xae, 0xc7, 0x02, 0x44, 0xdd, 0x87, 0x85, 0xd4, 0x2d, 0x12, 0x8a, 0xb0, 0x69,
	0xf4, 0xb3, 0x94, 0x79, 0xba, 0x5f, 0x8d, 0x7f, 0x54, 0xa1, 0x63, 0x06, 0x85, 0xb3, 0x73, 0xc2,
	0x51, 0x99, 0x44, 0xd7, 0x03, 0x85, 0xf8, 0x0c, 0x67, 0x7b, 0xe4, 0x46, 0x64, 0x7b, 0xc8, 0x93,
	0x3f, 0x21, 0xd2, 0xc9, 0x23, 0x79, 0x75, 0xf2, 0xc7, 0x18, 0x95, 0x40, 0x92, 0x0e, 0x53, 0x99,
	0x22, 0x35, 0x30, 0x0e, 0x53, 0xb9, 0x09, 0x70, 0xe4, 0x46, 0x27, 0x34, 0xff, 0xca, 0x0f, 0x53,
	0x94, 0x10, 0x9c, 0x73, 0x63, 0x03, 0x8a, 0xa8, 0x62, 0x74, 0x7d, 0x9f, 0xce, 0x88, 0xd2, 0xea,
	0x83, 0xac, 0x40, 0x1f, 0x35, 0x88, 0x15, 0x8c, 0x3b, 0x29, 0xc8, 0x9a, 0x5b, 0xbe, 0x6f, 0x1b,
	0xeb, 0x80, 0xbf, 0xad, 0x03, 0x46, 0x49, 0x0b, 0xef, 0xd0, 0x08, 0x3a, 0x1e, 0xd6, 0x19, 0x1e,
	0x48, 0xca, 0x03, 0x10, 0x72, 0x11, 0xb0, 0x53, 0x0f, 0x5d, 0x0e, 0xa1, 0x12, 0x77, 0x06, 0xe1,
	0x4c, 0x42, 0xc9, 0xfd, 0x1c, 0x66, 0xc3, 0xbc, 0x0a, 0x03, 0x61, 0x5e, 0xe9, 0xd3, 0xbc, 0x98,
	0x39, 0xcd, 0xeb, 0xff, 0x13, 0x60, 0x1a, 0xbd, 0x6e, 0x2f, 0x07, 0x75, 0xd4, 0x95, 0x4b, 0xf6,
	0x7a, 0x30, 0x35, 0x2b, 0xeb, 0x2f, 0x2a, 0x6b, 0x7f, 0xd1, 0x2d, 0x28, 0x25, 0x11, 0x39, 0xb1,
	0xf7, 0x24, 0x0e, 0xc8, 0x21, 0xef, 0x49, 0x3a, 0x1e, 0x27, 0xf1, 0x9e, 0xa4, 0xc2, 0x71, 0xd0,
	0x52, 0x89, 0x3d, 0xa9, 0x3a, 0x62, 0xa8, 0xa8, 0x9d, 0xa8, 0x68, 0x61, 0x20, 0x1a, 0x9d, 0x09,
	0xb3, 0x88, 0x2d, 0x48, 0xc0, 0x3a, 0xf3, 0x44, 0xfd, 0x57, 0x8b, 0x71, 0xee, 0x02, 0x39, 0x73,
	0x30, 0x50, 0xc5, 0xf5, 0x75, 0x70, 0x20, 0xa8, 0x38, 0x13, 0xd7, 0x8f, 0x52, 0x04, 0xa9, 0xdd,
	0xa1, 0x08, 0x70, 0x13, 0xe8, 0x2f, 0xa5, 0x36, 0x08, 0x7e, 0x09, 0x91, 0x63, 0x0d, 0xe1, 0xd8,
	0x92, 0x9a, 0x19, 0x6d, 0x49, 0xcd, 0x8e, 0xb3, 0xa4, 0xe6, 0x26, 0x58, 0x52, 0x85, 0xb1, 0x96,
	0x54, 0x31, 0x63, 0x49, 0xe9, 0xbb, 0x41, 0xc8, 0xde, 0x0d, 0xd2, 0xa5, 0x58, 0x29, 0x7d, 0x29,
	0x36, 0xea, 0x3e, 0x2e, 0x9f, 0xb9, 0x8f, 0x7b, 0x1f, 0x20, 0xb9, 0x8f, 0x53, 0x56, 0x69, 0x41,
	0x5f, 0xc6, 0x19, 0x7f, 0x3d, 0x07, 0x95, 0xbe, 0x1b, 0x39, 0xa8, 0xf0, 0xd3, 0x6a, 0x56, 0x50,
	0x30, 0xfd, 0xfc, 0xbb, 0x71, 0x15, 0xfa, 0x3d, 0xde, 0xa8, 0x86, 0x28, 0x8d, 0xe8, 0x83, 0x63,
	0x6b, 0x73, 0x08, 0xba, 0xeb, 0x47, 0xdb, 0x9c, 0x85, 0x1e, 0xb7, 0xcd, 0x72, 0x3f, 0x8d, 0x90,
	0xc6, 0x5c, 0xdc, 0x91, 0x8e, 0xef, 0xbb, 0xb6, 0x7f, 0xea, 0x29, 0x13, 0xb8, 0xaa, 0x11, 0x4d,
	0x05, 0xd7, 0x57, 0xaa, 0x4f, 0xd4, 0xf5, 0x1f, 0x15, 0x34, 0xf4, 0xa9, 0xb6, 0x7e, 0xb1, 0xa0,
	0xa1, 0xab, 0xca, 0xf8, 0xa5, 0x82, 0x86, 0x7e, 0xa6, 0x2c, 0x5f, 0x2a, 0x68, 0xe8, 0x33, 0x65,
	0xf3, 0x52, 0x41, 0x43, 0x3f, 0x57, 0xf6, 0x2e, 0x15, 0x30, 0xdd, 0x27, 0xb3, 0xe9, 0xaf, 0xaa,
	0x74, 0x9f, 0xf4, 0x76, 0xcf, 0x1a, 0x79, 0xd7, 0x06, 0x8d, 0xbc, 0xac, 0x7b, 0xb0, 0xa6, 0xcc,
	0xf9, 0x31, 0xee, 0xc1, 0xeb, 0x59, 0xf4, 0x37, 0x59, 0x53, 0xba, 0x3e, 0x70, 0xd5, 0xf5, 0x35,
	0x14, 0xe9, 0xc2, 0x43, 0xb2, 0xd7, 0x0d, 0x94, 0x14, 0xcf, 0xdf, 0x71, 0x4d, 0x5f, 0xf2, 0xd0,
	0x57, 0x77, 0x23, 0x66, 0xd2, 0x58, 0xfd, 0x4b, 0x28, 0xa5, 0x30, 0x38, 0xc4, 0xf8, 0x66, 0x25,
	0xb6, 0x63, 0xf5, 0x95, 0x8a, 0x9c, 0x26, 0x8d, 0x26, 0xfe, 0x55, 0xea, 0x84, 0x02, 0x6e, 0x4b,
	0x58, 0xe3, 0xd7, 0x73, 0xb0, 0x38, 0xc4, 0x2b, 0x46, 0x03, 0x2e, 0xe0, 0xa1, 0xea, 0x7b, 0xc6,
	0x6d, 0x78, 0x7f, 0x14, 0x8d, 0xe6, 0x94, 0x6a, 0xce, 0xb8, 0x03, 0x37, 0x47, 0xb6, 0xc2, 0xb9,
	0x2d, 0x76, 0x98, 0xc7, 0xaa, 0x79, 0xe3, 0x26, 0x5c, 0x1f, 0x45, 0x62, 0x72, 0x66, 0x9f, 0x57,
	0xa7, 0xd2, 0x81, 0xc2, 0x4a, 0x97, 0x52, 0xa2, 0x94, 0x0b, 0xbf, 0x1f, 0x76, 0xb8, 0x98, 0x14,
	0x16, 0x90, 0xf1, 0x61, 0xe7, 0xb3, 0x3e, 0xec, 0xc6, 0x9f, 0x28, 0xd5, 0x67, 0x7c, 0xd3, 0x69,
	0x4b, 0x6f, 0xdc, 0x27, 0xb4, 0x87, 0x2f, 0x9f, 0xf2, 0xf0, 0x65, 0x3e, 0x3b, 0x35, 0xe0, 0x3a,
	0xa7, 0x48, 0x14, 0xba, 0x07, 0xe1, 0x67, 0x11, 0xda, 0xb2, 0x28, 0xff, 0x0a, 0x18, 0x89, 0x82,
	0xd7, 0x21, 0xfc, 0x2c, 0x92, 0x96, 0x2c, 0x26, 0x2f, 0x28, 0xda, 0xc4, 0xf0, 0x45, 0xa9, 0x58,
	0x30, 0xab, 0x0a, 0xf3, 0x95, 0xb6, 0x7b, 0xa5, 0x7a, 0xec, 0xfa, 0xa7, 0xd2, 0x38, 0xf3, 0x43,
	0x27, 0x3a, 0xd7, 0x2e, 0x71, 0xd7, 0x3f, 0xdd, 0x53, 0xa0, 0x46, 0x0f, 0xee, 0x0e, 0x0c, 0x79,
	0x3d, 0xb9, 0xc9, 0x4a, 0xa6, 0xf4, 0x2e, 0x94, 0x92, 0x9d, 0xa3, 0x02, 0x89, 0xd7, 0xf3, 0xd5,
	0x9c, 0x09, 0xf1, 0xf6, 0x11, 0xc6, 0x1d, 0x00, 0x39, 0x5a, 0xbc, 0xcd, 0x51, 0xf1, 0x15, 0x48,
	0x53, 0x94, 0xd0, 0x7d, 0x09, 0x6c, 0xfc, 0xb7, 0x3c, 0x7c, 0x7c, 0x89, 0xef, 0xc5, 0xf3, 0x6c,
	0xc2, 0x1c, 0x85, 0x9e, 0xeb, 0x58, 0xd6, 0xef, 0x0f, 0xc6, 0x03, 0x5f, 0xd8, 0xc6, 0x8a, 0x89,
	0x0d, 0x98, 0xba, 0xa1, 0xfa, 0x1f, 0xe6, 0x60, 0x96, 0x60, 0x17, 0x79, 0x7d, 0x46, 0xae, 0x4c,
	0xfe, 0x5d, 0x56, 0x66, 0x6a, 0xcc, 0xca, 0x68, 0x26, 0x99, 0x4e, 0x31, 0xc9, 0x03, 0x58, 0xc0,
	0xe9, 0xeb, 0x30, 0xd7, 0x39, 0x08, 0x99, 0xd4, 0xa5, 0x69, 0x61, 0x2b, 0x12, 0xdc, 0x8c, 0xa1,
	0x97, 0x59, 0x56, 0x01, 0x37, 0xf5, 0x14, 0xa9, 0xeb, 0x57, 0xe6, 0x60, 0x8c, 0x85, 0xca, 0xa3,
	0x91, 0x7a, 0xc3, 0x21, 0x82, 0x30, 0x41, 0x49, 0xeb, 0x2f, 0xb3, 0x66, 0x99, 0xa0, 0xdb, 0x04,
	0x94, 0xe7, 0x80, 0x52, 0xc7, 0x53, 0x94, 0x79, 0xa4, 0xac, 0xc6, 0x08, 0x45, 0xdc, 0xf8, 0xcf,
	0x79, 0x15, 0x25, 0xdd, 0xdc, 0xf7, 0xd3, 0x69, 0x44, 0x98, 0xf5, 0x86, 0x8b, 0x82, 0xd9, 0x63,
	0x94, 0xf8, 0x16, 0x67, 0xbd, 0x95, 0x4d, 0x83, 0x90, 0xfb, 0x27, 0x94, 0xf7, 0x16, 0x67, 0xbd,
	0x25, 0x55, 0x94, 0x77, 0x21, 0xce, 0x7a, 0x2b, 0x9b, 0x4b, 0x71, 0x1d, 0xc2, 0x61, 0xa5, 0x7b,
	0x50, 0x49, 0x55, 0x4a, 0x12, 0xdf, 0xe6, 0x63, 0x62, 0x3f, 0x8c, 0x8c, 0x4f, 0x61, 0x79, 0x64,
	0xe2, 0xd0, 0x34, 0xea, 0x78, 0x8b, 0xdd, 0xa1, 0x8c, 0xa1, 0x3b, 0x30, 0xaf, 0x32, 0x86, 0x28,
	0x57, 0x68, 0x46, 0xa5, 0x9c, 0x23, 0x8c, 0xd2, 0x84, 0x9e, 0xc2, 0x95, 0xe8, 0xc4, 0xea, 0x7b,
	0xce, 0x2f, 0xf7, 0x79, 0x26, 0x5b, 0x68, 0x16, 0x85, 0x83, 0x11, 0x9d, 0xbc, 0x41, 0x5c, 0x2a,
	0x67, 0xe8, 0x11, 0x2c, 0x26, 0x9d, 0xc5, 0x4e, 0x38, 0xe4, 0x9b, 0x9f, 0x35, 0x17, 0x74, 0x7f,
	0xdb, 0x04, 0x6e, 0xbc, 0x20, 0x6f, 0xe9, 0x56, 0x53, 0x4e, 0xed, 0xf6, 0xda, 0x6e, 0x7b, 0x28,
	0x55, 0x8b, 0x0e, 0x40, 0x34, 0x90, 0x54, 0x53, 0x24, 0x96, 0xe6, 0x29, 0x3f, 0x4b, 0xb5, 0xf3,
	0x81, 0x72, 0x60, 0x0d, 0x2c, 0x90, 0xde, 0x2a, 0x8d, 0xef, 0xd1, 0x8d, 0xc7, 0x56, 0x73, 0x9d,
	0x79, 0x14, 0x98, 0xa4, 0xcd, 0xd5, 0xc9, 0x3b, 0xa5, 0xf1, 0xcf, 0x73, 0x70, 0x6d, 0xa8, 0xe6,
	0xe4, 0x64, 0x92, 0x21, 0x36, 0xce, 0x0f, 0xb1, 0xb1, 0xf1, 0x10, 0xaa, 0xf1, 0xc6, 0x93, 0xca,
	0xa9, 0xc7, 0x6d, 0xb5, 0xa5, 0x2a, 0x91, 0xda, 0x78, 0xeb, 0x08, 0x95, 0xb3, 0x99, 0xf2, 0x04,
	0x2a, 0x52, 0x25, 0x44, 0x63, 0x47, 0x20, 0xd1, 0x36, 0xfe, 0xef, 0x14, 0x75, 0x76, 0x3f, 0xb1,
	0x97, 0x22, 0xde, 0xa3, 0xfb, 0xec, 0x47, 0xb0, 0x88, 0xd7, 0x19, 0xe1, 0xe0, 0x15, 0xde, 0x9c,
	0xb9, 0x40, 0x88, 0xb5, 0xb4, 0x78, 0x38, 0x71, 0x3a, 0x91, 0xd3, 0x1b, 0xbc, 0xb4, 0x9b, 0x33,
	0x17, 0x08, 0x91, 0xd0, 0xfe, 0xc2, 0xd0, 0x55, 0x77, 0x45, 0xdf, 0xd7, 0x61, 0x3e, 0x53, 0xd2,
	0x17, 0x0a, 0xfe, 0x7d, 0x5e, 0xd9, 0xdf, 0xb4, 0x52, 0x29, 0xb1, 0xe9, 0x7b, 0xf1, 0xeb, 0x50,
	0x18, 0x30, 0xc7, 0xe6, 0xb4, 0x31, 0x16, 0x87, 0x08, 0xe8, 0x3b, 0xf1, 0x19, 0x15, 0x22, 0x30,
	0xe2, 0xca, 0x7c, 0x96, 0xb4, 0xd3, 0xe4, 0xca, 0x1c, 0xd5, 0x63, 0xdf, 0x8f, 0x2c, 0xd7, 0x11,
	0x94, 0xc4, 0x5f, 0x34, 0x0b, 0x12, 0xb0, 0xed, 0x10, 0x07, 0x68, 0x51, 0xc8, 0x7a, 0xfa, 0x76,
	0x54, 0xc9, 0x40, 0xd6, 0x93, 0x4b, 0xd5, 0x93, 0x9a, 0x21, 0xba, 0x99, 0xd4, 0x46, 0x51, 0x37,
	0x42, 0x08, 0x7f, 0xe5, 0xb8, 0x2e, 0xed, 0x95, 0x3b, 0x30, 0xaf, 0x82, 0x5b, 0xc9, 0xe0, 0x21,
	0xbd, 0xba, 0x44, 0xb0, 0xb6, 0x36, 0x7b, 0x28, 0xbc, 0x94, 0x28, 0xb4, 0xe3, 0x57, 0x82, 0x88,
	0xe0, 0x07, 0x2a, 0xec, 0x07, 0x23, 0xea, 0xb8, 0xa8, 0xcd, 0xe3, 0xe1, 0x50, 0x57, 0x87, 0xc3,
	0x5e, 0xe8, 0x47, 0xbe, 0x5c, 0x53, 0xbc, 0x04, 0x45, 0x12, 0x0a, 0x09, 0xa2, 0xdf, 0xa2, 0xf1,
	0xf7, 0x73, 0xb4, 0xa1, 0x46, 0x70, 0x40, 0xcc, 0xb6, 0xd9, 0x15, 0xcb, 0xfd, 0x54, 0x2b, 0xf6,
	0x00, 0x16, 0x4e, 0x1c, 0x7e, 0xca, 0x43, 0x11, 0xbb, 0x49, 0xc8, 0x64, 0xa9, 0x28, 0xb0, 0x72,
	0x8e, 0x34, 0x3e, 0x81, 0x05, 0xec, 0x17, 0x67, 0xbd, 0x17, 0xcc, 0x3b, 0x64, 0xe1, 0x24, 0xa7,
	0x72, 0xa3, 0x47, 0x7c, 0xac, 0xbb, 0x9c, 0xae, 0xf5, 0x11, 0x54, 0x0f, 0xe9, 0x27, 0x1a, 0xe6,
	0xdd, 0xfe, 0xb9, 0x50, 0xdb, 0x6f, 0x41, 0xc1, 0xb7, 0x14, 0x58, 0x76, 0x4e, 0x93, 0x1e, 0x30,
	0xa2, 0xcc, 0xab, 0x6c, 0x0b, 0x02, 0xaf, 0x13, 0xb4, 0xf1, 0x9b, 0xb9, 0xc4, 0xff, 0x4d, 0x12,
	0xe8, 0x4d, 0x20, 0xcf, 0x84, 0x36, 0x3b, 0xc1, 0x78, 0xd9, 0x6c, 0xc0, 0x86, 0x8a, 0x10, 0x88,
	0x03, 0x36, 0xa4, 0x70, 0x66, 0x27, 0x3c, 0xe5, 0xfd, 0xa0, 0x28, 0x93, 0x79, 0xa1, 0xaa, 0xa3,
	0x53, 0x26, 0xfd, 0x10, 0xc7, 0x14, 0x8d, 0x56, 0x3f, 0xc4, 0xf1, 0x50, 0xfb, 0x80, 0x63, 0x91,
	0x4d, 0x4a, 0xc6, 0xb4, 0x59, 0xd1, 0x99, 0x0e, 0x28, 0xaf, 0x45, 0xe3, 0x3f, 0x0e, 0x75, 0x54,
	0x77, 0x51, 0x9d, 0xfb, 0x5f, 0x66, 0x44, 0x52, 0x65, 0xf5, 0xa3, 0x51, 0x59, 0x95, 0xd9, 0x3a,
	0x4a, 0x8d, 0x78, 0x5e, 0x91, 0xe0, 0x76, 0xbf, 0xd3, 0xe1, 0x42, 0x1c, 0xf6, 0xdd, 0x38, 0x35,
	0x6e, 0x2f, 0x56, 0x2a, 0x0c, 0x18, 0xa0, 0xa9, 0xbe, 0x67, 0x2c, 0xc1, 0x42, 0x9b, 0xa3, 0x1b,
	0x6c, 0xd7, 0x8f, 0x5e, 0xf8, 0x7d, 0xcf, 0xae, 0xe6, 0x8c, 0x45, 0x28, 0xcb, 0x31, 0x1f, 0x30,
	0xc1, 0x37, 0xc3, 0xd0, 0x0f, 0xab, 0x79, 0x03, 0x60, 0x76, 0xdf, 0xf7, 0xd7, 0x9d, 0x6e, 0x75,
	0xaa, 0xf1, 0x8c, 0xde, 0x9c, 0x49, 0x3a, 0xb4, 0xc5, 0x23, 0x79, 0xd4, 0x6e, 0x29, 0x53, 0x19,
	0x67, 0x33, 0xf1, 0x4f, 0xcb, 0x62, 0xcb, 0x6e, 0x6c, 0xa9, 0xa3, 0x62, 0x54, 0x2d, 0xd5, 0xc1,
	0xe1, 0x95, 0xc8, 0x0d, 0xaf, 0x44, 0x23, 0x22, 0x1f, 0x9a, 0xe4, 0xf5, 0x2d, 0xee, 0x71, 0xa9,
	0x7a, 0x6c, 0x38, 0x21, 0x8f, 0x1c, 0x9b, 0xef, 0x85, 0xce, 0x8f, 0xb8, 0x16, 0x0a, 0x81, 0x2c,
	0x90, 0xc8, 0x50, 0xc7, 0x42, 0x10, 0xa3, 0x9f, 0xc0, 0xf2, 0x91, 0xd3, 0x3d, 0xe2, 0x22, 0xb2,
	0x94, 0x67, 0x26, 0x6d, 0x75, 0x18, 0x0a, 0x67, 0x22, 0x8a, 0x6c, 0x8f, 0xbf, 0x9a, 0x83, 0x8f,
	0x2e, 0xfc, 0x6c, 0xbc, 0x47, 0x6f, 0x40, 0x51, 0x9a, 0x7f, 0x96, 0xcd, 0x0f, 0x75, 0x76, 0x5b,
	0x41, 0x02, 0x36, 0xf8, 0x21, 0x1a, 0xfb, 0x09, 0xa3, 0x90, 0xce, 0x52, 0x50, 0x4a, 0xba, 0x18,
	0xe8, 0xf8, 0xd4, 0x40, 0xc7, 0x1b, 0x5f, 0x26, 0x2e, 0x38, 0xe5, 0xe0, 0x4d, 0xf7, 0x01, 0x7d,
	0x02, 0xa9, 0x28, 0x2c, 0xfc, 0x3d, 0xd0, 0x64, 0x7e, 0xb0, 0xc9, 0xad, 0xc4, 0xb8, 0xc8, 0x36,
	0x46, 0x1f, 0x48, 0x65, 0x5f, 0x4e, 0x9e, 0xd4, 0xc6, 0x9f, 0xe6, 0xc9, 0xa5, 0x2d, 0x5b, 0x5a,
	0x93, 0x55, 0x51, 0xfe, 0xec, 0xf9, 0x8e, 0x17, 0x09, 0x63, 0x07, 0xe6, 0x19, 0x05, 0x8c, 0x63,
	0x59, 0x79, 0xa5, 0x1e, 0x65, 0xb5, 0xe6, 0xc1, 0x5a, 0x2b, 0x08, 0xa0, 0xdf, 0x66, 0x89, 0x25,
	0x85, 0x49, 0x91, 0x0c, 0xd7, 0x53, 0xee, 0x53, 0x52, 0x63, 0x63, 0x0f, 0x69, 0x26, 0xea, 0x6b,
	0x66, 0x30, 0xea, 0xeb, 0x0e, 0xcc, 0xb3, 0xbe, 0xed, 0x44, 0x16, 0xeb, 0xc4, 0xc9, 0xfb, 0x65,
	0xb3, 0x84, 0xb0, 0x35, 0x04, 0xd5, 0xff, 0x6e, 0x0e, 0x4a, 0xa9, 0x3e, 0x5d, 0xa4, 0xa7, 0x5f,
	0x85, 0x59, 0x35, 0x5c, 0x0a, 0xb6, 0x52, 0x25, 0xa9, 0xe4, 0x06, 0x21, 0xef, 0x39, 0xfd, 0x9e,
	0x9e, 0x8e, 0x29, 0xc4, 0x97, 0x15, 0x54, 0xb5, 0x7e, 0x0f, 0x2a, 0x51, 0xc8, 0x6c, 0x29, 0xfe,
	0xbc, 0x74, 0x34, 0xd9, 0x3c, 0x42, 0xd7, 0x19, 0x7a, 0x0f, 0x1a, 0x3f, 0xce, 0x13, 0x67, 0x26,
	0xa9, 0x8f, 0xca, 0x43, 0x8d, 0x1d, 0x4d, 0x42, 0xec, 0x36, 0x42, 0x3f, 0x10, 0xc6, 0x1b, 0x98,
	0xb1, 0xe5, 0x0f, 0xb5, 0x00, 0x3f, 0x4c, 0x5d, 0x5d, 0x5f, 0xa6, 0xfe, 0xca, 0x40, 0xd9, 0xa4,
	0xd6, 0x26, 0xac, 0x47, 0xfd, 0x9f, 0xe4, 0x60, 0x61, 0xb0, 0x17, 0x99, 0x03, 0x3d, 0x37, 0x70,
	0xa0, 0x4b, 0x8b, 0x85, 0xe4, 0x69, 0xda, 0xb4, 0xa3, 0xbc, 0x4f, 0x25, 0x69, 0xd7, 0x12, 0xe3,
	0xee, 0x3a, 0x14, 0x3c, 0xdf, 0xc2, 0x19, 0x51, 0x2a, 0xd8, 0x9c, 0xe7, 0xef, 0xcb, 0x22, 0x26,
	0xfd, 0x63, 0x78, 0xa5, 0xe4, 0x59, 0xba, 0x4a, 0xd1, 0xaa, 0x57, 0x0c, 0x27, 0x26, 0x6f, 0xfc,
	0x97, 0x5c, 0xb2, 0xb1, 0x5e, 0x84, 0xbe, 0x88, 0x9c, 0x93, 0xbe, 0x90, 0xd3, 0xbb, 0xe9, 0xb2,
	0x40, 0x50, 0x0e, 0xa6, 0xf6, 0xf0, 0xd3, 0x32, 0xeb, 0xa2, 0xf1, 0x03, 0x98, 0xe9, 0x8b, 0xe4,
	0xed, 0xab, 0x01, 0xf7, 0xf0, 0xa8, 0xc6, 0x56, 0xde, 0x08, 0x1e, 0x9a, 0x54, 0x2b, 0x33, 0x73,
	0x53, 0xd9, 0x99, 0x7b, 0x05, 0xd3, 0x92, 0xf2, 0x22, 0x2e, 0xd3, 0x41, 0xe6, 0x9c, 0x5a, 0xb7,
	0xf4, 0x31, 0x89, 0x41, 0xe6, 0xea, 0x93, 0xed, 0xc6, 0x5f, 0x52, 0x52, 0x3b, 0x4e, 0x43, 0xdd,
	0x73, 0xbc, 0x6e, 0x4a, 0x8b, 0x0e, 0xe9, 0x67, 0xe2, 0x38, 0x28, 0x2a, 0x08, 0x19, 0x1a, 0x1a,
	0x8d, 0x6c, 0x48, 0x2b, 0x5c, 0x52, 0x30, 0xe4, 0xc2, 0x33, 0xca, 0xdb, 0x1e, 0x6c, 0x3e, 0x91,
	0x1c, 0x3f, 0x5d, 0xfb, 0xe9, 0xb4, 0xcd, 0xa9, 0x4c, 0xda, 0x66, 0x63, 0x2b, 0xb1, 0x1d, 0xe8,
	0xcb, 0x4d, 0xdf, 0x13, 0xbe, 0xcb, 0x9b, 0x7e, 0xaf, 0xc7, 0x3c, 0x9b, 0x22, 0x82, 0x10, 0x82,
	0x8f, 0xa9, 0x31, 0xcf, 0x56, 0x1c, 0x57, 0xe9, 0x64, 0x08, 0x1b, 0xfb, 0x24, 0xbe, 0xe2, 0xd3,
	0x29, 0x2d, 0xbe, 0xae, 0x0f, 0xdc, 0xc9, 0xa4, 0x84, 0x4a, 0x76, 0x75, 0x88, 0x4d, 0x53, 0x16,
	0xc8, 0x7f, 0xcf, 0xc1, 0xed, 0x71, 0xcd, 0xa6, 0xdd, 0x36, 0xe3, 0x9a, 0xdf, 0x4c, 0xc9, 0x10,
	0xc9, 0x5f, 0x8f, 0x07, 0x77, 0xec, 0xe8, 0x26, 0x57, 0x54, 0x51, 0x55, 0xae, 0xff, 0x22, 0xcc,
	0x5e, 0x4e, 0x66, 0x49, 0xa3, 0x12, 0x09, 0x55, 0x0a, 0x95, 0xba, 0x46, 0x26, 0x18, 0xa5, 0x4e,
	0x2d, 0xc3, 0x8c, 0x7f, 0x9a, 0xd8, 0x31, 0x54, 0x68, 0xfc, 0xab, 0xbc, 0x0a, 0x9d, 0xa1, 0x5e,
	0x49, 0xc5, 0xb1, 0xdd, 0x0f, 0x4f, 0xf8, 0x79, 0x72, 0x43, 0x67, 0xbc, 0x80, 0x39, 0x81, 0x30,
	0x2d, 0x7f, 0x3e, 0x19, 0x1a, 0xcd, 0xa8, 0x7a, 0x2b, 0x04, 0x30, 0x75, 0xe5, 0xfa, 0x7f, 0xca,
	0xc1, 0x2c, 0xc1, 0x2e, 0x1a, 0xce, 0x2d, 0x28, 0x21, 0x13, 0x39, 0xbe, 0x97, 0xb8, 0xd6, 0x40,
	0x83, 0x88, 0x80, 0x9f, 0x05, 0x4e, 0xc8, 0x33, 0x71, 0xa0, 0x04, 0x42, 0xce, 0xbb, 0x09, 0x40,
	0x9f, 0xc5, 0x20, 0x02, 0x32, 0xc6, 0x8b, 0x04, 0x79, 0x45, 0xdf, 0x4f, 0x22, 0x56, 0x51, 0x40,
	0x4f, 0x9b, 0xc5, 0x38, 0x5e, 0xd5, 0x68, 0x40, 0x39, 0x1d, 0x14, 0xbb, 0x8a, 0xa7, 0xca, 0xb4,
	0x59, 0x4a, 0xa2, 0x62, 0x57, 0x1b, 0x6b, 0xf0, 0xe0, 0x82, 0x09, 0xb8, 0xf0, 0x01, 0x84, 0x7f,
	0x36, 0x05, 0x8d, 0xac, 0x10, 0xc7, 0xfb, 0xc5, 0x66, 0xfc, 0xca, 0x03, 0xc5, 0x07, 0x4e, 0x7e,
	0x59, 0x80, 0xde, 0x8d, 0x49, 0x79, 0x20, 0x09, 0x30, 0xf8, 0xec, 0xc0, 0xd4, 0xc0, 0x7d, 0x54,
	0x2b, 0xb9, 0x6b, 0xa2, 0x28, 0x8e, 0x4f, 0x47, 0x1d, 0x2a, 0xa3, 0xfa, 0x33, 0x74, 0xd9, 0x74,
	0x13, 0x40, 0x6d, 0x6b, 0x2b, 0x0e, 0xec, 0x28, 0x2a, 0x48, 0xcb, 0xae, 0xff, 0xf8, 0xd2, 0xcf,
	0x04, 0x56, 0x20, 0xef, 0x04, 0xca, 0xe6, 0xcd, 0x3b, 0x81, 0x8e, 0x45, 0x08, 0x1c, 0xaf, 0x6b,
	0xf5, 0xf4, 0x23, 0x7e, 0x45, 0x76, 0xd2, 0x95, 0x62, 0x6a, 0x07, 0x63, 0x6c, 0x02, 0xd6, 0x39,
	0xe6, 0x11, 0x3e, 0xe0, 0x87, 0x5f, 0xce, 0x9b, 0x40, 0xa0, 0x6d, 0x5f, 0xd0, 0x91, 0x2d, 0x2b,
	0xdb, 0xfc, 0xc4, 0x49, 0xde, 0xf6, 0xc9, 0x9b, 0x65, 0x09, 0xdd, 0xd0, 0x40, 0xb9, 0x7b, 0x0e,
	0xfb, 0xae, 0x6b, 0x85, 0x5c, 0x70, 0x79, 0x56, 0xd0, 0x3d, 0x4f, 0x49, 0xc2, 0x4c, 0x02, 0x35,
	0x5e, 0x65, 0xe4, 0x41, 0x93, 0x3c, 0xea, 0xed, 0x80, 0x77, 0x22, 0x16, 0xf9, 0x21, 0x99, 0xa2,
	0x0f, 0x60, 0x41, 0x68, 0x88, 0xb2, 0x59, 0x69, 0x88, 0x15, 0x91, 0x21, 0x6c, 0xfc, 0xdb, 0x3c,
	0x2c, 0x37, 0xdb, 0x3c, 0x74, 0x98, 0xeb, 0xfc, 0x88, 0xdb, 0x4d, 0xbf, 0x77, 0xc0, 0xa2, 0x6d,
	0xbf, 0x2b, 0xe5, 0x65, 0xf6, 0xfe, 0x5e, 0x17, 0x8d, 0x4d, 0x00, 0xdb, 0xc1, 0x35, 0x60, 0xe1,
	0xb9, 0x7a, 0xcd, 0x40, 0x3f, 0x68, 0x36, 0xa2, 0xa5, 0x95, 0x8d, 0x98, 0xd8, 0x4c, 0x55, 0x34,
	0xbe, 0x80, 0x39, 0x9d, 0x64, 0x38, 0x95, 0xcd, 0x38, 0xa0, 0x83, 0x2f, 0x6e, 0x80, 0x92, 0x09,
	0x35, 0x71, 0xfd, 0x57, 0x73, 0x00, 0x49, 0x93, 0xc6, 0x2f, 0xc0, 0x9c, 0x88, 0x42, 0x0c, 0x37,
	0xcb, 0x65, 0x12, 0x94, 0x27, 0x77, 0x05, 0x7f, 0xb6, 0xb1, 0xa2, 0xa9, 0x1b, 0xa8, 0xaf, 0x52,
	0xcb, 0x04, 0x8e, 0xf3, 0x08, 0xf2, 0x2a, 0x8f, 0x60, 0x19, 0x66, 0x28, 0xab, 0x2a, 0x7f, 0x3b,
	0xff, 0xb0, 0x68, 0x52, 0xa1, 0xb1, 0x41, 0xd6, 0x44, 0xc2, 0xa7, 0x5b, 0x3c, 0x4a, 0xb4, 0x95,
	0xcd, 0x5f, 0xee, 0x3b, 0x01, 0x72, 0xc7, 0x90, 0x97, 0x39, 0xed, 0x61, 0x6e, 0xfc, 0x51, 0x6e,
	0x50, 0x07, 0x1b, 0xd1, 0x4c, 0xbc, 0x89, 0xdb, 0x30, 0xcb, 0x11, 0xa2, 0x86, 0xfc, 0xb3, 0xa3,
	0xf6, 0xcb, 0x84, 0x06, 0x56, 0x9a, 0x52, 0x2d, 0x50, 0x30, 0xd5, 0x54, 0xfd, 0x17, 0xa1, 0x94,
	0x02, 0x5f, 0xb4, 0x3f, 0x56, 0xe3, 0x2e, 0xe4, 0x33, 0x1e, 0x8a, 0x81, 0x4f, 0xb6, 0x5d, 0x3f,
	0xd2, 0x5f, 0x68, 0xfc, 0x90, 0x0e, 0xda, 0x4c, 0x17, 0xf7, 0x42, 0xff, 0xd0, 0x71, 0x79, 0x93,
	0x85, 0xf6, 0xc5, 0xb3, 0xf4, 0x96, 0x5e, 0xc2, 0x18, 0xd7, 0x40, 0x3c, 0x3f, 0x9f, 0xc2, 0x4c,
	0x87, 0x85, 0xb6, 0x9e, 0x9e, 0xeb, 0x59, 0xc6, 0x4a, 0xd7, 0x20, 0xba, 0xc6, 0xef, 0x67, 0xce,
	0x58, 0xd9, 0xf2, 0x57, 0x4e, 0x27, 0xf2, 0xc3, 0xf3, 0xbd, 0x90, 0x2b, 0x96, 0x15, 0xc6, 0x16,
	0xcc, 0x85, 0xbc, 0xe3, 0x27, 0xed, 0x3e, 0x1e, 0x35, 0xed, 0xc3, 0x15, 0x57, 0x4c, 0xac, 0x65,
	0xea, 0xda, 0xf5, 0xbf, 0x20, 0x2d, 0x6a, 0xf9, 0xf3, 0xa2, 0x49, 0xbe, 0x06, 0x73, 0x68, 0x05,
	0xc6, 0x3a, 0xf1, 0xac, 0x2c, 0x92, 0x89, 0xa2, 0x10, 0x74, 0xe7, 0x3d, 0x6d, 0xce, 0x11, 0x46,
	0x34, 0xfe, 0x47, 0x4e, 0x05, 0x77, 0xf7, 0x45, 0xe0, 0x74, 0x1c, 0xbf, 0x2f, 0xa4, 0xe9, 0x71,
	0xa2, 0xaf, 0xd0, 0x26, 0x7c, 0xed, 0x00, 0x0a, 0x4c, 0x91, 0xaa, 0xa8, 0x77, 0x35, 0x71, 0x9b,
	0xc3, 0x6d, 0x3d, 0xff, 0xf8, 0xd8, 0x1a, 0x01, 0xb6, 0xbe, 0x5a, 0x6b, 0x5a, 0x3b, 0x7d, 0x37,
	0x72, 0x02, 0x97, 0xb7, 0x3c, 0x11, 0x31, 0xaf, 0xc3, 0x85, 0x19, 0xb7, 0x6b, 0xd4, 0xa1, 0xe0,
	0x78, 0x91, 0x3c, 0xca, 0x28, 0x45, 0x64, 0xd1, 0x8c, 0xcb, 0x29, 0x1c, 0x25, 0x87, 0x24, 0xb8,
	0x55, 0x34, 0x4b, 0x13, 0xfb, 0x05, 0x7f, 0x37, 0x6e, 0x0e, 0xbf, 0xd8, 0x82, 0xc7, 0x32, 0x79,
	0x69, 0x1b, 0xeb, 0x83, 0xcc, 0x92, 0x41, 0x5b, 0x31, 0xb3, 0xd4, 0xa1, 0x10, 0xaa, 0xdf, 0xda,
	0xb5, 0xa3, 0xcb, 0x8d, 0x3f, 0xce, 0x67, 0xa2, 0x79, 0xd7, 0x84, 0x60, 0x42, 0x38, 0xde, 0x8e,
	0xe3, 0x39, 0x18, 0x5f, 0xe2, 0x1d, 0xfa, 0x52, 0xd4, 0x9e, 0x3a, 0x9e, 0x47, 0xd9, 0x4f, 0x49,
	0xc4, 0xc4, 0xac, 0x59, 0x51, 0x60, 0xfd, 0x78, 0xc9, 0x87, 0x50, 0x51, 0x6f, 0x0a, 0xa4, 0x1f,
	0xbb, 0x9d, 0x35, 0xcb, 0x04, 0xd5, 0x64, 0x77, 0xa1, 0xcc, 0xc2, 0x0e, 0xf3, 0x98, 0x25, 0xd5,
	0xa2, 0x90, 0xa4, 0xe3, 0xac, 0x39, 0x4f, 0xc0, 0xd7, 0x08, 0x43, 0x53, 0x53, 0x75, 0xc6, 0x3a,
	0x55, 0x0f, 0x1f, 0x16, 0xcc, 0x92, 0x86, 0xbd, 0xf5, 0x3d, 0xd4, 0xea, 0x59, 0xd8, 0xe5, 0x91,
	0x7e, 0xfa, 0x26, 0x36, 0xfe, 0x10, 0x4a, 0x0f, 0xdf, 0x18, 0x8f, 0xc1, 0xe8, 0xf8, 0x5e, 0x14,
	0xb2, 0x4e, 0x24, 0xb5, 0xdb, 0xc0, 0xe5, 0x51, 0xfc, 0xba, 0xe6, 0xa2, 0xc6, 0x34, 0x35, 0xc2,
	0x78, 0x06, 0x57, 0x87, 0xc8, 0x49, 0xef, 0x99, 0xc3, 0xd3, 0x6c, 0x79, 0xb0, 0x0a, 0x6a, 0x40,
	0x0d, 0x28, 0x07, 0xcc, 0x72, 0x44, 0x9c, 0x54, 0x51, 0xa0, 0xee, 0x06, 0xac, 0x25, 0x54, 0x6a,
	0x44, 0xe3, 0xcd, 0xe0, 0x0e, 0xdc, 0xe2, 0x51, 0xcb, 0xeb, 0xb2, 0x1e, 0x47, 0xe5, 0x14, 0x75,
	0xa1, 0xa7, 0x30, 0x83, 0x5a, 0xed, 0x65, 0xa2, 0x9a, 0x88, 0xb2, 0xf1, 0x5a, 0x85, 0xad, 0xc5,
	0xca, 0xfd, 0x40, 0x9b, 0xaf, 0x43, 0xd6, 0x71, 0xf9, 0xde, 0x9a, 0x71, 0x1f, 0x16, 0xb2, 0xd3,
	0xa5, 0x05, 0x50, 0x39, 0x3d, 0x5f, 0xa2, 0xf1, 0xb7, 0xf2, 0x83, 0x6c, 0xf7, 0xca, 0x71, 0x5d,
	0x0a, 0xd1, 0x56, 0x79, 0xa5, 0x0e, 0x7e, 0x62, 0x40, 0x1f, 0x2f, 0xa7, 0xa0, 0x2d, 0xdb, 0x78,
	0x05, 0x45, 0xa1, 0xeb, 0x8c, 0x53, 0xcc, 0x87, 0x1a, 0x5f, 0x49, 0x4a, 0xe7, 0x66, 0x52, 0xbf,
	0x7e, 0x06, 0xa5, 0x14, 0x46, 0xae, 0xbc, 0x72, 0xf5, 0x67, 0x23, 0x3d, 0xe7, 0x09, 0xaa, 0x56,
	0xfe, 0x1e, 0x54, 0x94, 0x93, 0x3f, 0xfb, 0x34, 0xe7, 0x3c, 0x41, 0x15, 0xd5, 0x4d, 0x80, 0x94,
	0xdf, 0x5b, 0xa9, 0x3d, 0xc7, 0xda, 0xe5, 0xdd, 0xf8, 0x95, 0x69, 0xba, 0xb4, 0x4e, 0x99, 0x6d,
	0xb1, 0xe0, 0xbb, 0xdc, 0x55, 0xe4, 0x04, 0x47, 0x8c, 0x34, 0xd9, 0xfc, 0x30, 0xe4, 0x1d, 0x7d,
	0xdd, 0xa8, 0x8b, 0xc6, 0x97, 0x50, 0x0a, 0x12, 0x01, 0x3b, 0xac, 0x35, 0x8e, 0xef, 0xce, 0x4a,
	0x0a, 0x90, 0x6e, 0xa3, 0xfe, 0xaf, 0xf3, 0x00, 0x09, 0x2e, 0x96, 0xb0, 0x36, 0x3f, 0xd4, 0xfa,
	0x8f, 0xf2, 0xbf, 0xe9, 0x57, 0x8a, 0x74, 0xd7, 0x94, 0x45, 0xe0, 0xf5, 0x7b, 0x4d, 0xd5, 0xbb,
	0x1b, 0x50, 0x94, 0x04, 0x87, 0x2a, 0xcc, 0x99, 0x02, 0x26, 0xfa, 0xbd, 0x17, 0x18, 0xf0, 0x7b,
	0x18, 0x2b, 0xe0, 0xf4, 0x58, 0xe9, 0xf7, 0xde, 0xb1, 0xd7, 0x2b, 0x9b, 0xca, 0x5f, 0x7b, 0xe5,
	0xd8, 0x52, 0x7e, 0x4f, 0xab, 0x15, 0xf1, 0x9e, 0x72, 0xb4, 0xc7, 0x97, 0x50, 0x8f, 0x60, 0x51,
	0x79, 0xe4, 0xad, 0xc4, 0x93, 0x38, 0xab, 0xde, 0xc9, 0x22, 0x44, 0x4b, 0x39, 0x14, 0x1b, 0x3f,
	0x80, 0x39, 0xd5, 0xaa, 0x71, 0x1d, 0x46, 0xb7, 0x5b, 0xcd, 0x19, 0xd7, 0x60, 0x29, 0x41, 0x6d,
	0x70, 0x11, 0x85, 0xfe, 0x39, 0xb7, 0xab, 0x79, 0x1d, 0xb8, 0x90, 0x30, 0xed, 0xb6, 0xdf, 0x39,
	0x6e, 0x1e, 0xb1, 0xb0, 0xb7, 0x2f, 0x37, 0xbc, 0xd7, 0xfd, 0xae, 0xe7, 0x5c, 0xe3, 0x77, 0xa7,
	0x94, 0x54, 0x20, 0xf9, 0x4b, 0xaa, 0xae, 0xca, 0x72, 0x38, 0x62, 0xae, 0xcb, 0xbd, 0x2e, 0xbf,
	0xa8, 0xf1, 0x5d, 0x28, 0x26, 0x82, 0x2d, 0x3f, 0xf8, 0x86, 0xcd, 0xa4, 0x96, 0x57, 0xe2, 0x5f,
	0x66, 0xd2, 0x84, 0xb1, 0x2d, 0xcf, 0x8b, 0xd0, 0xc7, 0xcc, 0xa0, 0xa9, 0xef, 0xd8, 0x5c, 0xdc,
	0x42, 0x86, 0xfd, 0xa7, 0xb3, 0xec, 0x9f, 0x0a, 0x1a, 0x9b, 0x49, 0x07, 0x8d, 0xd5, 0x7f, 0x23,
	0x07, 0xc5, 0x64, 0xf8, 0x13, 0x4c, 0xff, 0x6b, 0x30, 0x27, 0x5c, 0x3f, 0x95, 0x72, 0x37, 0x2b,
	0x8b, 0x64, 0xb3, 0x0a, 0x79, 0x1a, 0x7a, 0x9d, 0x94, 0x41, 0x06, 0x1a, 0x44, 0x61, 0x93, 0x41,
	0xe8, 0x77, 0x43, 0x2e, 0x74, 0x16, 0x47, 0x5c, 0xc6, 0x44, 0x25, 0xfd, 0x75, 0x0b, 0x2f, 0xfb,
	0xd5, 0x6b, 0x82, 0x31, 0xd4, 0x64, 0xde, 0x71, 0xe3, 0xef, 0xe4, 0x28, 0x02, 0x23, 0x7d, 0x00,
	0xcb, 0x41, 0xbf, 0xe3, 0xf2, 0xbd, 0x04, 0xa0, 0xc9, 0xb2, 0x7a, 0xa2, 0xab, 0xac, 0x8d, 0xd4,
	0xad, 0x06, 0xbd, 0xa2, 0x39, 0xb6, 0x75, 0xb3, 0x48, 0x95, 0x77, 0x44, 0xb7, 0xf1, 0x5b, 0x79,
	0x8a, 0x1d, 0x48, 0x3a, 0xf4, 0xd2, 0x77, 0x33, 0x3e, 0xe6, 0x4d, 0x98, 0x39, 0xf2, 0xdd, 0x58,
	0xbf, 0x1b, 0x69, 0x86, 0x0e, 0xd4, 0x59, 0x91, 0x65, 0xa5, 0x59, 0x98, 0x54, 0x3b, 0xb3, 0x22,
	0xf9, 0xec, 0x8a, 0x5c, 0x87, 0x82, 0xa4, 0x41, 0x4f, 0x80, 0x72, 0xd6, 0xc9, 0xb2, 0xf2, 0x03,
	0x20, 0xaa, 0xef, 0x45, 0x8e, 0xab, 0xdf, 0xd7, 0x93, 0x90, 0x37, 0x12, 0x50, 0x0f, 0xa0, 0x94,
	0xfa, 0xd4, 0x25, 0xbc, 0x16, 0xca, 0x09, 0x73, 0xc4, 0xdd, 0xd8, 0x6b, 0x41, 0xa0, 0x97, 0x9c,
	0x1e, 0x52, 0xd0, 0x1e, 0x64, 0xa4, 0x98, 0x52, 0x5e, 0x1a, 0x82, 0x49, 0x92, 0xc6, 0x8f, 0x94,
	0x65, 0x43, 0x2c, 0x6d, 0x72, 0x97, 0x33, 0xc1, 0x93, 0xa1, 0xbf, 0xc4, 0xb1, 0x5e, 0xa4, 0xb3,
	0x7f, 0xb7, 0xc9, 0x68, 0xfc, 0xaa, 0x62, 0x9e, 0x44, 0x24, 0xd2, 0x96, 0x8a, 0x1f, 0x8b, 0x6d,
	0x1e, 0x71, 0x65, 0xef, 0xa3, 0xeb, 0x32, 0x9d, 0xf1, 0x5c, 0x54, 0x6f, 0xe3, 0xf5, 0x02, 0xa9,
	0x78, 0xd0, 0x9b, 0x83, 0x56, 0x07, 0xe9, 0xb5, 0x33, 0x0a, 0x9f, 0x1e, 0x54, 0x4d, 0x68, 0x9a,
	0x55, 0x4d, 0x33, 0x95, 0xd0, 0xac, 0x12, 0x4d, 0xe3, 0x8f, 0x73, 0x70, 0x25, 0x35, 0x17, 0x6f,
	0x59, 0x57, 0x27, 0x4c, 0xfe, 0xb9, 0xc1, 0x38, 0xd9, 0xc6, 0x90, 0x30, 0x48, 0xa8, 0x87, 0xdc,
	0x15, 0xe3, 0x27, 0xa7, 0x7e, 0x72, 0x59, 0x4f, 0x45, 0x1d, 0x0a, 0x4a, 0xd1, 0xd4, 0xc3, 0x8b,
	0xcb, 0xf2, 0x24, 0xea, 0xb1, 0x33, 0xeb, 0x54, 0xf6, 0x40, 0x9f, 0x44, 0x3d, 0x76, 0x86, 0x3d,
	0x92, 0xf6, 0x2c, 0x21, 0x88, 0xd7, 0xa8, 0xd0, 0xf8, 0xed, 0x3c, 0x54, 0xb0, 0xf3, 0x01, 0xf7,
	0x6c, 0x22, 0xfc, 0x7c, 0x70, 0x8c, 0x37, 0x52, 0x63, 0x8c, 0xc9, 0xde, 0x61, 0x70, 0xd9, 0x7b,
	0x94, 0xa9, 0xc1, 0x7b, 0x94, 0x09, 0x32, 0x71, 0xcc, 0x53, 0xff, 0xd3, 0x03, 0x4f, 0xfd, 0xd7,
	0xdd, 0xcb, 0xce, 0x5e, 0x3c, 0x09, 0xf9, 0xd4, 0x24, 0x18, 0x8f, 0x61, 0x09, 0x7f, 0x58, 0x91,
	0x7f, 0xcc, 0x3d, 0x4b, 0x1f, 0x4e, 0xc4, 0xa4, 0x55, 0x44, 0xed, 0x4b, 0x4c, 0x8b, 0x8e, 0xa9,
	0x9f, 0x64, 0xf3, 0x8e, 0xbf, 0xde, 0x6b, 0xfa, 0x8e, 0x27, 0x8c, 0x9f, 0x19, 0x9c, 0xb7, 0x5b,
	0x43, 0xbc, 0xa1, 0x48, 0xdf, 0x65, 0xee, 0xc6, 0xfb, 0xfb, 0xb3, 0xd3, 0x3a, 0x3d, 0x30, 0xad,
	0xf5, 0x7f, 0x79, 0x69, 0xe7, 0xd7, 0x0d, 0x28, 0x9e, 0x05, 0x56, 0x97, 0x39, 0x1e, 0x8f, 0x5d,
	0x79, 0x67, 0xc1, 0x16, 0x96, 0x31, 0x5f, 0x5d, 0xf6, 0x59, 0x3d, 0xab, 0xa3, 0xce, 0x0e, 0x04,
	0xd1, 0xbb, 0x3a, 0x63, 0x26, 0x6f, 0x7a, 0xf4, 0xe4, 0xa1, 0x6b, 0x9f, 0x79, 0xc7, 0x8a, 0x49,
	0x95, 0xcb, 0x4e, 0x42, 0x90, 0xab, 0x1a, 0x7f, 0x23, 0x9f, 0x51, 0x01, 0x54, 0x72, 0x63, 0x74,
	0xbe, 0xe5, 0x33, 0x77, 0x4f, 0x1f, 0x49, 0x13, 0xce, 0x40, 0x1b, 0xaa, 0x0a, 0xe5, 0x75, 0x42,
	0xf5, 0xd0, 0x54, 0x7e, 0x72, 0xd6, 0x65, 0xb6, 0x71, 0xf5, 0xc0, 0x95, 0xcf, 0xdc, 0x96, 0x6e,
	0xc1, 0xa4, 0x7c, 0x87, 0xb8, 0x2c, 0xea, 0x1d, 0x30, 0x86, 0xc9, 0xd0, 0x77, 0x4b, 0x89, 0x11,
	0x3e, 0x73, 0x93, 0xbe, 0xd1, 0xbb, 0x8d, 0x48, 0x8a, 0x69, 0xc4, 0x71, 0xcf, 0x2c, 0xd6, 0x43,
	0x35, 0x9b, 0xa6, 0x7c, 0x21, 0x86, 0xaf, 0x21, 0xb8, 0xf1, 0x07, 0x39, 0xba, 0x23, 0x49, 0x0e,
	0xa3, 0x3d, 0x5f, 0x44, 0xe8, 0x17, 0xdd, 0x77, 0x82, 0x49, 0x93, 0x30, 0x41, 0xc9, 0x7e, 0x04,
	0x8b, 0x91, 0x13, 0x04, 0xd9, 0xb8, 0x20, 0xf5, 0x1f, 0x25, 0x84, 0x48, 0x62, 0x7d, 0x9e, 0xc0,
	0x72, 0xc8, 0x3b, 0x4e, 0xe0, 0x60, 0x5f, 0x13, 0xf2, 0x69, 0x95, 0x87, 0xa0, 0x71, 0x6b, 0xe9,
	0xc8, 0xe3, 0xc8, 0x09, 0xf4, 0xb8, 0xe2, 0x1b, 0xd3, 0x40, 0x8d, 0xe8, 0xef, 0xe5, 0x07, 0xbd,
	0xce, 0xe9, 0x11, 0x5d, 0x26, 0xfd, 0x70, 0x64, 0xf7, 0xf3, 0xef, 0xd6, 0xfd, 0xa9, 0xb1, 0xdd,
	0xdf, 0x1b, 0x50, 0xd6, 0x47, 0x6a, 0x04, 0xa3, 0xba, 0xac, 0x83, 0x2a, 0xe6, 0xda, 0x6f, 0x9a,
	0xcd, 0xcd, 0x76, 0x3b, 0xf6, 0xb3, 0x37, 0xe2, 0x68, 0x8a, 0x12, 0x68, 0x64, 0xf5, 0x3d, 0x59,
	0x78, 0xb1, 0xd6, 0xda, 0x7e, 0x63, 0x6e, 0x56, 0x73, 0x0d, 0x1f, 0x3e, 0xcb, 0x7e, 0xa1, 0xe9,
	0xfa, 0x82, 0x4b, 0x8b, 0x9a, 0x7b, 0xb6, 0xd3, 0xef, 0xb5, 0xbc, 0x2d, 0xd6, 0xe3, 0x89, 0x49,
	0xf0, 0x95, 0x1f, 0x49, 0x25, 0x7b, 0xc2, 0x2c, 0x65, 0x33, 0x5d, 0xd4, 0x0d, 0x7e, 0x9c, 0xe9,
	0xd2, 0x78, 0x03, 0x3f, 0xfb, 0x1d, 0x3e, 0x38, 0xe6, 0x4e, 0xa1, 0x10, 0x8f, 0xf5, 0xaf, 0x4d,
	0xc1, 0xa7, 0x03, 0xed, 0x8e, 0x6d, 0x92, 0x26, 0x65, 0xe2, 0x05, 0xc3, 0x2f, 0x26, 0x21, 0xb3,
	0xb4, 0x81, 0x5f, 0x8c, 0x5a, 0x8d, 0x0b, 0x3f, 0xb1, 0x32, 0x08, 0x89, 0x03, 0x68, 0x27, 0xdf,
	0x52, 0x64, 0x1e, 0x47, 0x9e, 0xce, 0x3e, 0x8e, 0x5c, 0xff, 0xf5, 0x1c, 0x54, 0x87, 0x2c, 0xdf,
	0xbb, 0x50, 0x4e, 0x2c, 0xcc, 0x94, 0x19, 0x9e, 0x00, 0x69, 0xff, 0xa7, 0x88, 0xb4, 0x83, 0x59,
	0xbf, 0xd6, 0xa7, 0x27, 0x1c, 0x9f, 0xec, 0xfa, 0x1e, 0xd4, 0x06, 0x49, 0x2d, 0x47, 0x58, 0x3d,
	0x26, 0x8e, 0x95, 0x81, 0x7c, 0x65, 0xa0, 0x4a, 0x4b, 0xec, 0x30, 0x71, 0xdc, 0xf8, 0x12, 0xbe,
	0xf7, 0x8e, 0x93, 0x74, 0xe1, 0xda, 0xfe, 0x15, 0x0a, 0x77, 0x96, 0xfa, 0xd9, 0x65, 0x96, 0xf5,
	0x75, 0xb2, 0x76, 0xf4, 0x7c, 0xf2, 0xe7, 0xdf, 0x69, 0xed, 0xe2, 0xa5, 0x6a, 0xfc, 0xda, 0x0c,
	0x7c, 0x32, 0xe2, 0x7e, 0x88, 0xce, 0x37, 0x79, 0xb2, 0xe8, 0x94, 0xfc, 0x97, 0x8e, 0xc0, 0xc7,
	0xa7, 0x26, 0x30, 0x56, 0x15, 0xa6, 0x7a, 0x3d, 0xad, 0x01, 0xc8, 0x9f, 0xe9, 0x0c, 0xfd, 0xa9,
	0xa1, 0xb3, 0xe2, 0x92, 0x5f, 0x1c, 0xfa, 0x8f, 0xaa, 0x1f, 0xe7, 0x60, 0x3e, 0x4d, 0x67, 0x18,
	0x30, 0x2d, 0x0f, 0x47, 0x1d, 0x6b, 0x23, 0x7f, 0xc7, 0x39, 0x39, 0xf9, 0x54, 0x4e, 0x4e, 0x26,
	0x01, 0x63, 0x6a, 0x20, 0x01, 0x63, 0xe8, 0x2d, 0xa1, 0x74, 0x68, 0xda, 0x03, 0x58, 0x88, 0xdf,
	0xf0, 0xb2, 0xe8, 0x75, 0x40, 0x4a, 0x91, 0xaa, 0xc4, 0xe0, 0x16, 0x3e, 0x13, 0xf8, 0x00, 0x16,
	0xe8, 0x91, 0x2a, 0x61, 0x09, 0xf5, 0xea, 0xc5, 0xdc, 0xed, 0x29, 0x0c, 0x47, 0x25, 0x70, 0x9b,
	0xa0, 0xf5, 0x7f, 0x90, 0xbf, 0x7c, 0xce, 0xd4, 0xe0, 0xc5, 0xf6, 0xb0, 0xd5, 0x3f, 0xfa, 0x25,
	0xc3, 0xfb, 0xb0, 0xc0, 0x5c, 0xd7, 0xd1, 0x8f, 0xe4, 0xe9, 0x70, 0xb8, 0xb2, 0x59, 0x26, 0xb0,
	0x7e, 0xde, 0xfb, 0x1e, 0x54, 0xb8, 0xc7, 0x7b, 0xe7, 0x09, 0x19, 0x0d, 0x6e, 0x1e, 0xa1, 0x9a,
	0xea, 0x10, 0x2a, 0xa8, 0x82, 0xe8, 0xb7, 0x1b, 0x74, 0xc0, 0xfd, 0x0f, 0xbf, 0xc3, 0x92, 0xa6,
	0x61, 0x66, 0xd9, 0x49, 0x95, 0x44, 0xe3, 0x4f, 0x0a, 0xe9, 0xeb, 0xeb, 0xb8, 0x31, 0x4c, 0xf1,
	0xb8, 0x04, 0x13, 0xde, 0x02, 0xfd, 0xf7, 0x3b, 0xe8, 0xd0, 0xa5, 0x98, 0x61, 0x50, 0xa0, 0xb7,
	0xbe, 0xa7, 0xb9, 0x74, 0x2a, 0xcd, 0xa5, 0x94, 0x4b, 0x4e, 0x19, 0x55, 0xda, 0x0d, 0xf6, 0x64,
	0xec, 0xb8, 0xd2, 0x5d, 0x59, 0x49, 0x20, 0x26, 0xbd, 0x38, 0x8a, 0xbf, 0x45, 0xfd, 0x6f, 0xe7,
	0xa1, 0x94, 0xbc, 0x08, 0xc3, 0xc7, 0xe7, 0x8b, 0x67, 0xb8, 0x32, 0x3f, 0xc0, 0x95, 0x71, 0x1a,
	0xd9, 0x54, 0x3a, 0x8d, 0x2c, 0xc9, 0x6b, 0x9b, 0xce, 0xe4, 0xb5, 0x61, 0xf8, 0x46, 0x92, 0xe3,
	0xa4, 0xe3, 0xd0, 0x53, 0x29, 0x4e, 0xf8, 0xa4, 0x1e, 0x13, 0xd6, 0x41, 0xff, 0xfc, 0x80, 0x75,
	0x8e, 0x95, 0x83, 0x1a, 0x8e, 0x98, 0x58, 0x27, 0x08, 0xe6, 0xdf, 0x31, 0x61, 0xe1, 0xd3, 0x2b,
	0xe8, 0x8c, 0x2e, 0x98, 0x85, 0x23, 0x26, 0xd6, 0x64, 0x19, 0xcf, 0x3f, 0x7c, 0x42, 0x2d, 0x70,
	0xd4, 0x3f, 0x74, 0x15, 0x4c, 0x49, 0x6e, 0x22, 0x00, 0x93, 0x44, 0x1d, 0xba, 0xac, 0x50, 0xa1,
	0xbd, 0x71, 0xb9, 0xfe, 0xfb, 0x53, 0x50, 0xdc, 0xe7, 0xac, 0x47, 0xb3, 0x31, 0x2a, 0x3c, 0xee,
	0x2b, 0x28, 0xc7, 0xe1, 0x9b, 0xb8, 0x0e, 0xf9, 0xc1, 0xfc, 0xfd, 0x49, 0xeb, 0x90, 0x9a, 0x6b,
	0x73, 0x3e, 0x48, 0x0a, 0x02, 0x63, 0xc4, 0x31, 0x45, 0xf2, 0x88, 0x33, 0x37, 0x3a, 0xc2, 0x3f,
	0x85, 0x9b, 0xa2, 0xdd, 0x8b, 0xf0, 0x97, 0x08, 0xde, 0xeb, 0x44, 0xc6, 0x0a, 0x2c, 0xc5, 0xb9,
	0x92, 0x29, 0x62, 0xda, 0x34, 0x8b, 0x1a, 0x95, 0xd0, 0x7f, 0x02, 0x06, 0xf3, 0x3a, 0xa8, 0x06,
	0xa5, 0xc8, 0x69, 0xd6, 0xab, 0x0a, 0x93, 0x50, 0x7f, 0x08, 0x95, 0xae, 0x7b, 0x1e, 0x1c, 0x25,
	0xf9, 0x72, 0x14, 0xd8, 0x56, 0x46, 0x68, 0x3a, 0x59, 0x8e, 0x52, 0x19, 0xe7, 0xd2, 0xa9, 0x8c,
	0x2b, 0xb0, 0x44, 0xaf, 0x5b, 0xe9, 0x09, 0xb5, 0x04, 0x3b, 0xe4, 0xf1, 0x6b, 0x1a, 0x12, 0xb5,
	0xa1, 0x30, 0x6d, 0x76, 0x88, 0x7f, 0x22, 0x37, 0x40, 0xdf, 0x8b, 0xff, 0x37, 0xad, 0x9a, 0x21,
	0xdf, 0x71, 0xec, 0x11, 0xd4, 0xfe, 0xe1, 0xa1, 0x8a, 0xbb, 0xce, 0x52, 0xbf, 0x3e, 0x3c, 0xac,
	0xff, 0x41, 0x0e, 0x20, 0x59, 0x80, 0xc9, 0x41, 0xbd, 0xfb, 0xc9, 0xbf, 0x6c, 0x25, 0x7f, 0x65,
	0x36, 0x29, 0x32, 0x21, 0xb3, 0xa8, 0x31, 0xc3, 0xc4, 0x7f, 0xcb, 0x45, 0x9f, 0xdc, 0x55, 0x7f,
	0xcb, 0x95, 0xfe, 0xb3, 0xab, 0x77, 0x6e, 0x12, 0xff, 0xc7, 0x0b, 0x7f, 0x36, 0x7e, 0x44, 0xb7,
	0x1b, 0xa9, 0x13, 0x94, 0x9d, 0xf0, 0xd0, 0x6b, 0x86, 0xec, 0xd4, 0x6d, 0x09, 0x4c, 0x9f, 0xeb,
	0x44, 0xce, 0x09, 0x7f, 0x97, 0xf0, 0xa3, 0x4b, 0x4a, 0xe9, 0xc6, 0x09, 0x3c, 0xbe, 0xd4, 0xb7,
	0x2f, 0x52, 0x25, 0x8c, 0xc7, 0x60, 0x04, 0x7e, 0xc4, 0xbd, 0xc8, 0x61, 0xae, 0x35, 0xe0, 0xca,
	0x58, 0x8c, 0x31, 0x6f, 0x15, 0xe2, 0xd1, 0xef, 0xe5, 0xa0, 0x3e, 0xfe, 0x9f, 0x27, 0x55, 0x1e,
	0xde, 0xf8, 0xff, 0x9e, 0xac, 0xbe, 0x67, 0xdc, 0x83, 0xdb, 0x63, 0x49, 0xde, 0x78, 0xc7, 0x1e,
	0x25, 0xf4, 0x7d, 0x0c, 0x0f, 0xc6, 0x52, 0x65, 0xdf, 0x78, 0xaf, 0xe6, 0x8d, 0x55, 0x58, 0x19,
	0x4b, 0xbc, 0x79, 0xd6, 0xe1, 0x42, 0xac, 0x33, 0xfb, 0x4b, 0x5f, 0xc4, 0xff, 0xf7, 0x58, 0x9d,
	0x7a, 0xf4, 0xef, 0xf3, 0xb0, 0xb8, 0xa9, 0xd2, 0x1b, 0xd7, 0x0e, 0xfa, 0x82, 0x63, 0xff, 0xdf,
	0x87, 0xda, 0xb1, 0x35, 0x04, 0xd6, 0x5d, 0xbf, 0x0b, 0xb7, 0x46, 0x61, 0x5b, 0xbe, 0x65, 0x72,
	0xd7, 0xef, 0xb0, 0x88, 0x57, 0x73, 0xc6, 0x23, 0xb8, 0x3f, 0x8a, 0xa8, 0x79, 0xc4, 0x3d, 0x6b,
	0x9f, 0x8b, 0xc8, 0x7a, 0x7d, 0x68, 0xbd, 0x60, 0x4e, 0x74, 0x54, 0xcd, 0x1b, 0xf7, 0xa1, 0x31,
	0x8a, 0x76, 0x9d, 0x79, 0xdc, 0xda, 0x75, 0xba, 0x47, 0x51, 0x8f, 0x85, 0xbc, 0x3a, 0x65, 0x3c,
	0x86, 0x8f, 0x46, 0xd2, 0xb9, 0xbe, 0x6f, 0x0b, 0xce, 0x8f, 0x79, 0x48, 0xbf, 0x43, 0xd6, 0xe5,
	0xd5, 0x69, 0xe3, 0x19, 0x3c, 0x19, 0x45, 0xfe, 0xba, 0x2f, 0x27, 0xc7, 0xb5, 0xad, 0x35, 0x11,
	0x85, 0xcc, 0xb5, 0x5a, 0xbd, 0x20, 0x74, 0x84, 0xef, 0x49, 0x23, 0xb7, 0x3a, 0x63, 0x7c, 0x0a,
	0x1f, 0x8f, 0xaa, 0xd5, 0x3e, 0x62, 0xb6, 0x7f, 0x6a, 0x6d, 0xf0, 0x9e, 0xef, 0x59, 0x1b, 0x8e,
	0x08, 0xfb, 0x81, 0x9c, 0xd9, 0xea, 0xec, 0xa3, 0xff, 0x33, 0x0d, 0xd7, 0x36, 0x5b, 0xf8, 0x96,
	0x23, 0xc6, 0x1c, 0xbc, 0xe0, 0xdc, 0x76, 0xbc, 0x2e, 0x4e, 0x24, 0xa5, 0x75, 0x8e, 0x46, 0xea,
	0xe9, 0xa4, 0x51, 0x8d, 0xa1, 0xa1, 0x75, 0x73, 0x4e, 0x38, 0xbd, 0x6c, 0x52, 0xcd, 0x19, 0x5f,
	0xc0, 0xea, 0x78, 0x72, 0x7d, 0xed, 0xdd, 0xa4, 0x67, 0xc2, 0x62, 0xc5, 0xa0, 0x9a, 0x37, 0x3e,
	0x83, 0x4f, 0x2f, 0x5d, 0x4f, 0x7d, 0x6c, 0xda, 0xf8, 0x08, 0x3e, 0x1c, 0x5f, 0x69, 0xdb, 0x3f,
	0xd5, 0x77, 0xee, 0xd5, 0x82, 0xf1, 0x00, 0xee, 0x4e, 0x24, 0xa5, 0x27, 0x65, 0xab, 0xd5, 0xc9,
	0xe3, 0x7d, 0xe9, 0x74, 0x8f, 0xde, 0x78, 0xe8, 0xd5, 0xd9, 0xf2, 0x5d, 0xbb, 0x7a, 0x5b, 0x71,
	0xf5, 0x18, 0xf2, 0xb6, 0xef, 0xda, 0xfb, 0xbe, 0xbf, 0xd3, 0xef, 0x1c, 0x49, 0xb5, 0x08, 0xed,
	0x8d, 0xea, 0xcf, 0x1b, 0xab, 0xf0, 0x78, 0x7c, 0x1d, 0x49, 0xcf, 0xbc, 0xf3, 0x8d, 0xd0, 0x0f,
	0x02, 0xba, 0x7f, 0x12, 0xd5, 0x6f, 0x73, 0xc6, 0x67, 0x93, 0xbe, 0x13, 0x2f, 0x43, 0xea, 0x1d,
	0xe5, 0xea, 0xb7, 0x79, 0xe3, 0x31, 0x3c, 0x9c, 0x30, 0x68, 0x95, 0xfb, 0x4e, 0x8f, 0xfd, 0x56,
	0xbf, 0x9d, 0x36, 0xee, 0x4e, 0x62, 0x87, 0xaf, 0xf7, 0xf6, 0x76, 0xaa, 0xdf, 0x16, 0x8c, 0x4f,
	0xe1, 0xd1, 0x84, 0x01, 0xc7, 0xe1, 0x0e, 0xf8, 0x38, 0xab, 0xa8, 0x7e, 0x5b, 0x7d, 0xf4, 0x1b,
	0x39, 0x58, 0x1a, 0x11, 0x07, 0xa1, 0x38, 0xf9, 0xb2, 0x01, 0x12, 0xd5, 0x9c, 0xf1, 0x09, 0x8e,
	0x66, 0x44, 0x85, 0xe1, 0xce, 0x54, 0x6d, 0xb5, 0x8e, 0x23, 0xa8, 0x25, 0x08, 0xff, 0xf1, 0x68,
	0xdd, 0x8f, 0x5e, 0xb0, 0xb0, 0x27, 0xc9, 0xf9, 0xa3, 0x6f, 0xa7, 0x60, 0x39, 0x45, 0xbd, 0xde,
	0x77, 0x5c, 0x1b, 0xf7, 0xc8, 0x2d, 0xb8, 0x91, 0x69, 0x27, 0xc6, 0xe8, 0x0d, 0x42, 0xe2, 0x61,
	0x34, 0xc1, 0x96, 0x7e, 0x49, 0xbb, 0x9a, 0x53, 0x9b, 0x6d, 0x34, 0x1d, 0x2d, 0x73, 0x7e, 0xa8,
	0xd3, 0x69, 0x9a, 0xb6, 0xd3, 0xf5, 0x9c, 0x43, 0xa7, 0xc3, 0x28, 0x61, 0x49, 0x54, 0xa7, 0x14,
	0x53, 0x8f, 0x22, 0x57, 0x5c, 0xb4, 0xee, 0xfb, 0x91, 0xdc, 0x28, 0xe3, 0x07, 0xb1, 0xee, 0x47,
	0x4f, 0xab, 0x7c, 0x32, 0xc1, 0x6a, 0xf5, 0x70, 0x32, 0xc1, 0x67, 0xd5, 0xee, 0x64, 0x82, 0x67,
	0xd5, 0xa3, 0xc9, 0x04, 0x9f, 0x57, 0x9d, 0xf5, 0x99, 0x97, 0xb9, 0x6f, 0x73, 0xef, 0xfd, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x90, 0xc5, 0x58, 0x40, 0x7a, 0x00, 0x00,
}
