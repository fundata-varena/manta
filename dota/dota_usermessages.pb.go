// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_usermessages.proto

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EDotaUserMessages int32

const (
	EDotaUserMessages_DOTA_UM_AddUnitToSelection         EDotaUserMessages = 464
	EDotaUserMessages_DOTA_UM_AIDebugLine                EDotaUserMessages = 465
	EDotaUserMessages_DOTA_UM_ChatEvent                  EDotaUserMessages = 466
	EDotaUserMessages_DOTA_UM_CombatHeroPositions        EDotaUserMessages = 467
	EDotaUserMessages_DOTA_UM_CombatLogData              EDotaUserMessages = 468
	EDotaUserMessages_DOTA_UM_CombatLogBulkData          EDotaUserMessages = 470
	EDotaUserMessages_DOTA_UM_CreateLinearProjectile     EDotaUserMessages = 471
	EDotaUserMessages_DOTA_UM_DestroyLinearProjectile    EDotaUserMessages = 472
	EDotaUserMessages_DOTA_UM_DodgeTrackingProjectiles   EDotaUserMessages = 473
	EDotaUserMessages_DOTA_UM_GlobalLightColor           EDotaUserMessages = 474
	EDotaUserMessages_DOTA_UM_GlobalLightDirection       EDotaUserMessages = 475
	EDotaUserMessages_DOTA_UM_InvalidCommand             EDotaUserMessages = 476
	EDotaUserMessages_DOTA_UM_LocationPing               EDotaUserMessages = 477
	EDotaUserMessages_DOTA_UM_MapLine                    EDotaUserMessages = 478
	EDotaUserMessages_DOTA_UM_MiniKillCamInfo            EDotaUserMessages = 479
	EDotaUserMessages_DOTA_UM_MinimapDebugPoint          EDotaUserMessages = 480
	EDotaUserMessages_DOTA_UM_MinimapEvent               EDotaUserMessages = 481
	EDotaUserMessages_DOTA_UM_NevermoreRequiem           EDotaUserMessages = 482
	EDotaUserMessages_DOTA_UM_OverheadEvent              EDotaUserMessages = 483
	EDotaUserMessages_DOTA_UM_SetNextAutobuyItem         EDotaUserMessages = 484
	EDotaUserMessages_DOTA_UM_SharedCooldown             EDotaUserMessages = 485
	EDotaUserMessages_DOTA_UM_SpectatorPlayerClick       EDotaUserMessages = 486
	EDotaUserMessages_DOTA_UM_TutorialTipInfo            EDotaUserMessages = 487
	EDotaUserMessages_DOTA_UM_UnitEvent                  EDotaUserMessages = 488
	EDotaUserMessages_DOTA_UM_ParticleManager            EDotaUserMessages = 489
	EDotaUserMessages_DOTA_UM_BotChat                    EDotaUserMessages = 490
	EDotaUserMessages_DOTA_UM_HudError                   EDotaUserMessages = 491
	EDotaUserMessages_DOTA_UM_ItemPurchased              EDotaUserMessages = 492
	EDotaUserMessages_DOTA_UM_Ping                       EDotaUserMessages = 493
	EDotaUserMessages_DOTA_UM_ItemFound                  EDotaUserMessages = 494
	EDotaUserMessages_DOTA_UM_CharacterSpeakConcept      EDotaUserMessages = 495
	EDotaUserMessages_DOTA_UM_SwapVerify                 EDotaUserMessages = 496
	EDotaUserMessages_DOTA_UM_WorldLine                  EDotaUserMessages = 497
	EDotaUserMessages_DOTA_UM_TournamentDrop             EDotaUserMessages = 498
	EDotaUserMessages_DOTA_UM_ItemAlert                  EDotaUserMessages = 499
	EDotaUserMessages_DOTA_UM_HalloweenDrops             EDotaUserMessages = 500
	EDotaUserMessages_DOTA_UM_ChatWheel                  EDotaUserMessages = 501
	EDotaUserMessages_DOTA_UM_ReceivedXmasGift           EDotaUserMessages = 502
	EDotaUserMessages_DOTA_UM_UpdateSharedContent        EDotaUserMessages = 503
	EDotaUserMessages_DOTA_UM_TutorialRequestExp         EDotaUserMessages = 504
	EDotaUserMessages_DOTA_UM_TutorialPingMinimap        EDotaUserMessages = 505
	EDotaUserMessages_DOTA_UM_GamerulesStateChanged      EDotaUserMessages = 506
	EDotaUserMessages_DOTA_UM_ShowSurvey                 EDotaUserMessages = 507
	EDotaUserMessages_DOTA_UM_TutorialFade               EDotaUserMessages = 508
	EDotaUserMessages_DOTA_UM_AddQuestLogEntry           EDotaUserMessages = 509
	EDotaUserMessages_DOTA_UM_SendStatPopup              EDotaUserMessages = 510
	EDotaUserMessages_DOTA_UM_TutorialFinish             EDotaUserMessages = 511
	EDotaUserMessages_DOTA_UM_SendRoshanPopup            EDotaUserMessages = 512
	EDotaUserMessages_DOTA_UM_SendGenericToolTip         EDotaUserMessages = 513
	EDotaUserMessages_DOTA_UM_SendFinalGold              EDotaUserMessages = 514
	EDotaUserMessages_DOTA_UM_CustomMsg                  EDotaUserMessages = 515
	EDotaUserMessages_DOTA_UM_CoachHUDPing               EDotaUserMessages = 516
	EDotaUserMessages_DOTA_UM_ClientLoadGridNav          EDotaUserMessages = 517
	EDotaUserMessages_DOTA_UM_TE_Projectile              EDotaUserMessages = 518
	EDotaUserMessages_DOTA_UM_TE_ProjectileLoc           EDotaUserMessages = 519
	EDotaUserMessages_DOTA_UM_TE_DotaBloodImpact         EDotaUserMessages = 520
	EDotaUserMessages_DOTA_UM_TE_UnitAnimation           EDotaUserMessages = 521
	EDotaUserMessages_DOTA_UM_TE_UnitAnimationEnd        EDotaUserMessages = 522
	EDotaUserMessages_DOTA_UM_AbilityPing                EDotaUserMessages = 523
	EDotaUserMessages_DOTA_UM_ShowGenericPopup           EDotaUserMessages = 524
	EDotaUserMessages_DOTA_UM_VoteStart                  EDotaUserMessages = 525
	EDotaUserMessages_DOTA_UM_VoteUpdate                 EDotaUserMessages = 526
	EDotaUserMessages_DOTA_UM_VoteEnd                    EDotaUserMessages = 527
	EDotaUserMessages_DOTA_UM_BoosterState               EDotaUserMessages = 528
	EDotaUserMessages_DOTA_UM_WillPurchaseAlert          EDotaUserMessages = 529
	EDotaUserMessages_DOTA_UM_TutorialMinimapPosition    EDotaUserMessages = 530
	EDotaUserMessages_DOTA_UM_PlayerMMR                  EDotaUserMessages = 531
	EDotaUserMessages_DOTA_UM_AbilitySteal               EDotaUserMessages = 532
	EDotaUserMessages_DOTA_UM_CourierKilledAlert         EDotaUserMessages = 533
	EDotaUserMessages_DOTA_UM_EnemyItemAlert             EDotaUserMessages = 534
	EDotaUserMessages_DOTA_UM_StatsMatchDetails          EDotaUserMessages = 535
	EDotaUserMessages_DOTA_UM_MiniTaunt                  EDotaUserMessages = 536
	EDotaUserMessages_DOTA_UM_BuyBackStateAlert          EDotaUserMessages = 537
	EDotaUserMessages_DOTA_UM_SpeechBubble               EDotaUserMessages = 538
	EDotaUserMessages_DOTA_UM_CustomHeaderMessage        EDotaUserMessages = 539
	EDotaUserMessages_DOTA_UM_QuickBuyAlert              EDotaUserMessages = 540
	EDotaUserMessages_DOTA_UM_StatsHeroDetails           EDotaUserMessages = 541
	EDotaUserMessages_DOTA_UM_PredictionResult           EDotaUserMessages = 542
	EDotaUserMessages_DOTA_UM_ModifierAlert              EDotaUserMessages = 543
	EDotaUserMessages_DOTA_UM_HPManaAlert                EDotaUserMessages = 544
	EDotaUserMessages_DOTA_UM_GlyphAlert                 EDotaUserMessages = 545
	EDotaUserMessages_DOTA_UM_BeastChat                  EDotaUserMessages = 546
	EDotaUserMessages_DOTA_UM_SpectatorPlayerUnitOrders  EDotaUserMessages = 547
	EDotaUserMessages_DOTA_UM_CustomHudElement_Create    EDotaUserMessages = 548
	EDotaUserMessages_DOTA_UM_CustomHudElement_Modify    EDotaUserMessages = 549
	EDotaUserMessages_DOTA_UM_CustomHudElement_Destroy   EDotaUserMessages = 550
	EDotaUserMessages_DOTA_UM_CompendiumState            EDotaUserMessages = 551
	EDotaUserMessages_DOTA_UM_ProjectionAbility          EDotaUserMessages = 552
	EDotaUserMessages_DOTA_UM_ProjectionEvent            EDotaUserMessages = 553
	EDotaUserMessages_DOTA_UM_CombatLogDataHLTV          EDotaUserMessages = 554
	EDotaUserMessages_DOTA_UM_XPAlert                    EDotaUserMessages = 555
	EDotaUserMessages_DOTA_UM_UpdateQuestProgress        EDotaUserMessages = 556
	EDotaUserMessages_DOTA_UM_MatchMetadata              EDotaUserMessages = 557
	EDotaUserMessages_DOTA_UM_MatchDetails               EDotaUserMessages = 558
	EDotaUserMessages_DOTA_UM_QuestStatus                EDotaUserMessages = 559
	EDotaUserMessages_DOTA_UM_SuggestHeroPick            EDotaUserMessages = 560
	EDotaUserMessages_DOTA_UM_SuggestHeroRole            EDotaUserMessages = 561
	EDotaUserMessages_DOTA_UM_KillcamDamageTaken         EDotaUserMessages = 562
	EDotaUserMessages_DOTA_UM_SelectPenaltyGold          EDotaUserMessages = 563
	EDotaUserMessages_DOTA_UM_RollDiceResult             EDotaUserMessages = 564
	EDotaUserMessages_DOTA_UM_FlipCoinResult             EDotaUserMessages = 565
	EDotaUserMessages_DOTA_UM_RequestItemSuggestions     EDotaUserMessages = 566
	EDotaUserMessages_DOTA_UM_TeamCaptainChanged         EDotaUserMessages = 567
	EDotaUserMessages_DOTA_UM_SendRoshanSpectatorPhase   EDotaUserMessages = 568
	EDotaUserMessages_DOTA_UM_ChatWheelCooldown          EDotaUserMessages = 569
	EDotaUserMessages_DOTA_UM_DismissAllStatPopups       EDotaUserMessages = 570
	EDotaUserMessages_DOTA_UM_TE_DestroyProjectile       EDotaUserMessages = 571
	EDotaUserMessages_DOTA_UM_HeroRelicProgress          EDotaUserMessages = 572
	EDotaUserMessages_DOTA_UM_AbilityDraftRequestAbility EDotaUserMessages = 573
	EDotaUserMessages_DOTA_UM_ItemSold                   EDotaUserMessages = 574
	EDotaUserMessages_DOTA_UM_DamageReport               EDotaUserMessages = 575
	EDotaUserMessages_DOTA_UM_SalutePlayer               EDotaUserMessages = 576
)

var EDotaUserMessages_name = map[int32]string{
	464: "DOTA_UM_AddUnitToSelection",
	465: "DOTA_UM_AIDebugLine",
	466: "DOTA_UM_ChatEvent",
	467: "DOTA_UM_CombatHeroPositions",
	468: "DOTA_UM_CombatLogData",
	470: "DOTA_UM_CombatLogBulkData",
	471: "DOTA_UM_CreateLinearProjectile",
	472: "DOTA_UM_DestroyLinearProjectile",
	473: "DOTA_UM_DodgeTrackingProjectiles",
	474: "DOTA_UM_GlobalLightColor",
	475: "DOTA_UM_GlobalLightDirection",
	476: "DOTA_UM_InvalidCommand",
	477: "DOTA_UM_LocationPing",
	478: "DOTA_UM_MapLine",
	479: "DOTA_UM_MiniKillCamInfo",
	480: "DOTA_UM_MinimapDebugPoint",
	481: "DOTA_UM_MinimapEvent",
	482: "DOTA_UM_NevermoreRequiem",
	483: "DOTA_UM_OverheadEvent",
	484: "DOTA_UM_SetNextAutobuyItem",
	485: "DOTA_UM_SharedCooldown",
	486: "DOTA_UM_SpectatorPlayerClick",
	487: "DOTA_UM_TutorialTipInfo",
	488: "DOTA_UM_UnitEvent",
	489: "DOTA_UM_ParticleManager",
	490: "DOTA_UM_BotChat",
	491: "DOTA_UM_HudError",
	492: "DOTA_UM_ItemPurchased",
	493: "DOTA_UM_Ping",
	494: "DOTA_UM_ItemFound",
	495: "DOTA_UM_CharacterSpeakConcept",
	496: "DOTA_UM_SwapVerify",
	497: "DOTA_UM_WorldLine",
	498: "DOTA_UM_TournamentDrop",
	499: "DOTA_UM_ItemAlert",
	500: "DOTA_UM_HalloweenDrops",
	501: "DOTA_UM_ChatWheel",
	502: "DOTA_UM_ReceivedXmasGift",
	503: "DOTA_UM_UpdateSharedContent",
	504: "DOTA_UM_TutorialRequestExp",
	505: "DOTA_UM_TutorialPingMinimap",
	506: "DOTA_UM_GamerulesStateChanged",
	507: "DOTA_UM_ShowSurvey",
	508: "DOTA_UM_TutorialFade",
	509: "DOTA_UM_AddQuestLogEntry",
	510: "DOTA_UM_SendStatPopup",
	511: "DOTA_UM_TutorialFinish",
	512: "DOTA_UM_SendRoshanPopup",
	513: "DOTA_UM_SendGenericToolTip",
	514: "DOTA_UM_SendFinalGold",
	515: "DOTA_UM_CustomMsg",
	516: "DOTA_UM_CoachHUDPing",
	517: "DOTA_UM_ClientLoadGridNav",
	518: "DOTA_UM_TE_Projectile",
	519: "DOTA_UM_TE_ProjectileLoc",
	520: "DOTA_UM_TE_DotaBloodImpact",
	521: "DOTA_UM_TE_UnitAnimation",
	522: "DOTA_UM_TE_UnitAnimationEnd",
	523: "DOTA_UM_AbilityPing",
	524: "DOTA_UM_ShowGenericPopup",
	525: "DOTA_UM_VoteStart",
	526: "DOTA_UM_VoteUpdate",
	527: "DOTA_UM_VoteEnd",
	528: "DOTA_UM_BoosterState",
	529: "DOTA_UM_WillPurchaseAlert",
	530: "DOTA_UM_TutorialMinimapPosition",
	531: "DOTA_UM_PlayerMMR",
	532: "DOTA_UM_AbilitySteal",
	533: "DOTA_UM_CourierKilledAlert",
	534: "DOTA_UM_EnemyItemAlert",
	535: "DOTA_UM_StatsMatchDetails",
	536: "DOTA_UM_MiniTaunt",
	537: "DOTA_UM_BuyBackStateAlert",
	538: "DOTA_UM_SpeechBubble",
	539: "DOTA_UM_CustomHeaderMessage",
	540: "DOTA_UM_QuickBuyAlert",
	541: "DOTA_UM_StatsHeroDetails",
	542: "DOTA_UM_PredictionResult",
	543: "DOTA_UM_ModifierAlert",
	544: "DOTA_UM_HPManaAlert",
	545: "DOTA_UM_GlyphAlert",
	546: "DOTA_UM_BeastChat",
	547: "DOTA_UM_SpectatorPlayerUnitOrders",
	548: "DOTA_UM_CustomHudElement_Create",
	549: "DOTA_UM_CustomHudElement_Modify",
	550: "DOTA_UM_CustomHudElement_Destroy",
	551: "DOTA_UM_CompendiumState",
	552: "DOTA_UM_ProjectionAbility",
	553: "DOTA_UM_ProjectionEvent",
	554: "DOTA_UM_CombatLogDataHLTV",
	555: "DOTA_UM_XPAlert",
	556: "DOTA_UM_UpdateQuestProgress",
	557: "DOTA_UM_MatchMetadata",
	558: "DOTA_UM_MatchDetails",
	559: "DOTA_UM_QuestStatus",
	560: "DOTA_UM_SuggestHeroPick",
	561: "DOTA_UM_SuggestHeroRole",
	562: "DOTA_UM_KillcamDamageTaken",
	563: "DOTA_UM_SelectPenaltyGold",
	564: "DOTA_UM_RollDiceResult",
	565: "DOTA_UM_FlipCoinResult",
	566: "DOTA_UM_RequestItemSuggestions",
	567: "DOTA_UM_TeamCaptainChanged",
	568: "DOTA_UM_SendRoshanSpectatorPhase",
	569: "DOTA_UM_ChatWheelCooldown",
	570: "DOTA_UM_DismissAllStatPopups",
	571: "DOTA_UM_TE_DestroyProjectile",
	572: "DOTA_UM_HeroRelicProgress",
	573: "DOTA_UM_AbilityDraftRequestAbility",
	574: "DOTA_UM_ItemSold",
	575: "DOTA_UM_DamageReport",
	576: "DOTA_UM_SalutePlayer",
}
var EDotaUserMessages_value = map[string]int32{
	"DOTA_UM_AddUnitToSelection":         464,
	"DOTA_UM_AIDebugLine":                465,
	"DOTA_UM_ChatEvent":                  466,
	"DOTA_UM_CombatHeroPositions":        467,
	"DOTA_UM_CombatLogData":              468,
	"DOTA_UM_CombatLogBulkData":          470,
	"DOTA_UM_CreateLinearProjectile":     471,
	"DOTA_UM_DestroyLinearProjectile":    472,
	"DOTA_UM_DodgeTrackingProjectiles":   473,
	"DOTA_UM_GlobalLightColor":           474,
	"DOTA_UM_GlobalLightDirection":       475,
	"DOTA_UM_InvalidCommand":             476,
	"DOTA_UM_LocationPing":               477,
	"DOTA_UM_MapLine":                    478,
	"DOTA_UM_MiniKillCamInfo":            479,
	"DOTA_UM_MinimapDebugPoint":          480,
	"DOTA_UM_MinimapEvent":               481,
	"DOTA_UM_NevermoreRequiem":           482,
	"DOTA_UM_OverheadEvent":              483,
	"DOTA_UM_SetNextAutobuyItem":         484,
	"DOTA_UM_SharedCooldown":             485,
	"DOTA_UM_SpectatorPlayerClick":       486,
	"DOTA_UM_TutorialTipInfo":            487,
	"DOTA_UM_UnitEvent":                  488,
	"DOTA_UM_ParticleManager":            489,
	"DOTA_UM_BotChat":                    490,
	"DOTA_UM_HudError":                   491,
	"DOTA_UM_ItemPurchased":              492,
	"DOTA_UM_Ping":                       493,
	"DOTA_UM_ItemFound":                  494,
	"DOTA_UM_CharacterSpeakConcept":      495,
	"DOTA_UM_SwapVerify":                 496,
	"DOTA_UM_WorldLine":                  497,
	"DOTA_UM_TournamentDrop":             498,
	"DOTA_UM_ItemAlert":                  499,
	"DOTA_UM_HalloweenDrops":             500,
	"DOTA_UM_ChatWheel":                  501,
	"DOTA_UM_ReceivedXmasGift":           502,
	"DOTA_UM_UpdateSharedContent":        503,
	"DOTA_UM_TutorialRequestExp":         504,
	"DOTA_UM_TutorialPingMinimap":        505,
	"DOTA_UM_GamerulesStateChanged":      506,
	"DOTA_UM_ShowSurvey":                 507,
	"DOTA_UM_TutorialFade":               508,
	"DOTA_UM_AddQuestLogEntry":           509,
	"DOTA_UM_SendStatPopup":              510,
	"DOTA_UM_TutorialFinish":             511,
	"DOTA_UM_SendRoshanPopup":            512,
	"DOTA_UM_SendGenericToolTip":         513,
	"DOTA_UM_SendFinalGold":              514,
	"DOTA_UM_CustomMsg":                  515,
	"DOTA_UM_CoachHUDPing":               516,
	"DOTA_UM_ClientLoadGridNav":          517,
	"DOTA_UM_TE_Projectile":              518,
	"DOTA_UM_TE_ProjectileLoc":           519,
	"DOTA_UM_TE_DotaBloodImpact":         520,
	"DOTA_UM_TE_UnitAnimation":           521,
	"DOTA_UM_TE_UnitAnimationEnd":        522,
	"DOTA_UM_AbilityPing":                523,
	"DOTA_UM_ShowGenericPopup":           524,
	"DOTA_UM_VoteStart":                  525,
	"DOTA_UM_VoteUpdate":                 526,
	"DOTA_UM_VoteEnd":                    527,
	"DOTA_UM_BoosterState":               528,
	"DOTA_UM_WillPurchaseAlert":          529,
	"DOTA_UM_TutorialMinimapPosition":    530,
	"DOTA_UM_PlayerMMR":                  531,
	"DOTA_UM_AbilitySteal":               532,
	"DOTA_UM_CourierKilledAlert":         533,
	"DOTA_UM_EnemyItemAlert":             534,
	"DOTA_UM_StatsMatchDetails":          535,
	"DOTA_UM_MiniTaunt":                  536,
	"DOTA_UM_BuyBackStateAlert":          537,
	"DOTA_UM_SpeechBubble":               538,
	"DOTA_UM_CustomHeaderMessage":        539,
	"DOTA_UM_QuickBuyAlert":              540,
	"DOTA_UM_StatsHeroDetails":           541,
	"DOTA_UM_PredictionResult":           542,
	"DOTA_UM_ModifierAlert":              543,
	"DOTA_UM_HPManaAlert":                544,
	"DOTA_UM_GlyphAlert":                 545,
	"DOTA_UM_BeastChat":                  546,
	"DOTA_UM_SpectatorPlayerUnitOrders":  547,
	"DOTA_UM_CustomHudElement_Create":    548,
	"DOTA_UM_CustomHudElement_Modify":    549,
	"DOTA_UM_CustomHudElement_Destroy":   550,
	"DOTA_UM_CompendiumState":            551,
	"DOTA_UM_ProjectionAbility":          552,
	"DOTA_UM_ProjectionEvent":            553,
	"DOTA_UM_CombatLogDataHLTV":          554,
	"DOTA_UM_XPAlert":                    555,
	"DOTA_UM_UpdateQuestProgress":        556,
	"DOTA_UM_MatchMetadata":              557,
	"DOTA_UM_MatchDetails":               558,
	"DOTA_UM_QuestStatus":                559,
	"DOTA_UM_SuggestHeroPick":            560,
	"DOTA_UM_SuggestHeroRole":            561,
	"DOTA_UM_KillcamDamageTaken":         562,
	"DOTA_UM_SelectPenaltyGold":          563,
	"DOTA_UM_RollDiceResult":             564,
	"DOTA_UM_FlipCoinResult":             565,
	"DOTA_UM_RequestItemSuggestions":     566,
	"DOTA_UM_TeamCaptainChanged":         567,
	"DOTA_UM_SendRoshanSpectatorPhase":   568,
	"DOTA_UM_ChatWheelCooldown":          569,
	"DOTA_UM_DismissAllStatPopups":       570,
	"DOTA_UM_TE_DestroyProjectile":       571,
	"DOTA_UM_HeroRelicProgress":          572,
	"DOTA_UM_AbilityDraftRequestAbility": 573,
	"DOTA_UM_ItemSold":                   574,
	"DOTA_UM_DamageReport":               575,
	"DOTA_UM_SalutePlayer":               576,
}

func (x EDotaUserMessages) Enum() *EDotaUserMessages {
	p := new(EDotaUserMessages)
	*p = x
	return p
}
func (x EDotaUserMessages) String() string {
	return proto.EnumName(EDotaUserMessages_name, int32(x))
}
func (x *EDotaUserMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDotaUserMessages_value, data, "EDotaUserMessages")
	if err != nil {
		return err
	}
	*x = EDotaUserMessages(value)
	return nil
}
func (EDotaUserMessages) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{0} }

type DOTA_CHAT_MESSAGE int32

const (
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_INVALID                                   DOTA_CHAT_MESSAGE = -1
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_KILL                                 DOTA_CHAT_MESSAGE = 0
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_DENY                                 DOTA_CHAT_MESSAGE = 1
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_BARRACKS_KILL                             DOTA_CHAT_MESSAGE = 2
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_TOWER_KILL                                DOTA_CHAT_MESSAGE = 3
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_TOWER_DENY                                DOTA_CHAT_MESSAGE = 4
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_FIRSTBLOOD                                DOTA_CHAT_MESSAGE = 5
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_STREAK_KILL                               DOTA_CHAT_MESSAGE = 6
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_BUYBACK                                   DOTA_CHAT_MESSAGE = 7
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_AEGIS                                     DOTA_CHAT_MESSAGE = 8
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ROSHAN_KILL                               DOTA_CHAT_MESSAGE = 9
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_COURIER_LOST                              DOTA_CHAT_MESSAGE = 10
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_COURIER_RESPAWNED                         DOTA_CHAT_MESSAGE = 11
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_GLYPH_USED                                DOTA_CHAT_MESSAGE = 12
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ITEM_PURCHASE                             DOTA_CHAT_MESSAGE = 13
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CONNECT                                   DOTA_CHAT_MESSAGE = 14
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT                                DOTA_CHAT_MESSAGE = 15
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT             DOTA_CHAT_MESSAGE = 16
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT_TIME_REMAINING                 DOTA_CHAT_MESSAGE = 17
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL          DOTA_CHAT_MESSAGE = 18
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RECONNECT                                 DOTA_CHAT_MESSAGE = 19
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_LEFT                               DOTA_CHAT_MESSAGE = 20
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SAFE_TO_LEAVE                             DOTA_CHAT_MESSAGE = 21
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RUNE_PICKUP                               DOTA_CHAT_MESSAGE = 22
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RUNE_BOTTLE                               DOTA_CHAT_MESSAGE = 23
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_INTHEBAG                                  DOTA_CHAT_MESSAGE = 24
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SECRETSHOP                                DOTA_CHAT_MESSAGE = 25
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ITEM_AUTOPURCHASED                        DOTA_CHAT_MESSAGE = 26
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ITEMS_COMBINED                            DOTA_CHAT_MESSAGE = 27
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SUPER_CREEPS                              DOTA_CHAT_MESSAGE = 28
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CANT_USE_ACTION_ITEM                      DOTA_CHAT_MESSAGE = 29
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CANTPAUSE                                 DOTA_CHAT_MESSAGE = 31
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_NOPAUSESLEFT                              DOTA_CHAT_MESSAGE = 32
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CANTPAUSEYET                              DOTA_CHAT_MESSAGE = 33
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PAUSED                                    DOTA_CHAT_MESSAGE = 34
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_UNPAUSE_COUNTDOWN                         DOTA_CHAT_MESSAGE = 35
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_UNPAUSED                                  DOTA_CHAT_MESSAGE = 36
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_AUTO_UNPAUSED                             DOTA_CHAT_MESSAGE = 37
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_YOUPAUSED                                 DOTA_CHAT_MESSAGE = 38
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CANTUNPAUSETEAM                           DOTA_CHAT_MESSAGE = 39
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_VOICE_TEXT_BANNED                         DOTA_CHAT_MESSAGE = 41
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME             DOTA_CHAT_MESSAGE = 42
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_REPORT_REMINDER                           DOTA_CHAT_MESSAGE = 43
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ECON_ITEM                                 DOTA_CHAT_MESSAGE = 44
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_TAUNT                                     DOTA_CHAT_MESSAGE = 45
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RANDOM                                    DOTA_CHAT_MESSAGE = 46
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RD_TURN                                   DOTA_CHAT_MESSAGE = 47
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DROP_RATE_BONUS                           DOTA_CHAT_MESSAGE = 49
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_NO_BATTLE_POINTS                          DOTA_CHAT_MESSAGE = 50
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DENIED_AEGIS                              DOTA_CHAT_MESSAGE = 51
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_INFORMATIONAL                             DOTA_CHAT_MESSAGE = 52
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_AEGIS_STOLEN                              DOTA_CHAT_MESSAGE = 53
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ROSHAN_CANDY                              DOTA_CHAT_MESSAGE = 54
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ITEM_GIFTED                               DOTA_CHAT_MESSAGE = 55
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL                    DOTA_CHAT_MESSAGE = 56
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED                   DOTA_CHAT_MESSAGE = 57
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED                    DOTA_CHAT_MESSAGE = 58
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HOLDOUT_WALL_FINISHED                     DOTA_CHAT_MESSAGE = 59
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO                  DOTA_CHAT_MESSAGE = 62
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION          DOTA_CHAT_MESSAGE = 63
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT_LIMITED_HERO                   DOTA_CHAT_MESSAGE = 64
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION        DOTA_CHAT_MESSAGE = 65
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS               DOTA_CHAT_MESSAGE = 66
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE          DOTA_CHAT_MESSAGE = 67
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_LEFT_AFK                           DOTA_CHAT_MESSAGE = 73
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG         DOTA_CHAT_MESSAGE = 74
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_ABANDONED                          DOTA_CHAT_MESSAGE = 75
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_ABANDONED_AFK                      DOTA_CHAT_MESSAGE = 76
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG    DOTA_CHAT_MESSAGE = 77
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WILL_NOT_BE_SCORED                        DOTA_CHAT_MESSAGE = 78
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED                 DOTA_CHAT_MESSAGE = 79
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK                DOTA_CHAT_MESSAGE = 80
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED         DOTA_CHAT_MESSAGE = 81
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON                  DOTA_CHAT_MESSAGE = 82
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS DOTA_CHAT_MESSAGE = 83
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY   DOTA_CHAT_MESSAGE = 84
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_COMPENDIUM_LEVEL                          DOTA_CHAT_MESSAGE = 85
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_VICTORY_PREDICTION_STREAK                 DOTA_CHAT_MESSAGE = 86
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ASSASSIN_ANNOUNCE                         DOTA_CHAT_MESSAGE = 87
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ASSASSIN_SUCCESS                          DOTA_CHAT_MESSAGE = 88
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ASSASSIN_DENIED                           DOTA_CHAT_MESSAGE = 89
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM    DOTA_CHAT_MESSAGE = 90
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_EFFIGY_KILL                               DOTA_CHAT_MESSAGE = 91
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW                DOTA_CHAT_MESSAGE = 92
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_YEAR_BEAST_KILLED                         DOTA_CHAT_MESSAGE = 93
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PAUSE_COUNTDOWN                           DOTA_CHAT_MESSAGE = 94
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_COINS_WAGERED                             DOTA_CHAT_MESSAGE = 95
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_NOMINATED_BAN                        DOTA_CHAT_MESSAGE = 96
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_BANNED                               DOTA_CHAT_MESSAGE = 97
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_BAN_COUNT                            DOTA_CHAT_MESSAGE = 98
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RIVER_PAINTED                             DOTA_CHAT_MESSAGE = 99
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SCAN_USED                                 DOTA_CHAT_MESSAGE = 100
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SHRINE_KILLED                             DOTA_CHAT_MESSAGE = 101
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WAGER_TOKEN_SPENT                         DOTA_CHAT_MESSAGE = 102
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RANK_WAGER                                DOTA_CHAT_MESSAGE = 103
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_NEW_PLAYER_REMINDER                       DOTA_CHAT_MESSAGE = 104
)

var DOTA_CHAT_MESSAGE_name = map[int32]string{
	-1:  "CHAT_MESSAGE_INVALID",
	0:   "CHAT_MESSAGE_HERO_KILL",
	1:   "CHAT_MESSAGE_HERO_DENY",
	2:   "CHAT_MESSAGE_BARRACKS_KILL",
	3:   "CHAT_MESSAGE_TOWER_KILL",
	4:   "CHAT_MESSAGE_TOWER_DENY",
	5:   "CHAT_MESSAGE_FIRSTBLOOD",
	6:   "CHAT_MESSAGE_STREAK_KILL",
	7:   "CHAT_MESSAGE_BUYBACK",
	8:   "CHAT_MESSAGE_AEGIS",
	9:   "CHAT_MESSAGE_ROSHAN_KILL",
	10:  "CHAT_MESSAGE_COURIER_LOST",
	11:  "CHAT_MESSAGE_COURIER_RESPAWNED",
	12:  "CHAT_MESSAGE_GLYPH_USED",
	13:  "CHAT_MESSAGE_ITEM_PURCHASE",
	14:  "CHAT_MESSAGE_CONNECT",
	15:  "CHAT_MESSAGE_DISCONNECT",
	16:  "CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT",
	17:  "CHAT_MESSAGE_DISCONNECT_TIME_REMAINING",
	18:  "CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL",
	19:  "CHAT_MESSAGE_RECONNECT",
	20:  "CHAT_MESSAGE_PLAYER_LEFT",
	21:  "CHAT_MESSAGE_SAFE_TO_LEAVE",
	22:  "CHAT_MESSAGE_RUNE_PICKUP",
	23:  "CHAT_MESSAGE_RUNE_BOTTLE",
	24:  "CHAT_MESSAGE_INTHEBAG",
	25:  "CHAT_MESSAGE_SECRETSHOP",
	26:  "CHAT_MESSAGE_ITEM_AUTOPURCHASED",
	27:  "CHAT_MESSAGE_ITEMS_COMBINED",
	28:  "CHAT_MESSAGE_SUPER_CREEPS",
	29:  "CHAT_MESSAGE_CANT_USE_ACTION_ITEM",
	31:  "CHAT_MESSAGE_CANTPAUSE",
	32:  "CHAT_MESSAGE_NOPAUSESLEFT",
	33:  "CHAT_MESSAGE_CANTPAUSEYET",
	34:  "CHAT_MESSAGE_PAUSED",
	35:  "CHAT_MESSAGE_UNPAUSE_COUNTDOWN",
	36:  "CHAT_MESSAGE_UNPAUSED",
	37:  "CHAT_MESSAGE_AUTO_UNPAUSED",
	38:  "CHAT_MESSAGE_YOUPAUSED",
	39:  "CHAT_MESSAGE_CANTUNPAUSETEAM",
	41:  "CHAT_MESSAGE_VOICE_TEXT_BANNED",
	42:  "CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME",
	43:  "CHAT_MESSAGE_REPORT_REMINDER",
	44:  "CHAT_MESSAGE_ECON_ITEM",
	45:  "CHAT_MESSAGE_TAUNT",
	46:  "CHAT_MESSAGE_RANDOM",
	47:  "CHAT_MESSAGE_RD_TURN",
	49:  "CHAT_MESSAGE_DROP_RATE_BONUS",
	50:  "CHAT_MESSAGE_NO_BATTLE_POINTS",
	51:  "CHAT_MESSAGE_DENIED_AEGIS",
	52:  "CHAT_MESSAGE_INFORMATIONAL",
	53:  "CHAT_MESSAGE_AEGIS_STOLEN",
	54:  "CHAT_MESSAGE_ROSHAN_CANDY",
	55:  "CHAT_MESSAGE_ITEM_GIFTED",
	56:  "CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL",
	57:  "CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED",
	58:  "CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED",
	59:  "CHAT_MESSAGE_HOLDOUT_WALL_FINISHED",
	62:  "CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO",
	63:  "CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION",
	64:  "CHAT_MESSAGE_DISCONNECT_LIMITED_HERO",
	65:  "CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION",
	66:  "CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS",
	67:  "CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE",
	73:  "CHAT_MESSAGE_PLAYER_LEFT_AFK",
	74:  "CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG",
	75:  "CHAT_MESSAGE_PLAYER_ABANDONED",
	76:  "CHAT_MESSAGE_PLAYER_ABANDONED_AFK",
	77:  "CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG",
	78:  "CHAT_MESSAGE_WILL_NOT_BE_SCORED",
	79:  "CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED",
	80:  "CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK",
	81:  "CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED",
	82:  "CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON",
	83:  "CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS",
	84:  "CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY",
	85:  "CHAT_MESSAGE_COMPENDIUM_LEVEL",
	86:  "CHAT_MESSAGE_VICTORY_PREDICTION_STREAK",
	87:  "CHAT_MESSAGE_ASSASSIN_ANNOUNCE",
	88:  "CHAT_MESSAGE_ASSASSIN_SUCCESS",
	89:  "CHAT_MESSAGE_ASSASSIN_DENIED",
	90:  "CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM",
	91:  "CHAT_MESSAGE_EFFIGY_KILL",
	92:  "CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW",
	93:  "CHAT_MESSAGE_YEAR_BEAST_KILLED",
	94:  "CHAT_MESSAGE_PAUSE_COUNTDOWN",
	95:  "CHAT_MESSAGE_COINS_WAGERED",
	96:  "CHAT_MESSAGE_HERO_NOMINATED_BAN",
	97:  "CHAT_MESSAGE_HERO_BANNED",
	98:  "CHAT_MESSAGE_HERO_BAN_COUNT",
	99:  "CHAT_MESSAGE_RIVER_PAINTED",
	100: "CHAT_MESSAGE_SCAN_USED",
	101: "CHAT_MESSAGE_SHRINE_KILLED",
	102: "CHAT_MESSAGE_WAGER_TOKEN_SPENT",
	103: "CHAT_MESSAGE_RANK_WAGER",
	104: "CHAT_MESSAGE_NEW_PLAYER_REMINDER",
}
var DOTA_CHAT_MESSAGE_value = map[string]int32{
	"CHAT_MESSAGE_INVALID":                                   -1,
	"CHAT_MESSAGE_HERO_KILL":                                 0,
	"CHAT_MESSAGE_HERO_DENY":                                 1,
	"CHAT_MESSAGE_BARRACKS_KILL":                             2,
	"CHAT_MESSAGE_TOWER_KILL":                                3,
	"CHAT_MESSAGE_TOWER_DENY":                                4,
	"CHAT_MESSAGE_FIRSTBLOOD":                                5,
	"CHAT_MESSAGE_STREAK_KILL":                               6,
	"CHAT_MESSAGE_BUYBACK":                                   7,
	"CHAT_MESSAGE_AEGIS":                                     8,
	"CHAT_MESSAGE_ROSHAN_KILL":                               9,
	"CHAT_MESSAGE_COURIER_LOST":                              10,
	"CHAT_MESSAGE_COURIER_RESPAWNED":                         11,
	"CHAT_MESSAGE_GLYPH_USED":                                12,
	"CHAT_MESSAGE_ITEM_PURCHASE":                             13,
	"CHAT_MESSAGE_CONNECT":                                   14,
	"CHAT_MESSAGE_DISCONNECT":                                15,
	"CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT":             16,
	"CHAT_MESSAGE_DISCONNECT_TIME_REMAINING":                 17,
	"CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL":          18,
	"CHAT_MESSAGE_RECONNECT":                                 19,
	"CHAT_MESSAGE_PLAYER_LEFT":                               20,
	"CHAT_MESSAGE_SAFE_TO_LEAVE":                             21,
	"CHAT_MESSAGE_RUNE_PICKUP":                               22,
	"CHAT_MESSAGE_RUNE_BOTTLE":                               23,
	"CHAT_MESSAGE_INTHEBAG":                                  24,
	"CHAT_MESSAGE_SECRETSHOP":                                25,
	"CHAT_MESSAGE_ITEM_AUTOPURCHASED":                        26,
	"CHAT_MESSAGE_ITEMS_COMBINED":                            27,
	"CHAT_MESSAGE_SUPER_CREEPS":                              28,
	"CHAT_MESSAGE_CANT_USE_ACTION_ITEM":                      29,
	"CHAT_MESSAGE_CANTPAUSE":                                 31,
	"CHAT_MESSAGE_NOPAUSESLEFT":                              32,
	"CHAT_MESSAGE_CANTPAUSEYET":                              33,
	"CHAT_MESSAGE_PAUSED":                                    34,
	"CHAT_MESSAGE_UNPAUSE_COUNTDOWN":                         35,
	"CHAT_MESSAGE_UNPAUSED":                                  36,
	"CHAT_MESSAGE_AUTO_UNPAUSED":                             37,
	"CHAT_MESSAGE_YOUPAUSED":                                 38,
	"CHAT_MESSAGE_CANTUNPAUSETEAM":                           39,
	"CHAT_MESSAGE_VOICE_TEXT_BANNED":                         41,
	"CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME":             42,
	"CHAT_MESSAGE_REPORT_REMINDER":                           43,
	"CHAT_MESSAGE_ECON_ITEM":                                 44,
	"CHAT_MESSAGE_TAUNT":                                     45,
	"CHAT_MESSAGE_RANDOM":                                    46,
	"CHAT_MESSAGE_RD_TURN":                                   47,
	"CHAT_MESSAGE_DROP_RATE_BONUS":                           49,
	"CHAT_MESSAGE_NO_BATTLE_POINTS":                          50,
	"CHAT_MESSAGE_DENIED_AEGIS":                              51,
	"CHAT_MESSAGE_INFORMATIONAL":                             52,
	"CHAT_MESSAGE_AEGIS_STOLEN":                              53,
	"CHAT_MESSAGE_ROSHAN_CANDY":                              54,
	"CHAT_MESSAGE_ITEM_GIFTED":                               55,
	"CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL":                    56,
	"CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED":                   57,
	"CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED":                    58,
	"CHAT_MESSAGE_HOLDOUT_WALL_FINISHED":                     59,
	"CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO":                  62,
	"CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION":          63,
	"CHAT_MESSAGE_DISCONNECT_LIMITED_HERO":                   64,
	"CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION":        65,
	"CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS":               66,
	"CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE":          67,
	"CHAT_MESSAGE_PLAYER_LEFT_AFK":                           73,
	"CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG":         74,
	"CHAT_MESSAGE_PLAYER_ABANDONED":                          75,
	"CHAT_MESSAGE_PLAYER_ABANDONED_AFK":                      76,
	"CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG":    77,
	"CHAT_MESSAGE_WILL_NOT_BE_SCORED":                        78,
	"CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED":                 79,
	"CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK":                80,
	"CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED":         81,
	"CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON":                  82,
	"CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS": 83,
	"CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY":   84,
	"CHAT_MESSAGE_COMPENDIUM_LEVEL":                          85,
	"CHAT_MESSAGE_VICTORY_PREDICTION_STREAK":                 86,
	"CHAT_MESSAGE_ASSASSIN_ANNOUNCE":                         87,
	"CHAT_MESSAGE_ASSASSIN_SUCCESS":                          88,
	"CHAT_MESSAGE_ASSASSIN_DENIED":                           89,
	"CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM":    90,
	"CHAT_MESSAGE_EFFIGY_KILL":                               91,
	"CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW":                92,
	"CHAT_MESSAGE_YEAR_BEAST_KILLED":                         93,
	"CHAT_MESSAGE_PAUSE_COUNTDOWN":                           94,
	"CHAT_MESSAGE_COINS_WAGERED":                             95,
	"CHAT_MESSAGE_HERO_NOMINATED_BAN":                        96,
	"CHAT_MESSAGE_HERO_BANNED":                               97,
	"CHAT_MESSAGE_HERO_BAN_COUNT":                            98,
	"CHAT_MESSAGE_RIVER_PAINTED":                             99,
	"CHAT_MESSAGE_SCAN_USED":                                 100,
	"CHAT_MESSAGE_SHRINE_KILLED":                             101,
	"CHAT_MESSAGE_WAGER_TOKEN_SPENT":                         102,
	"CHAT_MESSAGE_RANK_WAGER":                                103,
	"CHAT_MESSAGE_NEW_PLAYER_REMINDER":                       104,
}

func (x DOTA_CHAT_MESSAGE) Enum() *DOTA_CHAT_MESSAGE {
	p := new(DOTA_CHAT_MESSAGE)
	*p = x
	return p
}
func (x DOTA_CHAT_MESSAGE) String() string {
	return proto.EnumName(DOTA_CHAT_MESSAGE_name, int32(x))
}
func (x *DOTA_CHAT_MESSAGE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_CHAT_MESSAGE_value, data, "DOTA_CHAT_MESSAGE")
	if err != nil {
		return err
	}
	*x = DOTA_CHAT_MESSAGE(value)
	return nil
}
func (DOTA_CHAT_MESSAGE) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{1} }

type DOTA_NO_BATTLE_POINTS_REASONS int32

const (
	DOTA_NO_BATTLE_POINTS_REASONS_NO_BATTLE_POINTS_WRONG_LOBBY_TYPE DOTA_NO_BATTLE_POINTS_REASONS = 1
	DOTA_NO_BATTLE_POINTS_REASONS_NO_BATTLE_POINTS_PRACTICE_BOTS    DOTA_NO_BATTLE_POINTS_REASONS = 2
	DOTA_NO_BATTLE_POINTS_REASONS_NO_BATTLE_POINTS_CHEATS_ENABLED   DOTA_NO_BATTLE_POINTS_REASONS = 3
	DOTA_NO_BATTLE_POINTS_REASONS_NO_BATTLE_POINTS_LOW_PRIORITY     DOTA_NO_BATTLE_POINTS_REASONS = 4
)

var DOTA_NO_BATTLE_POINTS_REASONS_name = map[int32]string{
	1: "NO_BATTLE_POINTS_WRONG_LOBBY_TYPE",
	2: "NO_BATTLE_POINTS_PRACTICE_BOTS",
	3: "NO_BATTLE_POINTS_CHEATS_ENABLED",
	4: "NO_BATTLE_POINTS_LOW_PRIORITY",
}
var DOTA_NO_BATTLE_POINTS_REASONS_value = map[string]int32{
	"NO_BATTLE_POINTS_WRONG_LOBBY_TYPE": 1,
	"NO_BATTLE_POINTS_PRACTICE_BOTS":    2,
	"NO_BATTLE_POINTS_CHEATS_ENABLED":   3,
	"NO_BATTLE_POINTS_LOW_PRIORITY":     4,
}

func (x DOTA_NO_BATTLE_POINTS_REASONS) Enum() *DOTA_NO_BATTLE_POINTS_REASONS {
	p := new(DOTA_NO_BATTLE_POINTS_REASONS)
	*p = x
	return p
}
func (x DOTA_NO_BATTLE_POINTS_REASONS) String() string {
	return proto.EnumName(DOTA_NO_BATTLE_POINTS_REASONS_name, int32(x))
}
func (x *DOTA_NO_BATTLE_POINTS_REASONS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_NO_BATTLE_POINTS_REASONS_value, data, "DOTA_NO_BATTLE_POINTS_REASONS")
	if err != nil {
		return err
	}
	*x = DOTA_NO_BATTLE_POINTS_REASONS(value)
	return nil
}
func (DOTA_NO_BATTLE_POINTS_REASONS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor25, []int{2}
}

type DOTA_CHAT_INFORMATIONAL int32

const (
	DOTA_CHAT_INFORMATIONAL_INFO_COOP_BATTLE_POINTS_RULES           DOTA_CHAT_INFORMATIONAL = 1
	DOTA_CHAT_INFORMATIONAL_INFO_FROSTIVUS_ABANDON_REMINDER         DOTA_CHAT_INFORMATIONAL = 2
	DOTA_CHAT_INFORMATIONAL_INFO_RANKED_REMINDER                    DOTA_CHAT_INFORMATIONAL = 3
	DOTA_CHAT_INFORMATIONAL_INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER DOTA_CHAT_INFORMATIONAL = 4
	DOTA_CHAT_INFORMATIONAL_INFO_CUSTOM_GAME_PENALTY_REMINDER       DOTA_CHAT_INFORMATIONAL = 5
)

var DOTA_CHAT_INFORMATIONAL_name = map[int32]string{
	1: "INFO_COOP_BATTLE_POINTS_RULES",
	2: "INFO_FROSTIVUS_ABANDON_REMINDER",
	3: "INFO_RANKED_REMINDER",
	4: "INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER",
	5: "INFO_CUSTOM_GAME_PENALTY_REMINDER",
}
var DOTA_CHAT_INFORMATIONAL_value = map[string]int32{
	"INFO_COOP_BATTLE_POINTS_RULES":           1,
	"INFO_FROSTIVUS_ABANDON_REMINDER":         2,
	"INFO_RANKED_REMINDER":                    3,
	"INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER": 4,
	"INFO_CUSTOM_GAME_PENALTY_REMINDER":       5,
}

func (x DOTA_CHAT_INFORMATIONAL) Enum() *DOTA_CHAT_INFORMATIONAL {
	p := new(DOTA_CHAT_INFORMATIONAL)
	*p = x
	return p
}
func (x DOTA_CHAT_INFORMATIONAL) String() string {
	return proto.EnumName(DOTA_CHAT_INFORMATIONAL_name, int32(x))
}
func (x *DOTA_CHAT_INFORMATIONAL) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_CHAT_INFORMATIONAL_value, data, "DOTA_CHAT_INFORMATIONAL")
	if err != nil {
		return err
	}
	*x = DOTA_CHAT_INFORMATIONAL(value)
	return nil
}
func (DOTA_CHAT_INFORMATIONAL) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{3} }

type DOTA_ABILITY_PING_TYPE int32

const (
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_READY      DOTA_ABILITY_PING_TYPE = 1
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_MANA       DOTA_ABILITY_PING_TYPE = 2
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_COOLDOWN   DOTA_ABILITY_PING_TYPE = 3
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_ENEMY      DOTA_ABILITY_PING_TYPE = 4
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_UNLEARNED  DOTA_ABILITY_PING_TYPE = 5
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_INBACKPACK DOTA_ABILITY_PING_TYPE = 6
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_INSTASH    DOTA_ABILITY_PING_TYPE = 7
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_ONCOURIER  DOTA_ABILITY_PING_TYPE = 8
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_ALLY       DOTA_ABILITY_PING_TYPE = 9
)

var DOTA_ABILITY_PING_TYPE_name = map[int32]string{
	1: "ABILITY_PING_READY",
	2: "ABILITY_PING_MANA",
	3: "ABILITY_PING_COOLDOWN",
	4: "ABILITY_PING_ENEMY",
	5: "ABILITY_PING_UNLEARNED",
	6: "ABILITY_PING_INBACKPACK",
	7: "ABILITY_PING_INSTASH",
	8: "ABILITY_PING_ONCOURIER",
	9: "ABILITY_PING_ALLY",
}
var DOTA_ABILITY_PING_TYPE_value = map[string]int32{
	"ABILITY_PING_READY":      1,
	"ABILITY_PING_MANA":       2,
	"ABILITY_PING_COOLDOWN":   3,
	"ABILITY_PING_ENEMY":      4,
	"ABILITY_PING_UNLEARNED":  5,
	"ABILITY_PING_INBACKPACK": 6,
	"ABILITY_PING_INSTASH":    7,
	"ABILITY_PING_ONCOURIER":  8,
	"ABILITY_PING_ALLY":       9,
}

func (x DOTA_ABILITY_PING_TYPE) Enum() *DOTA_ABILITY_PING_TYPE {
	p := new(DOTA_ABILITY_PING_TYPE)
	*p = x
	return p
}
func (x DOTA_ABILITY_PING_TYPE) String() string {
	return proto.EnumName(DOTA_ABILITY_PING_TYPE_name, int32(x))
}
func (x *DOTA_ABILITY_PING_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_ABILITY_PING_TYPE_value, data, "DOTA_ABILITY_PING_TYPE")
	if err != nil {
		return err
	}
	*x = DOTA_ABILITY_PING_TYPE(value)
	return nil
}
func (DOTA_ABILITY_PING_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{4} }

type DOTA_REPLAY_STATE_EVENT int32

const (
	DOTA_REPLAY_STATE_EVENT_DOTA_REPLAY_STATE_EVENT_GAME_START    DOTA_REPLAY_STATE_EVENT = 1
	DOTA_REPLAY_STATE_EVENT_DOTA_REPLAY_STATE_EVENT_STARTING_HORN DOTA_REPLAY_STATE_EVENT = 2
	DOTA_REPLAY_STATE_EVENT_DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD   DOTA_REPLAY_STATE_EVENT = 3
	DOTA_REPLAY_STATE_EVENT_DOTA_REPLAY_STATE_EVENT_SHOWCASE      DOTA_REPLAY_STATE_EVENT = 4
)

var DOTA_REPLAY_STATE_EVENT_name = map[int32]string{
	1: "DOTA_REPLAY_STATE_EVENT_GAME_START",
	2: "DOTA_REPLAY_STATE_EVENT_STARTING_HORN",
	3: "DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD",
	4: "DOTA_REPLAY_STATE_EVENT_SHOWCASE",
}
var DOTA_REPLAY_STATE_EVENT_value = map[string]int32{
	"DOTA_REPLAY_STATE_EVENT_GAME_START":    1,
	"DOTA_REPLAY_STATE_EVENT_STARTING_HORN": 2,
	"DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD":   3,
	"DOTA_REPLAY_STATE_EVENT_SHOWCASE":      4,
}

func (x DOTA_REPLAY_STATE_EVENT) Enum() *DOTA_REPLAY_STATE_EVENT {
	p := new(DOTA_REPLAY_STATE_EVENT)
	*p = x
	return p
}
func (x DOTA_REPLAY_STATE_EVENT) String() string {
	return proto.EnumName(DOTA_REPLAY_STATE_EVENT_name, int32(x))
}
func (x *DOTA_REPLAY_STATE_EVENT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_REPLAY_STATE_EVENT_value, data, "DOTA_REPLAY_STATE_EVENT")
	if err != nil {
		return err
	}
	*x = DOTA_REPLAY_STATE_EVENT(value)
	return nil
}
func (DOTA_REPLAY_STATE_EVENT) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{5} }

type EDotaEntityMessages int32

const (
	EDotaEntityMessages_DOTA_UNIT_SPEECH                  EDotaEntityMessages = 0
	EDotaEntityMessages_DOTA_UNIT_SPEECH_MUTE             EDotaEntityMessages = 1
	EDotaEntityMessages_DOTA_UNIT_ADD_GESTURE             EDotaEntityMessages = 2
	EDotaEntityMessages_DOTA_UNIT_REMOVE_GESTURE          EDotaEntityMessages = 3
	EDotaEntityMessages_DOTA_UNIT_REMOVE_ALL_GESTURES     EDotaEntityMessages = 4
	EDotaEntityMessages_DOTA_UNIT_FADE_GESTURE            EDotaEntityMessages = 6
	EDotaEntityMessages_DOTA_UNIT_SPEECH_CLIENTSIDE_RULES EDotaEntityMessages = 7
)

var EDotaEntityMessages_name = map[int32]string{
	0: "DOTA_UNIT_SPEECH",
	1: "DOTA_UNIT_SPEECH_MUTE",
	2: "DOTA_UNIT_ADD_GESTURE",
	3: "DOTA_UNIT_REMOVE_GESTURE",
	4: "DOTA_UNIT_REMOVE_ALL_GESTURES",
	6: "DOTA_UNIT_FADE_GESTURE",
	7: "DOTA_UNIT_SPEECH_CLIENTSIDE_RULES",
}
var EDotaEntityMessages_value = map[string]int32{
	"DOTA_UNIT_SPEECH":                  0,
	"DOTA_UNIT_SPEECH_MUTE":             1,
	"DOTA_UNIT_ADD_GESTURE":             2,
	"DOTA_UNIT_REMOVE_GESTURE":          3,
	"DOTA_UNIT_REMOVE_ALL_GESTURES":     4,
	"DOTA_UNIT_FADE_GESTURE":            6,
	"DOTA_UNIT_SPEECH_CLIENTSIDE_RULES": 7,
}

func (x EDotaEntityMessages) Enum() *EDotaEntityMessages {
	p := new(EDotaEntityMessages)
	*p = x
	return p
}
func (x EDotaEntityMessages) String() string {
	return proto.EnumName(EDotaEntityMessages_name, int32(x))
}
func (x *EDotaEntityMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDotaEntityMessages_value, data, "EDotaEntityMessages")
	if err != nil {
		return err
	}
	*x = EDotaEntityMessages(value)
	return nil
}
func (EDotaEntityMessages) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{6} }

type DOTA_OVERHEAD_ALERT int32

const (
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_GOLD                DOTA_OVERHEAD_ALERT = 0
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_DENY                DOTA_OVERHEAD_ALERT = 1
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_CRITICAL            DOTA_OVERHEAD_ALERT = 2
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_XP                  DOTA_OVERHEAD_ALERT = 3
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_BONUS_SPELL_DAMAGE  DOTA_OVERHEAD_ALERT = 4
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_MISS                DOTA_OVERHEAD_ALERT = 5
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_DAMAGE              DOTA_OVERHEAD_ALERT = 6
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_EVADE               DOTA_OVERHEAD_ALERT = 7
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_BLOCK               DOTA_OVERHEAD_ALERT = 8
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_BONUS_POISON_DAMAGE DOTA_OVERHEAD_ALERT = 9
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_HEAL                DOTA_OVERHEAD_ALERT = 10
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_MANA_ADD            DOTA_OVERHEAD_ALERT = 11
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_MANA_LOSS           DOTA_OVERHEAD_ALERT = 12
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_LAST_HIT_EARLY      DOTA_OVERHEAD_ALERT = 13
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_LAST_HIT_CLOSE      DOTA_OVERHEAD_ALERT = 14
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_LAST_HIT_MISS       DOTA_OVERHEAD_ALERT = 15
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_MAGICAL_BLOCK       DOTA_OVERHEAD_ALERT = 16
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_INCOMING_DAMAGE     DOTA_OVERHEAD_ALERT = 17
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_OUTGOING_DAMAGE     DOTA_OVERHEAD_ALERT = 18
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_DISABLE_RESIST      DOTA_OVERHEAD_ALERT = 19
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_DEATH               DOTA_OVERHEAD_ALERT = 20
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_BLOCKED             DOTA_OVERHEAD_ALERT = 21
)

var DOTA_OVERHEAD_ALERT_name = map[int32]string{
	0:  "OVERHEAD_ALERT_GOLD",
	1:  "OVERHEAD_ALERT_DENY",
	2:  "OVERHEAD_ALERT_CRITICAL",
	3:  "OVERHEAD_ALERT_XP",
	4:  "OVERHEAD_ALERT_BONUS_SPELL_DAMAGE",
	5:  "OVERHEAD_ALERT_MISS",
	6:  "OVERHEAD_ALERT_DAMAGE",
	7:  "OVERHEAD_ALERT_EVADE",
	8:  "OVERHEAD_ALERT_BLOCK",
	9:  "OVERHEAD_ALERT_BONUS_POISON_DAMAGE",
	10: "OVERHEAD_ALERT_HEAL",
	11: "OVERHEAD_ALERT_MANA_ADD",
	12: "OVERHEAD_ALERT_MANA_LOSS",
	13: "OVERHEAD_ALERT_LAST_HIT_EARLY",
	14: "OVERHEAD_ALERT_LAST_HIT_CLOSE",
	15: "OVERHEAD_ALERT_LAST_HIT_MISS",
	16: "OVERHEAD_ALERT_MAGICAL_BLOCK",
	17: "OVERHEAD_ALERT_INCOMING_DAMAGE",
	18: "OVERHEAD_ALERT_OUTGOING_DAMAGE",
	19: "OVERHEAD_ALERT_DISABLE_RESIST",
	20: "OVERHEAD_ALERT_DEATH",
	21: "OVERHEAD_ALERT_BLOCKED",
}
var DOTA_OVERHEAD_ALERT_value = map[string]int32{
	"OVERHEAD_ALERT_GOLD":                0,
	"OVERHEAD_ALERT_DENY":                1,
	"OVERHEAD_ALERT_CRITICAL":            2,
	"OVERHEAD_ALERT_XP":                  3,
	"OVERHEAD_ALERT_BONUS_SPELL_DAMAGE":  4,
	"OVERHEAD_ALERT_MISS":                5,
	"OVERHEAD_ALERT_DAMAGE":              6,
	"OVERHEAD_ALERT_EVADE":               7,
	"OVERHEAD_ALERT_BLOCK":               8,
	"OVERHEAD_ALERT_BONUS_POISON_DAMAGE": 9,
	"OVERHEAD_ALERT_HEAL":                10,
	"OVERHEAD_ALERT_MANA_ADD":            11,
	"OVERHEAD_ALERT_MANA_LOSS":           12,
	"OVERHEAD_ALERT_LAST_HIT_EARLY":      13,
	"OVERHEAD_ALERT_LAST_HIT_CLOSE":      14,
	"OVERHEAD_ALERT_LAST_HIT_MISS":       15,
	"OVERHEAD_ALERT_MAGICAL_BLOCK":       16,
	"OVERHEAD_ALERT_INCOMING_DAMAGE":     17,
	"OVERHEAD_ALERT_OUTGOING_DAMAGE":     18,
	"OVERHEAD_ALERT_DISABLE_RESIST":      19,
	"OVERHEAD_ALERT_DEATH":               20,
	"OVERHEAD_ALERT_BLOCKED":             21,
}

func (x DOTA_OVERHEAD_ALERT) Enum() *DOTA_OVERHEAD_ALERT {
	p := new(DOTA_OVERHEAD_ALERT)
	*p = x
	return p
}
func (x DOTA_OVERHEAD_ALERT) String() string {
	return proto.EnumName(DOTA_OVERHEAD_ALERT_name, int32(x))
}
func (x *DOTA_OVERHEAD_ALERT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_OVERHEAD_ALERT_value, data, "DOTA_OVERHEAD_ALERT")
	if err != nil {
		return err
	}
	*x = DOTA_OVERHEAD_ALERT(value)
	return nil
}
func (DOTA_OVERHEAD_ALERT) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{7} }

type DOTA_ROSHAN_PHASE int32

const (
	DOTA_ROSHAN_PHASE_k_SRSP_ROSHAN_ALIVE         DOTA_ROSHAN_PHASE = 0
	DOTA_ROSHAN_PHASE_k_SRSP_ROSHAN_BASE_TIMER    DOTA_ROSHAN_PHASE = 1
	DOTA_ROSHAN_PHASE_k_SRSP_ROSHAN_VISIBLE_TIMER DOTA_ROSHAN_PHASE = 2
)

var DOTA_ROSHAN_PHASE_name = map[int32]string{
	0: "k_SRSP_ROSHAN_ALIVE",
	1: "k_SRSP_ROSHAN_BASE_TIMER",
	2: "k_SRSP_ROSHAN_VISIBLE_TIMER",
}
var DOTA_ROSHAN_PHASE_value = map[string]int32{
	"k_SRSP_ROSHAN_ALIVE":         0,
	"k_SRSP_ROSHAN_BASE_TIMER":    1,
	"k_SRSP_ROSHAN_VISIBLE_TIMER": 2,
}

func (x DOTA_ROSHAN_PHASE) Enum() *DOTA_ROSHAN_PHASE {
	p := new(DOTA_ROSHAN_PHASE)
	*p = x
	return p
}
func (x DOTA_ROSHAN_PHASE) String() string {
	return proto.EnumName(DOTA_ROSHAN_PHASE_name, int32(x))
}
func (x *DOTA_ROSHAN_PHASE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_ROSHAN_PHASE_value, data, "DOTA_ROSHAN_PHASE")
	if err != nil {
		return err
	}
	*x = DOTA_ROSHAN_PHASE(value)
	return nil
}
func (DOTA_ROSHAN_PHASE) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{8} }

type DOTA_POSITION_CATEGORY int32

const (
	DOTA_POSITION_CATEGORY_DOTA_POSITION_NONE                DOTA_POSITION_CATEGORY = 0
	DOTA_POSITION_CATEGORY_DOTA_POSITION_BOTTOM_LANE         DOTA_POSITION_CATEGORY = 1
	DOTA_POSITION_CATEGORY_DOTA_POSITION_MID_LANE            DOTA_POSITION_CATEGORY = 2
	DOTA_POSITION_CATEGORY_DOTA_POSITION_TOP_LANE            DOTA_POSITION_CATEGORY = 3
	DOTA_POSITION_CATEGORY_DOTA_POSITION_RADIANT_JUNGLE      DOTA_POSITION_CATEGORY = 4
	DOTA_POSITION_CATEGORY_DOTA_POSITION_DIRE_JUNGLE         DOTA_POSITION_CATEGORY = 5
	DOTA_POSITION_CATEGORY_DOTA_POSITION_RADIANT_ANCIENTS    DOTA_POSITION_CATEGORY = 6
	DOTA_POSITION_CATEGORY_DOTA_POSITION_DIRE_ANCIENTS       DOTA_POSITION_CATEGORY = 7
	DOTA_POSITION_CATEGORY_DOTA_POSITION_RADIANT_SECRET_SHOP DOTA_POSITION_CATEGORY = 8
	DOTA_POSITION_CATEGORY_DOTA_POSITION_DIRE_SECRET_SHOP    DOTA_POSITION_CATEGORY = 9
	DOTA_POSITION_CATEGORY_DOTA_POSITION_RIVER               DOTA_POSITION_CATEGORY = 10
	DOTA_POSITION_CATEGORY_DOTA_POSITION_ROSHAN_PIT          DOTA_POSITION_CATEGORY = 11
	DOTA_POSITION_CATEGORY_DOTA_POSITION_RADIANT_BASE        DOTA_POSITION_CATEGORY = 12
	DOTA_POSITION_CATEGORY_DOTA_POSITION_DIRE_BASE           DOTA_POSITION_CATEGORY = 13
	DOTA_POSITION_CATEGORY_DOTA_POSITION_FOUNTAIN            DOTA_POSITION_CATEGORY = 14
	DOTA_POSITION_CATEGORY_DOTA_POSITION_OTHER               DOTA_POSITION_CATEGORY = 15
)

var DOTA_POSITION_CATEGORY_name = map[int32]string{
	0:  "DOTA_POSITION_NONE",
	1:  "DOTA_POSITION_BOTTOM_LANE",
	2:  "DOTA_POSITION_MID_LANE",
	3:  "DOTA_POSITION_TOP_LANE",
	4:  "DOTA_POSITION_RADIANT_JUNGLE",
	5:  "DOTA_POSITION_DIRE_JUNGLE",
	6:  "DOTA_POSITION_RADIANT_ANCIENTS",
	7:  "DOTA_POSITION_DIRE_ANCIENTS",
	8:  "DOTA_POSITION_RADIANT_SECRET_SHOP",
	9:  "DOTA_POSITION_DIRE_SECRET_SHOP",
	10: "DOTA_POSITION_RIVER",
	11: "DOTA_POSITION_ROSHAN_PIT",
	12: "DOTA_POSITION_RADIANT_BASE",
	13: "DOTA_POSITION_DIRE_BASE",
	14: "DOTA_POSITION_FOUNTAIN",
	15: "DOTA_POSITION_OTHER",
}
var DOTA_POSITION_CATEGORY_value = map[string]int32{
	"DOTA_POSITION_NONE":                0,
	"DOTA_POSITION_BOTTOM_LANE":         1,
	"DOTA_POSITION_MID_LANE":            2,
	"DOTA_POSITION_TOP_LANE":            3,
	"DOTA_POSITION_RADIANT_JUNGLE":      4,
	"DOTA_POSITION_DIRE_JUNGLE":         5,
	"DOTA_POSITION_RADIANT_ANCIENTS":    6,
	"DOTA_POSITION_DIRE_ANCIENTS":       7,
	"DOTA_POSITION_RADIANT_SECRET_SHOP": 8,
	"DOTA_POSITION_DIRE_SECRET_SHOP":    9,
	"DOTA_POSITION_RIVER":               10,
	"DOTA_POSITION_ROSHAN_PIT":          11,
	"DOTA_POSITION_RADIANT_BASE":        12,
	"DOTA_POSITION_DIRE_BASE":           13,
	"DOTA_POSITION_FOUNTAIN":            14,
	"DOTA_POSITION_OTHER":               15,
}

func (x DOTA_POSITION_CATEGORY) Enum() *DOTA_POSITION_CATEGORY {
	p := new(DOTA_POSITION_CATEGORY)
	*p = x
	return p
}
func (x DOTA_POSITION_CATEGORY) String() string {
	return proto.EnumName(DOTA_POSITION_CATEGORY_name, int32(x))
}
func (x *DOTA_POSITION_CATEGORY) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_POSITION_CATEGORY_value, data, "DOTA_POSITION_CATEGORY")
	if err != nil {
		return err
	}
	*x = DOTA_POSITION_CATEGORY(value)
	return nil
}
func (DOTA_POSITION_CATEGORY) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{9} }

type DOTA_ABILITY_TARGET_TYPE int32

const (
	DOTA_ABILITY_TARGET_TYPE_DOTA_ABILITY_TARGET_NONE        DOTA_ABILITY_TARGET_TYPE = 0
	DOTA_ABILITY_TARGET_TYPE_DOTA_ABILITY_TARGET_SELF        DOTA_ABILITY_TARGET_TYPE = 1
	DOTA_ABILITY_TARGET_TYPE_DOTA_ABILITY_TARGET_ALLY_HERO   DOTA_ABILITY_TARGET_TYPE = 2
	DOTA_ABILITY_TARGET_TYPE_DOTA_ABILITY_TARGET_ALLY_CREEP  DOTA_ABILITY_TARGET_TYPE = 3
	DOTA_ABILITY_TARGET_TYPE_DOTA_ABILITY_TARGET_ENEMY_HERO  DOTA_ABILITY_TARGET_TYPE = 4
	DOTA_ABILITY_TARGET_TYPE_DOTA_ABILITY_TARGET_ENEMY_CREEP DOTA_ABILITY_TARGET_TYPE = 5
)

var DOTA_ABILITY_TARGET_TYPE_name = map[int32]string{
	0: "DOTA_ABILITY_TARGET_NONE",
	1: "DOTA_ABILITY_TARGET_SELF",
	2: "DOTA_ABILITY_TARGET_ALLY_HERO",
	3: "DOTA_ABILITY_TARGET_ALLY_CREEP",
	4: "DOTA_ABILITY_TARGET_ENEMY_HERO",
	5: "DOTA_ABILITY_TARGET_ENEMY_CREEP",
}
var DOTA_ABILITY_TARGET_TYPE_value = map[string]int32{
	"DOTA_ABILITY_TARGET_NONE":        0,
	"DOTA_ABILITY_TARGET_SELF":        1,
	"DOTA_ABILITY_TARGET_ALLY_HERO":   2,
	"DOTA_ABILITY_TARGET_ALLY_CREEP":  3,
	"DOTA_ABILITY_TARGET_ENEMY_HERO":  4,
	"DOTA_ABILITY_TARGET_ENEMY_CREEP": 5,
}

func (x DOTA_ABILITY_TARGET_TYPE) Enum() *DOTA_ABILITY_TARGET_TYPE {
	p := new(DOTA_ABILITY_TARGET_TYPE)
	*p = x
	return p
}
func (x DOTA_ABILITY_TARGET_TYPE) String() string {
	return proto.EnumName(DOTA_ABILITY_TARGET_TYPE_name, int32(x))
}
func (x *DOTA_ABILITY_TARGET_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_ABILITY_TARGET_TYPE_value, data, "DOTA_ABILITY_TARGET_TYPE")
	if err != nil {
		return err
	}
	*x = DOTA_ABILITY_TARGET_TYPE(value)
	return nil
}
func (DOTA_ABILITY_TARGET_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{10} }

type EHeroStatType int32

const (
	EHeroStatType_k_EHeroStatType_None                               EHeroStatType = 0
	EHeroStatType_k_EHeroStatType_AxeTotalDamage                     EHeroStatType = 2000
	EHeroStatType_k_EHeroStatType_BattleHungerDamage                 EHeroStatType = 2001
	EHeroStatType_k_EHeroStatType_CounterHelixDamage                 EHeroStatType = 2002
	EHeroStatType_k_EHeroStatType_CullingBladeDamage                 EHeroStatType = 2003
	EHeroStatType_k_EHeroStatType_BerserkersCallCastCount            EHeroStatType = 2004
	EHeroStatType_k_EHeroStatType_BerserkersCallHeroesHitAverage     EHeroStatType = 2005
	EHeroStatType_k_EHeroStatType_BerserkersCallOtherUnitsHit        EHeroStatType = 2006
	EHeroStatType_k_EHeroStatType_BerserkersCallHeroAttacksTaken     EHeroStatType = 2007
	EHeroStatType_k_EHeroStatType_BerserkersCallOtherAttacksTaken    EHeroStatType = 2008
	EHeroStatType_k_EHeroStatType_BattleHungerCastCount              EHeroStatType = 2009
	EHeroStatType_k_EHeroStatType_BattleHungerPotentialDuration      EHeroStatType = 2010
	EHeroStatType_k_EHeroStatType_BattleHungerAverageDuration        EHeroStatType = 2011
	EHeroStatType_k_EHeroStatType_CounterHelixProcCount              EHeroStatType = 2012
	EHeroStatType_k_EHeroStatType_CounterHelixHeroProcCount          EHeroStatType = 2013
	EHeroStatType_k_EHeroStatType_CounterHelixHeroesHitAverage       EHeroStatType = 2014
	EHeroStatType_k_EHeroStatType_CounterHelixOtherUnitsHitCount     EHeroStatType = 2015
	EHeroStatType_k_EHeroStatType_CullingBladeCastCount              EHeroStatType = 2016
	EHeroStatType_k_EHeroStatType_CullingBladeKillCount              EHeroStatType = 2017
	EHeroStatType_k_EHeroStatType_CullingBladeAverageHealthCulled    EHeroStatType = 2018
	EHeroStatType_k_EHeroStatType_CullingBladeAverageDamageAvailable EHeroStatType = 2019
	EHeroStatType_k_EHeroStatType_CullingBladeHeroBuffAverage        EHeroStatType = 2020
)

var EHeroStatType_name = map[int32]string{
	0:    "k_EHeroStatType_None",
	2000: "k_EHeroStatType_AxeTotalDamage",
	2001: "k_EHeroStatType_BattleHungerDamage",
	2002: "k_EHeroStatType_CounterHelixDamage",
	2003: "k_EHeroStatType_CullingBladeDamage",
	2004: "k_EHeroStatType_BerserkersCallCastCount",
	2005: "k_EHeroStatType_BerserkersCallHeroesHitAverage",
	2006: "k_EHeroStatType_BerserkersCallOtherUnitsHit",
	2007: "k_EHeroStatType_BerserkersCallHeroAttacksTaken",
	2008: "k_EHeroStatType_BerserkersCallOtherAttacksTaken",
	2009: "k_EHeroStatType_BattleHungerCastCount",
	2010: "k_EHeroStatType_BattleHungerPotentialDuration",
	2011: "k_EHeroStatType_BattleHungerAverageDuration",
	2012: "k_EHeroStatType_CounterHelixProcCount",
	2013: "k_EHeroStatType_CounterHelixHeroProcCount",
	2014: "k_EHeroStatType_CounterHelixHeroesHitAverage",
	2015: "k_EHeroStatType_CounterHelixOtherUnitsHitCount",
	2016: "k_EHeroStatType_CullingBladeCastCount",
	2017: "k_EHeroStatType_CullingBladeKillCount",
	2018: "k_EHeroStatType_CullingBladeAverageHealthCulled",
	2019: "k_EHeroStatType_CullingBladeAverageDamageAvailable",
	2020: "k_EHeroStatType_CullingBladeHeroBuffAverage",
}
var EHeroStatType_value = map[string]int32{
	"k_EHeroStatType_None":                               0,
	"k_EHeroStatType_AxeTotalDamage":                     2000,
	"k_EHeroStatType_BattleHungerDamage":                 2001,
	"k_EHeroStatType_CounterHelixDamage":                 2002,
	"k_EHeroStatType_CullingBladeDamage":                 2003,
	"k_EHeroStatType_BerserkersCallCastCount":            2004,
	"k_EHeroStatType_BerserkersCallHeroesHitAverage":     2005,
	"k_EHeroStatType_BerserkersCallOtherUnitsHit":        2006,
	"k_EHeroStatType_BerserkersCallHeroAttacksTaken":     2007,
	"k_EHeroStatType_BerserkersCallOtherAttacksTaken":    2008,
	"k_EHeroStatType_BattleHungerCastCount":              2009,
	"k_EHeroStatType_BattleHungerPotentialDuration":      2010,
	"k_EHeroStatType_BattleHungerAverageDuration":        2011,
	"k_EHeroStatType_CounterHelixProcCount":              2012,
	"k_EHeroStatType_CounterHelixHeroProcCount":          2013,
	"k_EHeroStatType_CounterHelixHeroesHitAverage":       2014,
	"k_EHeroStatType_CounterHelixOtherUnitsHitCount":     2015,
	"k_EHeroStatType_CullingBladeCastCount":              2016,
	"k_EHeroStatType_CullingBladeKillCount":              2017,
	"k_EHeroStatType_CullingBladeAverageHealthCulled":    2018,
	"k_EHeroStatType_CullingBladeAverageDamageAvailable": 2019,
	"k_EHeroStatType_CullingBladeHeroBuffAverage":        2020,
}

func (x EHeroStatType) Enum() *EHeroStatType {
	p := new(EHeroStatType)
	*p = x
	return p
}
func (x EHeroStatType) String() string {
	return proto.EnumName(EHeroStatType_name, int32(x))
}
func (x *EHeroStatType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EHeroStatType_value, data, "EHeroStatType")
	if err != nil {
		return err
	}
	*x = EHeroStatType(value)
	return nil
}
func (EHeroStatType) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{11} }

type EPlayerVoiceListenState int32

const (
	EPlayerVoiceListenState_kPVLS_None                           EPlayerVoiceListenState = 0
	EPlayerVoiceListenState_kPVLS_DeniedChatBanned               EPlayerVoiceListenState = 1
	EPlayerVoiceListenState_kPVLS_DeniedPartner                  EPlayerVoiceListenState = 2
	EPlayerVoiceListenState_kPVLS_DeniedHLTVTalkerNotSpectator   EPlayerVoiceListenState = 3
	EPlayerVoiceListenState_kPVLS_DeniedHLTVNoTalkerPlayerID     EPlayerVoiceListenState = 4
	EPlayerVoiceListenState_kPVLS_DeniedHLTVTalkerNotBroadcaster EPlayerVoiceListenState = 5
	EPlayerVoiceListenState_kPVLS_DeniedTeamSpectator            EPlayerVoiceListenState = 6
	EPlayerVoiceListenState_kPVLS_DeniedStudent                  EPlayerVoiceListenState = 8
	EPlayerVoiceListenState_kPVLS_Denied                         EPlayerVoiceListenState = 64
	EPlayerVoiceListenState_kPVLS_AllowHLTVTalkerIsBroadcaster   EPlayerVoiceListenState = 65
	EPlayerVoiceListenState_kPVLS_AllowCoBroadcaster             EPlayerVoiceListenState = 66
	EPlayerVoiceListenState_kPVLS_AllowAllChat                   EPlayerVoiceListenState = 67
	EPlayerVoiceListenState_kPVLS_AllowStudentToCoach            EPlayerVoiceListenState = 68
	EPlayerVoiceListenState_kPVLS_AllowFellowStudent             EPlayerVoiceListenState = 69
	EPlayerVoiceListenState_kPVLS_AllowTalkerIsCoach             EPlayerVoiceListenState = 70
	EPlayerVoiceListenState_kPVLS_AllowCoachHearTeam             EPlayerVoiceListenState = 71
	EPlayerVoiceListenState_kPVLS_AllowSameTeam                  EPlayerVoiceListenState = 72
	EPlayerVoiceListenState_kPVLS_AllowShowcase                  EPlayerVoiceListenState = 73
)

var EPlayerVoiceListenState_name = map[int32]string{
	0:  "kPVLS_None",
	1:  "kPVLS_DeniedChatBanned",
	2:  "kPVLS_DeniedPartner",
	3:  "kPVLS_DeniedHLTVTalkerNotSpectator",
	4:  "kPVLS_DeniedHLTVNoTalkerPlayerID",
	5:  "kPVLS_DeniedHLTVTalkerNotBroadcaster",
	6:  "kPVLS_DeniedTeamSpectator",
	8:  "kPVLS_DeniedStudent",
	64: "kPVLS_Denied",
	65: "kPVLS_AllowHLTVTalkerIsBroadcaster",
	66: "kPVLS_AllowCoBroadcaster",
	67: "kPVLS_AllowAllChat",
	68: "kPVLS_AllowStudentToCoach",
	69: "kPVLS_AllowFellowStudent",
	70: "kPVLS_AllowTalkerIsCoach",
	71: "kPVLS_AllowCoachHearTeam",
	72: "kPVLS_AllowSameTeam",
	73: "kPVLS_AllowShowcase",
}
var EPlayerVoiceListenState_value = map[string]int32{
	"kPVLS_None":                           0,
	"kPVLS_DeniedChatBanned":               1,
	"kPVLS_DeniedPartner":                  2,
	"kPVLS_DeniedHLTVTalkerNotSpectator":   3,
	"kPVLS_DeniedHLTVNoTalkerPlayerID":     4,
	"kPVLS_DeniedHLTVTalkerNotBroadcaster": 5,
	"kPVLS_DeniedTeamSpectator":            6,
	"kPVLS_DeniedStudent":                  8,
	"kPVLS_Denied":                         64,
	"kPVLS_AllowHLTVTalkerIsBroadcaster":   65,
	"kPVLS_AllowCoBroadcaster":             66,
	"kPVLS_AllowAllChat":                   67,
	"kPVLS_AllowStudentToCoach":            68,
	"kPVLS_AllowFellowStudent":             69,
	"kPVLS_AllowTalkerIsCoach":             70,
	"kPVLS_AllowCoachHearTeam":             71,
	"kPVLS_AllowSameTeam":                  72,
	"kPVLS_AllowShowcase":                  73,
}

func (x EPlayerVoiceListenState) Enum() *EPlayerVoiceListenState {
	p := new(EPlayerVoiceListenState)
	*p = x
	return p
}
func (x EPlayerVoiceListenState) String() string {
	return proto.EnumName(EPlayerVoiceListenState_name, int32(x))
}
func (x *EPlayerVoiceListenState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EPlayerVoiceListenState_value, data, "EPlayerVoiceListenState")
	if err != nil {
		return err
	}
	*x = EPlayerVoiceListenState(value)
	return nil
}
func (EPlayerVoiceListenState) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{12} }

type EProjectionEvent int32

const (
	EProjectionEvent_ePE_FirstBlood         EProjectionEvent = 0
	EProjectionEvent_ePE_Killstreak_godlike EProjectionEvent = 1
)

var EProjectionEvent_name = map[int32]string{
	0: "ePE_FirstBlood",
	1: "ePE_Killstreak_godlike",
}
var EProjectionEvent_value = map[string]int32{
	"ePE_FirstBlood":         0,
	"ePE_Killstreak_godlike": 1,
}

func (x EProjectionEvent) Enum() *EProjectionEvent {
	p := new(EProjectionEvent)
	*p = x
	return p
}
func (x EProjectionEvent) String() string {
	return proto.EnumName(EProjectionEvent_name, int32(x))
}
func (x *EProjectionEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EProjectionEvent_value, data, "EProjectionEvent")
	if err != nil {
		return err
	}
	*x = EProjectionEvent(value)
	return nil
}
func (EProjectionEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptor25, []int{13} }

type CDOTAUserMsg_PredictionResult_Prediction_EResult int32

const (
	CDOTAUserMsg_PredictionResult_Prediction_k_eResult_ItemGranted CDOTAUserMsg_PredictionResult_Prediction_EResult = 1
	CDOTAUserMsg_PredictionResult_Prediction_k_eResult_Destroyed   CDOTAUserMsg_PredictionResult_Prediction_EResult = 2
)

var CDOTAUserMsg_PredictionResult_Prediction_EResult_name = map[int32]string{
	1: "k_eResult_ItemGranted",
	2: "k_eResult_Destroyed",
}
var CDOTAUserMsg_PredictionResult_Prediction_EResult_value = map[string]int32{
	"k_eResult_ItemGranted": 1,
	"k_eResult_Destroyed":   2,
}

func (x CDOTAUserMsg_PredictionResult_Prediction_EResult) Enum() *CDOTAUserMsg_PredictionResult_Prediction_EResult {
	p := new(CDOTAUserMsg_PredictionResult_Prediction_EResult)
	*p = x
	return p
}
func (x CDOTAUserMsg_PredictionResult_Prediction_EResult) String() string {
	return proto.EnumName(CDOTAUserMsg_PredictionResult_Prediction_EResult_name, int32(x))
}
func (x *CDOTAUserMsg_PredictionResult_Prediction_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CDOTAUserMsg_PredictionResult_Prediction_EResult_value, data, "CDOTAUserMsg_PredictionResult_Prediction_EResult")
	if err != nil {
		return err
	}
	*x = CDOTAUserMsg_PredictionResult_Prediction_EResult(value)
	return nil
}
func (CDOTAUserMsg_PredictionResult_Prediction_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor25, []int{34, 0, 0}
}

type CDOTAResponseQuerySerialized_Fact_ValueType int32

const (
	CDOTAResponseQuerySerialized_Fact_NUMERIC CDOTAResponseQuerySerialized_Fact_ValueType = 1
	CDOTAResponseQuerySerialized_Fact_STRING  CDOTAResponseQuerySerialized_Fact_ValueType = 2
)

var CDOTAResponseQuerySerialized_Fact_ValueType_name = map[int32]string{
	1: "NUMERIC",
	2: "STRING",
}
var CDOTAResponseQuerySerialized_Fact_ValueType_value = map[string]int32{
	"NUMERIC": 1,
	"STRING":  2,
}

func (x CDOTAResponseQuerySerialized_Fact_ValueType) Enum() *CDOTAResponseQuerySerialized_Fact_ValueType {
	p := new(CDOTAResponseQuerySerialized_Fact_ValueType)
	*p = x
	return p
}
func (x CDOTAResponseQuerySerialized_Fact_ValueType) String() string {
	return proto.EnumName(CDOTAResponseQuerySerialized_Fact_ValueType_name, int32(x))
}
func (x *CDOTAResponseQuerySerialized_Fact_ValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CDOTAResponseQuerySerialized_Fact_ValueType_value, data, "CDOTAResponseQuerySerialized_Fact_ValueType")
	if err != nil {
		return err
	}
	*x = CDOTAResponseQuerySerialized_Fact_ValueType(value)
	return nil
}
func (CDOTAResponseQuerySerialized_Fact_ValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor25, []int{35, 0, 0}
}

type CDOTAUserMsg_AIDebugLine struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_AIDebugLine) Reset()                    { *m = CDOTAUserMsg_AIDebugLine{} }
func (m *CDOTAUserMsg_AIDebugLine) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AIDebugLine) ProtoMessage()               {}
func (*CDOTAUserMsg_AIDebugLine) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{0} }

func (m *CDOTAUserMsg_AIDebugLine) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CDOTAUserMsg_Ping struct {
	Ping             *uint32 `protobuf:"varint,2,opt,name=ping" json:"ping,omitempty"`
	Loss             *uint32 `protobuf:"varint,3,opt,name=loss" json:"loss,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_Ping) Reset()                    { *m = CDOTAUserMsg_Ping{} }
func (m *CDOTAUserMsg_Ping) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_Ping) ProtoMessage()               {}
func (*CDOTAUserMsg_Ping) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{1} }

func (m *CDOTAUserMsg_Ping) GetPing() uint32 {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return 0
}

func (m *CDOTAUserMsg_Ping) GetLoss() uint32 {
	if m != nil && m.Loss != nil {
		return *m.Loss
	}
	return 0
}

type CDOTAUserMsg_SwapVerify struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SwapVerify) Reset()                    { *m = CDOTAUserMsg_SwapVerify{} }
func (m *CDOTAUserMsg_SwapVerify) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SwapVerify) ProtoMessage()               {}
func (*CDOTAUserMsg_SwapVerify) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{2} }

func (m *CDOTAUserMsg_SwapVerify) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CDOTAUserMsg_ChatEvent struct {
	Type             *DOTA_CHAT_MESSAGE `protobuf:"varint,1,req,name=type,enum=dota.DOTA_CHAT_MESSAGE,def=-1" json:"type,omitempty"`
	Value            *uint32            `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Playerid_1       *int32             `protobuf:"zigzag32,3,opt,name=playerid_1,json=playerid1,def=-1" json:"playerid_1,omitempty"`
	Playerid_2       *int32             `protobuf:"zigzag32,4,opt,name=playerid_2,json=playerid2,def=-1" json:"playerid_2,omitempty"`
	Playerid_3       *int32             `protobuf:"zigzag32,5,opt,name=playerid_3,json=playerid3,def=-1" json:"playerid_3,omitempty"`
	Playerid_4       *int32             `protobuf:"zigzag32,6,opt,name=playerid_4,json=playerid4,def=-1" json:"playerid_4,omitempty"`
	Playerid_5       *int32             `protobuf:"zigzag32,7,opt,name=playerid_5,json=playerid5,def=-1" json:"playerid_5,omitempty"`
	Playerid_6       *int32             `protobuf:"zigzag32,8,opt,name=playerid_6,json=playerid6,def=-1" json:"playerid_6,omitempty"`
	Value2           *uint32            `protobuf:"varint,9,opt,name=value2" json:"value2,omitempty"`
	Value3           *uint32            `protobuf:"varint,10,opt,name=value3" json:"value3,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CDOTAUserMsg_ChatEvent) Reset()                    { *m = CDOTAUserMsg_ChatEvent{} }
func (m *CDOTAUserMsg_ChatEvent) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ChatEvent) ProtoMessage()               {}
func (*CDOTAUserMsg_ChatEvent) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{3} }

const Default_CDOTAUserMsg_ChatEvent_Type DOTA_CHAT_MESSAGE = DOTA_CHAT_MESSAGE_CHAT_MESSAGE_INVALID
const Default_CDOTAUserMsg_ChatEvent_Playerid_1 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_2 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_3 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_4 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_5 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_6 int32 = -1

func (m *CDOTAUserMsg_ChatEvent) GetType() DOTA_CHAT_MESSAGE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CDOTAUserMsg_ChatEvent_Type
}

func (m *CDOTAUserMsg_ChatEvent) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_1() int32 {
	if m != nil && m.Playerid_1 != nil {
		return *m.Playerid_1
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_1
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_2() int32 {
	if m != nil && m.Playerid_2 != nil {
		return *m.Playerid_2
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_2
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_3() int32 {
	if m != nil && m.Playerid_3 != nil {
		return *m.Playerid_3
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_3
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_4() int32 {
	if m != nil && m.Playerid_4 != nil {
		return *m.Playerid_4
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_4
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_5() int32 {
	if m != nil && m.Playerid_5 != nil {
		return *m.Playerid_5
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_5
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_6() int32 {
	if m != nil && m.Playerid_6 != nil {
		return *m.Playerid_6
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_6
}

func (m *CDOTAUserMsg_ChatEvent) GetValue2() uint32 {
	if m != nil && m.Value2 != nil {
		return *m.Value2
	}
	return 0
}

func (m *CDOTAUserMsg_ChatEvent) GetValue3() uint32 {
	if m != nil && m.Value3 != nil {
		return *m.Value3
	}
	return 0
}

type CDOTAUserMsg_BotChat struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Target           *string `protobuf:"bytes,4,opt,name=target" json:"target,omitempty"`
	TeamOnly         *bool   `protobuf:"varint,5,opt,name=team_only,json=teamOnly" json:"team_only,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_BotChat) Reset()                    { *m = CDOTAUserMsg_BotChat{} }
func (m *CDOTAUserMsg_BotChat) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_BotChat) ProtoMessage()               {}
func (*CDOTAUserMsg_BotChat) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{4} }

func (m *CDOTAUserMsg_BotChat) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_BotChat) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CDOTAUserMsg_BotChat) GetTarget() string {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return ""
}

func (m *CDOTAUserMsg_BotChat) GetTeamOnly() bool {
	if m != nil && m.TeamOnly != nil {
		return *m.TeamOnly
	}
	return false
}

type CDOTAUserMsg_CombatHeroPositions struct {
	Index            *uint32       `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Time             *int32        `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	WorldPos         *CMsgVector2D `protobuf:"bytes,3,opt,name=world_pos,json=worldPos" json:"world_pos,omitempty"`
	Health           *int32        `protobuf:"varint,4,opt,name=health" json:"health,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CDOTAUserMsg_CombatHeroPositions) Reset()         { *m = CDOTAUserMsg_CombatHeroPositions{} }
func (m *CDOTAUserMsg_CombatHeroPositions) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CombatHeroPositions) ProtoMessage()    {}
func (*CDOTAUserMsg_CombatHeroPositions) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{5}
}

func (m *CDOTAUserMsg_CombatHeroPositions) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CDOTAUserMsg_CombatHeroPositions) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *CDOTAUserMsg_CombatHeroPositions) GetWorldPos() *CMsgVector2D {
	if m != nil {
		return m.WorldPos
	}
	return nil
}

func (m *CDOTAUserMsg_CombatHeroPositions) GetHealth() int32 {
	if m != nil && m.Health != nil {
		return *m.Health
	}
	return 0
}

type CDOTAUserMsg_CombatLogBulkData struct {
	CombatEntries    []*CMsgDOTACombatLogEntry `protobuf:"bytes,1,rep,name=combat_entries,json=combatEntries" json:"combat_entries,omitempty"`
	Timestamp        *float32                  `protobuf:"fixed32,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration         *float32                  `protobuf:"fixed32,3,opt,name=duration" json:"duration,omitempty"`
	PlayerId         *uint32                   `protobuf:"varint,4,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *CDOTAUserMsg_CombatLogBulkData) Reset()                    { *m = CDOTAUserMsg_CombatLogBulkData{} }
func (m *CDOTAUserMsg_CombatLogBulkData) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CombatLogBulkData) ProtoMessage()               {}
func (*CDOTAUserMsg_CombatLogBulkData) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{6} }

func (m *CDOTAUserMsg_CombatLogBulkData) GetCombatEntries() []*CMsgDOTACombatLogEntry {
	if m != nil {
		return m.CombatEntries
	}
	return nil
}

func (m *CDOTAUserMsg_CombatLogBulkData) GetTimestamp() float32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CDOTAUserMsg_CombatLogBulkData) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAUserMsg_CombatLogBulkData) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CDOTAUserMsg_MiniKillCamInfo struct {
	Attackers        []*CDOTAUserMsg_MiniKillCamInfo_Attacker `protobuf:"bytes,1,rep,name=attackers" json:"attackers,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CDOTAUserMsg_MiniKillCamInfo) Reset()                    { *m = CDOTAUserMsg_MiniKillCamInfo{} }
func (m *CDOTAUserMsg_MiniKillCamInfo) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MiniKillCamInfo) ProtoMessage()               {}
func (*CDOTAUserMsg_MiniKillCamInfo) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{7} }

func (m *CDOTAUserMsg_MiniKillCamInfo) GetAttackers() []*CDOTAUserMsg_MiniKillCamInfo_Attacker {
	if m != nil {
		return m.Attackers
	}
	return nil
}

type CDOTAUserMsg_MiniKillCamInfo_Attacker struct {
	Attacker         *uint32                                          `protobuf:"varint,1,opt,name=attacker" json:"attacker,omitempty"`
	TotalDamage      *int32                                           `protobuf:"varint,2,opt,name=total_damage,json=totalDamage" json:"total_damage,omitempty"`
	Abilities        []*CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability `protobuf:"bytes,3,rep,name=abilities" json:"abilities,omitempty"`
	AttackerName     *string                                          `protobuf:"bytes,4,opt,name=attacker_name,json=attackerName" json:"attacker_name,omitempty"`
	XXX_unrecognized []byte                                           `json:"-"`
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) Reset()         { *m = CDOTAUserMsg_MiniKillCamInfo_Attacker{} }
func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MiniKillCamInfo_Attacker) ProtoMessage()    {}
func (*CDOTAUserMsg_MiniKillCamInfo_Attacker) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{7, 0}
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) GetAttacker() uint32 {
	if m != nil && m.Attacker != nil {
		return *m.Attacker
	}
	return 0
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) GetTotalDamage() int32 {
	if m != nil && m.TotalDamage != nil {
		return *m.TotalDamage
	}
	return 0
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) GetAbilities() []*CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability {
	if m != nil {
		return m.Abilities
	}
	return nil
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) GetAttackerName() string {
	if m != nil && m.AttackerName != nil {
		return *m.AttackerName
	}
	return ""
}

type CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability struct {
	AbilityId        *uint32 `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	Damage           *int32  `protobuf:"varint,2,opt,name=damage" json:"damage,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) Reset() {
	*m = CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability{}
}
func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) ProtoMessage() {}
func (*CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{7, 0, 0}
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) GetAbilityId() uint32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) GetDamage() int32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

type CDOTAUserMsg_GlobalLightColor struct {
	Color            *uint32  `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_GlobalLightColor) Reset()                    { *m = CDOTAUserMsg_GlobalLightColor{} }
func (m *CDOTAUserMsg_GlobalLightColor) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_GlobalLightColor) ProtoMessage()               {}
func (*CDOTAUserMsg_GlobalLightColor) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{8} }

func (m *CDOTAUserMsg_GlobalLightColor) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *CDOTAUserMsg_GlobalLightColor) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CDOTAUserMsg_GlobalLightDirection struct {
	Direction        *CMsgVector `protobuf:"bytes,1,opt,name=direction" json:"direction,omitempty"`
	Duration         *float32    `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_GlobalLightDirection) Reset()         { *m = CDOTAUserMsg_GlobalLightDirection{} }
func (m *CDOTAUserMsg_GlobalLightDirection) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_GlobalLightDirection) ProtoMessage()    {}
func (*CDOTAUserMsg_GlobalLightDirection) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{9}
}

func (m *CDOTAUserMsg_GlobalLightDirection) GetDirection() *CMsgVector {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *CDOTAUserMsg_GlobalLightDirection) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CDOTAUserMsg_LocationPing struct {
	PlayerId         *uint32                `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	LocationPing     *CDOTAMsg_LocationPing `protobuf:"bytes,2,opt,name=location_ping,json=locationPing" json:"location_ping,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CDOTAUserMsg_LocationPing) Reset()                    { *m = CDOTAUserMsg_LocationPing{} }
func (m *CDOTAUserMsg_LocationPing) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_LocationPing) ProtoMessage()               {}
func (*CDOTAUserMsg_LocationPing) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{10} }

func (m *CDOTAUserMsg_LocationPing) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_LocationPing) GetLocationPing() *CDOTAMsg_LocationPing {
	if m != nil {
		return m.LocationPing
	}
	return nil
}

type CDOTAUserMsg_ItemAlert struct {
	PlayerId         *uint32             `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ItemAlert        *CDOTAMsg_ItemAlert `protobuf:"bytes,2,opt,name=item_alert,json=itemAlert" json:"item_alert,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CDOTAUserMsg_ItemAlert) Reset()                    { *m = CDOTAUserMsg_ItemAlert{} }
func (m *CDOTAUserMsg_ItemAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ItemAlert) ProtoMessage()               {}
func (*CDOTAUserMsg_ItemAlert) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{11} }

func (m *CDOTAUserMsg_ItemAlert) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_ItemAlert) GetItemAlert() *CDOTAMsg_ItemAlert {
	if m != nil {
		return m.ItemAlert
	}
	return nil
}

type CDOTAUserMsg_EnemyItemAlert struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	TargetPlayerId   *uint32 `protobuf:"varint,2,opt,name=target_player_id,json=targetPlayerId" json:"target_player_id,omitempty"`
	ItemAbilityId    *int32  `protobuf:"varint,3,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	RuneType         *uint32 `protobuf:"varint,4,opt,name=rune_type,json=runeType" json:"rune_type,omitempty"`
	EntityId         *int32  `protobuf:"varint,5,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ItemLevel        *int32  `protobuf:"varint,6,opt,name=item_level,json=itemLevel,def=-1" json:"item_level,omitempty"`
	PrimaryCharges   *int32  `protobuf:"varint,7,opt,name=primary_charges,json=primaryCharges,def=-1" json:"primary_charges,omitempty"`
	SecondaryCharges *int32  `protobuf:"varint,8,opt,name=secondary_charges,json=secondaryCharges,def=-1" json:"secondary_charges,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_EnemyItemAlert) Reset()                    { *m = CDOTAUserMsg_EnemyItemAlert{} }
func (m *CDOTAUserMsg_EnemyItemAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_EnemyItemAlert) ProtoMessage()               {}
func (*CDOTAUserMsg_EnemyItemAlert) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{12} }

const Default_CDOTAUserMsg_EnemyItemAlert_ItemLevel int32 = -1
const Default_CDOTAUserMsg_EnemyItemAlert_PrimaryCharges int32 = -1
const Default_CDOTAUserMsg_EnemyItemAlert_SecondaryCharges int32 = -1

func (m *CDOTAUserMsg_EnemyItemAlert) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_EnemyItemAlert) GetTargetPlayerId() uint32 {
	if m != nil && m.TargetPlayerId != nil {
		return *m.TargetPlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_EnemyItemAlert) GetItemAbilityId() int32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_EnemyItemAlert) GetRuneType() uint32 {
	if m != nil && m.RuneType != nil {
		return *m.RuneType
	}
	return 0
}

func (m *CDOTAUserMsg_EnemyItemAlert) GetEntityId() int32 {
	if m != nil && m.EntityId != nil {
		return *m.EntityId
	}
	return 0
}

func (m *CDOTAUserMsg_EnemyItemAlert) GetItemLevel() int32 {
	if m != nil && m.ItemLevel != nil {
		return *m.ItemLevel
	}
	return Default_CDOTAUserMsg_EnemyItemAlert_ItemLevel
}

func (m *CDOTAUserMsg_EnemyItemAlert) GetPrimaryCharges() int32 {
	if m != nil && m.PrimaryCharges != nil {
		return *m.PrimaryCharges
	}
	return Default_CDOTAUserMsg_EnemyItemAlert_PrimaryCharges
}

func (m *CDOTAUserMsg_EnemyItemAlert) GetSecondaryCharges() int32 {
	if m != nil && m.SecondaryCharges != nil {
		return *m.SecondaryCharges
	}
	return Default_CDOTAUserMsg_EnemyItemAlert_SecondaryCharges
}

type CDOTAUserMsg_ModifierAlert struct {
	PlayerId         *uint32  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ClassName        *string  `protobuf:"bytes,2,opt,name=class_name,json=className" json:"class_name,omitempty"`
	StackCount       *uint32  `protobuf:"varint,3,opt,name=stack_count,json=stackCount" json:"stack_count,omitempty"`
	IsDebuff         *bool    `protobuf:"varint,4,opt,name=is_debuff,json=isDebuff" json:"is_debuff,omitempty"`
	TargetEntindex   *uint32  `protobuf:"varint,5,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	SecondsRemaining *float32 `protobuf:"fixed32,6,opt,name=seconds_remaining,json=secondsRemaining" json:"seconds_remaining,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_ModifierAlert) Reset()                    { *m = CDOTAUserMsg_ModifierAlert{} }
func (m *CDOTAUserMsg_ModifierAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ModifierAlert) ProtoMessage()               {}
func (*CDOTAUserMsg_ModifierAlert) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{13} }

func (m *CDOTAUserMsg_ModifierAlert) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_ModifierAlert) GetClassName() string {
	if m != nil && m.ClassName != nil {
		return *m.ClassName
	}
	return ""
}

func (m *CDOTAUserMsg_ModifierAlert) GetStackCount() uint32 {
	if m != nil && m.StackCount != nil {
		return *m.StackCount
	}
	return 0
}

func (m *CDOTAUserMsg_ModifierAlert) GetIsDebuff() bool {
	if m != nil && m.IsDebuff != nil {
		return *m.IsDebuff
	}
	return false
}

func (m *CDOTAUserMsg_ModifierAlert) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

func (m *CDOTAUserMsg_ModifierAlert) GetSecondsRemaining() float32 {
	if m != nil && m.SecondsRemaining != nil {
		return *m.SecondsRemaining
	}
	return 0
}

type CDOTAUserMsg_HPManaAlert struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	TargetEntindex   *uint32 `protobuf:"varint,2,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_HPManaAlert) Reset()                    { *m = CDOTAUserMsg_HPManaAlert{} }
func (m *CDOTAUserMsg_HPManaAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_HPManaAlert) ProtoMessage()               {}
func (*CDOTAUserMsg_HPManaAlert) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{14} }

func (m *CDOTAUserMsg_HPManaAlert) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_HPManaAlert) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

type CDOTAUserMsg_GlyphAlert struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Negative         *bool   `protobuf:"varint,2,opt,name=negative" json:"negative,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_GlyphAlert) Reset()                    { *m = CDOTAUserMsg_GlyphAlert{} }
func (m *CDOTAUserMsg_GlyphAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_GlyphAlert) ProtoMessage()               {}
func (*CDOTAUserMsg_GlyphAlert) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{15} }

func (m *CDOTAUserMsg_GlyphAlert) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_GlyphAlert) GetNegative() bool {
	if m != nil && m.Negative != nil {
		return *m.Negative
	}
	return false
}

type CDOTAUserMsg_WillPurchaseAlert struct {
	ItemAbilityId      *int32  `protobuf:"varint,1,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	PlayerId           *int32  `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	GoldRemaining      *uint32 `protobuf:"varint,3,opt,name=gold_remaining,json=goldRemaining" json:"gold_remaining,omitempty"`
	SuggestionPlayerId *int32  `protobuf:"varint,4,opt,name=suggestion_player_id,json=suggestionPlayerId" json:"suggestion_player_id,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CDOTAUserMsg_WillPurchaseAlert) Reset()         { *m = CDOTAUserMsg_WillPurchaseAlert{} }
func (m *CDOTAUserMsg_WillPurchaseAlert) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_WillPurchaseAlert) ProtoMessage()    {}
func (*CDOTAUserMsg_WillPurchaseAlert) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{16}
}

func (m *CDOTAUserMsg_WillPurchaseAlert) GetItemAbilityId() int32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_WillPurchaseAlert) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_WillPurchaseAlert) GetGoldRemaining() uint32 {
	if m != nil && m.GoldRemaining != nil {
		return *m.GoldRemaining
	}
	return 0
}

func (m *CDOTAUserMsg_WillPurchaseAlert) GetSuggestionPlayerId() int32 {
	if m != nil && m.SuggestionPlayerId != nil {
		return *m.SuggestionPlayerId
	}
	return 0
}

type CDOTAUserMsg_BuyBackStateAlert struct {
	PlayerId         *int32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_BuyBackStateAlert) Reset()         { *m = CDOTAUserMsg_BuyBackStateAlert{} }
func (m *CDOTAUserMsg_BuyBackStateAlert) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_BuyBackStateAlert) ProtoMessage()    {}
func (*CDOTAUserMsg_BuyBackStateAlert) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{17}
}

func (m *CDOTAUserMsg_BuyBackStateAlert) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CDOTAUserMsg_QuickBuyAlert struct {
	PlayerId            *int32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ItemAbilityId       *int32 `protobuf:"varint,2,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	GoldCost            *int32 `protobuf:"varint,3,opt,name=gold_cost,json=goldCost" json:"gold_cost,omitempty"`
	ItemCooldownSeconds *int32 `protobuf:"varint,4,opt,name=item_cooldown_seconds,json=itemCooldownSeconds" json:"item_cooldown_seconds,omitempty"`
	ShowBuyback         *bool  `protobuf:"varint,5,opt,name=show_buyback,json=showBuyback" json:"show_buyback,omitempty"`
	XXX_unrecognized    []byte `json:"-"`
}

func (m *CDOTAUserMsg_QuickBuyAlert) Reset()                    { *m = CDOTAUserMsg_QuickBuyAlert{} }
func (m *CDOTAUserMsg_QuickBuyAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_QuickBuyAlert) ProtoMessage()               {}
func (*CDOTAUserMsg_QuickBuyAlert) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{18} }

func (m *CDOTAUserMsg_QuickBuyAlert) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_QuickBuyAlert) GetItemAbilityId() int32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_QuickBuyAlert) GetGoldCost() int32 {
	if m != nil && m.GoldCost != nil {
		return *m.GoldCost
	}
	return 0
}

func (m *CDOTAUserMsg_QuickBuyAlert) GetItemCooldownSeconds() int32 {
	if m != nil && m.ItemCooldownSeconds != nil {
		return *m.ItemCooldownSeconds
	}
	return 0
}

func (m *CDOTAUserMsg_QuickBuyAlert) GetShowBuyback() bool {
	if m != nil && m.ShowBuyback != nil {
		return *m.ShowBuyback
	}
	return false
}

type CDOTAUserMsg_CourierKilledAlert struct {
	Team             *uint32                                     `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	GoldValue        *uint32                                     `protobuf:"varint,2,opt,name=gold_value,json=goldValue" json:"gold_value,omitempty"`
	EntityHandle     *int32                                      `protobuf:"varint,3,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	Timestamp        *int32                                      `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	LostItems        []*CDOTAUserMsg_CourierKilledAlert_LostItem `protobuf:"bytes,5,rep,name=lost_items,json=lostItems" json:"lost_items,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CDOTAUserMsg_CourierKilledAlert) Reset()         { *m = CDOTAUserMsg_CourierKilledAlert{} }
func (m *CDOTAUserMsg_CourierKilledAlert) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CourierKilledAlert) ProtoMessage()    {}
func (*CDOTAUserMsg_CourierKilledAlert) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{19}
}

func (m *CDOTAUserMsg_CourierKilledAlert) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CDOTAUserMsg_CourierKilledAlert) GetGoldValue() uint32 {
	if m != nil && m.GoldValue != nil {
		return *m.GoldValue
	}
	return 0
}

func (m *CDOTAUserMsg_CourierKilledAlert) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

func (m *CDOTAUserMsg_CourierKilledAlert) GetTimestamp() int32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CDOTAUserMsg_CourierKilledAlert) GetLostItems() []*CDOTAUserMsg_CourierKilledAlert_LostItem {
	if m != nil {
		return m.LostItems
	}
	return nil
}

type CDOTAUserMsg_CourierKilledAlert_LostItem struct {
	ItemAbilityId    *int32  `protobuf:"varint,1,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	Quantity         *uint32 `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_CourierKilledAlert_LostItem) Reset() {
	*m = CDOTAUserMsg_CourierKilledAlert_LostItem{}
}
func (m *CDOTAUserMsg_CourierKilledAlert_LostItem) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CourierKilledAlert_LostItem) ProtoMessage()    {}
func (*CDOTAUserMsg_CourierKilledAlert_LostItem) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{19, 0}
}

func (m *CDOTAUserMsg_CourierKilledAlert_LostItem) GetItemAbilityId() int32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_CourierKilledAlert_LostItem) GetQuantity() uint32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

type CDOTAUserMsg_MinimapEvent struct {
	EventType          *int32 `protobuf:"varint,1,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	EntityHandle       *int32 `protobuf:"varint,2,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	X                  *int32 `protobuf:"varint,3,opt,name=x" json:"x,omitempty"`
	Y                  *int32 `protobuf:"varint,4,opt,name=y" json:"y,omitempty"`
	Duration           *int32 `protobuf:"varint,5,opt,name=duration" json:"duration,omitempty"`
	TargetEntityHandle *int32 `protobuf:"varint,6,opt,name=target_entity_handle,json=targetEntityHandle" json:"target_entity_handle,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *CDOTAUserMsg_MinimapEvent) Reset()                    { *m = CDOTAUserMsg_MinimapEvent{} }
func (m *CDOTAUserMsg_MinimapEvent) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MinimapEvent) ProtoMessage()               {}
func (*CDOTAUserMsg_MinimapEvent) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{20} }

func (m *CDOTAUserMsg_MinimapEvent) GetEventType() int32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetTargetEntityHandle() int32 {
	if m != nil && m.TargetEntityHandle != nil {
		return *m.TargetEntityHandle
	}
	return 0
}

type CDOTAUserMsg_MapLine struct {
	PlayerId         *int32            `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Mapline          *CDOTAMsg_MapLine `protobuf:"bytes,2,opt,name=mapline" json:"mapline,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CDOTAUserMsg_MapLine) Reset()                    { *m = CDOTAUserMsg_MapLine{} }
func (m *CDOTAUserMsg_MapLine) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MapLine) ProtoMessage()               {}
func (*CDOTAUserMsg_MapLine) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{21} }

func (m *CDOTAUserMsg_MapLine) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_MapLine) GetMapline() *CDOTAMsg_MapLine {
	if m != nil {
		return m.Mapline
	}
	return nil
}

type CDOTAUserMsg_MinimapDebugPoint struct {
	Location         *CMsgVector `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Color            *uint32     `protobuf:"varint,2,opt,name=color" json:"color,omitempty"`
	Size             *int32      `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Duration         *float32    `protobuf:"fixed32,4,opt,name=duration" json:"duration,omitempty"`
	Index            *int32      `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_MinimapDebugPoint) Reset()         { *m = CDOTAUserMsg_MinimapDebugPoint{} }
func (m *CDOTAUserMsg_MinimapDebugPoint) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MinimapDebugPoint) ProtoMessage()    {}
func (*CDOTAUserMsg_MinimapDebugPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{22}
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetLocation() *CMsgVector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CDOTAUserMsg_CreateLinearProjectile struct {
	Origin           *CMsgVector   `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Velocity         *CMsgVector2D `protobuf:"bytes,2,opt,name=velocity" json:"velocity,omitempty"`
	Entindex         *int32        `protobuf:"varint,4,opt,name=entindex" json:"entindex,omitempty"`
	ParticleIndex    *uint64       `protobuf:"varint,5,opt,name=particle_index,json=particleIndex" json:"particle_index,omitempty"`
	Handle           *int32        `protobuf:"varint,6,opt,name=handle" json:"handle,omitempty"`
	Acceleration     *CMsgVector2D `protobuf:"bytes,7,opt,name=acceleration" json:"acceleration,omitempty"`
	MaxSpeed         *float32      `protobuf:"fixed32,8,opt,name=max_speed,json=maxSpeed" json:"max_speed,omitempty"`
	FowRadius        *float32      `protobuf:"fixed32,9,opt,name=fow_radius,json=fowRadius" json:"fow_radius,omitempty"`
	StickyFowReveal  *bool         `protobuf:"varint,10,opt,name=sticky_fow_reveal,json=stickyFowReveal" json:"sticky_fow_reveal,omitempty"`
	Distance         *float32      `protobuf:"fixed32,11,opt,name=distance" json:"distance,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CDOTAUserMsg_CreateLinearProjectile) Reset()         { *m = CDOTAUserMsg_CreateLinearProjectile{} }
func (m *CDOTAUserMsg_CreateLinearProjectile) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CreateLinearProjectile) ProtoMessage()    {}
func (*CDOTAUserMsg_CreateLinearProjectile) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{23}
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetOrigin() *CMsgVector {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetVelocity() *CMsgVector2D {
	if m != nil {
		return m.Velocity
	}
	return nil
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetParticleIndex() uint64 {
	if m != nil && m.ParticleIndex != nil {
		return *m.ParticleIndex
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetAcceleration() *CMsgVector2D {
	if m != nil {
		return m.Acceleration
	}
	return nil
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetMaxSpeed() float32 {
	if m != nil && m.MaxSpeed != nil {
		return *m.MaxSpeed
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetFowRadius() float32 {
	if m != nil && m.FowRadius != nil {
		return *m.FowRadius
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetStickyFowReveal() bool {
	if m != nil && m.StickyFowReveal != nil {
		return *m.StickyFowReveal
	}
	return false
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetDistance() float32 {
	if m != nil && m.Distance != nil {
		return *m.Distance
	}
	return 0
}

type CDOTAUserMsg_DestroyLinearProjectile struct {
	Handle           *int32 `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_DestroyLinearProjectile) Reset()         { *m = CDOTAUserMsg_DestroyLinearProjectile{} }
func (m *CDOTAUserMsg_DestroyLinearProjectile) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_DestroyLinearProjectile) ProtoMessage()    {}
func (*CDOTAUserMsg_DestroyLinearProjectile) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{24}
}

func (m *CDOTAUserMsg_DestroyLinearProjectile) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

type CDOTAUserMsg_DodgeTrackingProjectiles struct {
	Entindex         *int32 `protobuf:"varint,1,req,name=entindex" json:"entindex,omitempty"`
	AttacksOnly      *bool  `protobuf:"varint,2,opt,name=attacks_only,json=attacksOnly" json:"attacks_only,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_DodgeTrackingProjectiles) Reset()         { *m = CDOTAUserMsg_DodgeTrackingProjectiles{} }
func (m *CDOTAUserMsg_DodgeTrackingProjectiles) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_DodgeTrackingProjectiles) ProtoMessage()    {}
func (*CDOTAUserMsg_DodgeTrackingProjectiles) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{25}
}

func (m *CDOTAUserMsg_DodgeTrackingProjectiles) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_DodgeTrackingProjectiles) GetAttacksOnly() bool {
	if m != nil && m.AttacksOnly != nil {
		return *m.AttacksOnly
	}
	return false
}

type CDOTAUserMsg_SpectatorPlayerClick struct {
	Entindex         *int32 `protobuf:"varint,1,req,name=entindex" json:"entindex,omitempty"`
	OrderType        *int32 `protobuf:"varint,2,opt,name=order_type,json=orderType" json:"order_type,omitempty"`
	TargetIndex      *int32 `protobuf:"varint,3,opt,name=target_index,json=targetIndex" json:"target_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_SpectatorPlayerClick) Reset()         { *m = CDOTAUserMsg_SpectatorPlayerClick{} }
func (m *CDOTAUserMsg_SpectatorPlayerClick) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SpectatorPlayerClick) ProtoMessage()    {}
func (*CDOTAUserMsg_SpectatorPlayerClick) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{26}
}

func (m *CDOTAUserMsg_SpectatorPlayerClick) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_SpectatorPlayerClick) GetOrderType() int32 {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return 0
}

func (m *CDOTAUserMsg_SpectatorPlayerClick) GetTargetIndex() int32 {
	if m != nil && m.TargetIndex != nil {
		return *m.TargetIndex
	}
	return 0
}

type CDOTAUserMsg_SpectatorPlayerUnitOrders struct {
	Entindex         *int32      `protobuf:"varint,1,opt,name=entindex" json:"entindex,omitempty"`
	OrderType        *int32      `protobuf:"varint,2,opt,name=order_type,json=orderType" json:"order_type,omitempty"`
	Units            []int32     `protobuf:"varint,3,rep,name=units" json:"units,omitempty"`
	TargetIndex      *int32      `protobuf:"varint,4,opt,name=target_index,json=targetIndex" json:"target_index,omitempty"`
	AbilityId        *int32      `protobuf:"varint,5,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	Position         *CMsgVector `protobuf:"bytes,6,opt,name=position" json:"position,omitempty"`
	Queue            *bool       `protobuf:"varint,7,opt,name=queue" json:"queue,omitempty"`
	SequenceNumber   *int32      `protobuf:"varint,8,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) Reset() {
	*m = CDOTAUserMsg_SpectatorPlayerUnitOrders{}
}
func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SpectatorPlayerUnitOrders) ProtoMessage()    {}
func (*CDOTAUserMsg_SpectatorPlayerUnitOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{27}
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) GetOrderType() int32 {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return 0
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) GetUnits() []int32 {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) GetTargetIndex() int32 {
	if m != nil && m.TargetIndex != nil {
		return *m.TargetIndex
	}
	return 0
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) GetPosition() *CMsgVector {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) GetQueue() bool {
	if m != nil && m.Queue != nil {
		return *m.Queue
	}
	return false
}

func (m *CDOTAUserMsg_SpectatorPlayerUnitOrders) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

type CDOTAUserMsg_NevermoreRequiem struct {
	EntityHandle     *int32      `protobuf:"varint,1,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	Lines            *int32      `protobuf:"varint,2,opt,name=lines" json:"lines,omitempty"`
	Origin           *CMsgVector `protobuf:"bytes,3,opt,name=origin" json:"origin,omitempty"`
	Reverse          *bool       `protobuf:"varint,4,opt,name=reverse" json:"reverse,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_NevermoreRequiem) Reset()                    { *m = CDOTAUserMsg_NevermoreRequiem{} }
func (m *CDOTAUserMsg_NevermoreRequiem) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_NevermoreRequiem) ProtoMessage()               {}
func (*CDOTAUserMsg_NevermoreRequiem) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{28} }

func (m *CDOTAUserMsg_NevermoreRequiem) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

func (m *CDOTAUserMsg_NevermoreRequiem) GetLines() int32 {
	if m != nil && m.Lines != nil {
		return *m.Lines
	}
	return 0
}

func (m *CDOTAUserMsg_NevermoreRequiem) GetOrigin() *CMsgVector {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *CDOTAUserMsg_NevermoreRequiem) GetReverse() bool {
	if m != nil && m.Reverse != nil {
		return *m.Reverse
	}
	return false
}

type CDOTAUserMsg_InvalidCommand struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_InvalidCommand) Reset()                    { *m = CDOTAUserMsg_InvalidCommand{} }
func (m *CDOTAUserMsg_InvalidCommand) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_InvalidCommand) ProtoMessage()               {}
func (*CDOTAUserMsg_InvalidCommand) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{29} }

func (m *CDOTAUserMsg_InvalidCommand) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CDOTAUserMsg_HudError struct {
	OrderId          *int32 `protobuf:"varint,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_HudError) Reset()                    { *m = CDOTAUserMsg_HudError{} }
func (m *CDOTAUserMsg_HudError) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_HudError) ProtoMessage()               {}
func (*CDOTAUserMsg_HudError) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{30} }

func (m *CDOTAUserMsg_HudError) GetOrderId() int32 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type CDOTAUserMsg_SharedCooldown struct {
	Entindex         *int32   `protobuf:"varint,1,opt,name=entindex" json:"entindex,omitempty"`
	Name             *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Cooldown         *float32 `protobuf:"fixed32,3,opt,name=cooldown" json:"cooldown,omitempty"`
	NameIndex        *int32   `protobuf:"varint,4,opt,name=name_index,json=nameIndex" json:"name_index,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_SharedCooldown) Reset()                    { *m = CDOTAUserMsg_SharedCooldown{} }
func (m *CDOTAUserMsg_SharedCooldown) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SharedCooldown) ProtoMessage()               {}
func (*CDOTAUserMsg_SharedCooldown) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{31} }

func (m *CDOTAUserMsg_SharedCooldown) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_SharedCooldown) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CDOTAUserMsg_SharedCooldown) GetCooldown() float32 {
	if m != nil && m.Cooldown != nil {
		return *m.Cooldown
	}
	return 0
}

func (m *CDOTAUserMsg_SharedCooldown) GetNameIndex() int32 {
	if m != nil && m.NameIndex != nil {
		return *m.NameIndex
	}
	return 0
}

type CDOTAUserMsg_SetNextAutobuyItem struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SetNextAutobuyItem) Reset()         { *m = CDOTAUserMsg_SetNextAutobuyItem{} }
func (m *CDOTAUserMsg_SetNextAutobuyItem) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SetNextAutobuyItem) ProtoMessage()    {}
func (*CDOTAUserMsg_SetNextAutobuyItem) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{32}
}

func (m *CDOTAUserMsg_SetNextAutobuyItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CDOTAUserMsg_HalloweenDrops struct {
	ItemDefs         []uint32 `protobuf:"varint,1,rep,name=item_defs,json=itemDefs" json:"item_defs,omitempty"`
	PlayerIds        []uint32 `protobuf:"varint,2,rep,name=player_ids,json=playerIds" json:"player_ids,omitempty"`
	PrizeList        *uint32  `protobuf:"varint,3,opt,name=prize_list,json=prizeList" json:"prize_list,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_HalloweenDrops) Reset()                    { *m = CDOTAUserMsg_HalloweenDrops{} }
func (m *CDOTAUserMsg_HalloweenDrops) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_HalloweenDrops) ProtoMessage()               {}
func (*CDOTAUserMsg_HalloweenDrops) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{33} }

func (m *CDOTAUserMsg_HalloweenDrops) GetItemDefs() []uint32 {
	if m != nil {
		return m.ItemDefs
	}
	return nil
}

func (m *CDOTAUserMsg_HalloweenDrops) GetPlayerIds() []uint32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

func (m *CDOTAUserMsg_HalloweenDrops) GetPrizeList() uint32 {
	if m != nil && m.PrizeList != nil {
		return *m.PrizeList
	}
	return 0
}

type CDOTAUserMsg_PredictionResult struct {
	AccountId        *uint32                                     `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MatchId          *uint64                                     `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Correct          *bool                                       `protobuf:"varint,3,opt,name=correct" json:"correct,omitempty"`
	Predictions      []*CDOTAUserMsg_PredictionResult_Prediction `protobuf:"bytes,4,rep,name=predictions" json:"predictions,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CDOTAUserMsg_PredictionResult) Reset()                    { *m = CDOTAUserMsg_PredictionResult{} }
func (m *CDOTAUserMsg_PredictionResult) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_PredictionResult) ProtoMessage()               {}
func (*CDOTAUserMsg_PredictionResult) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{34} }

func (m *CDOTAUserMsg_PredictionResult) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CDOTAUserMsg_PredictionResult) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CDOTAUserMsg_PredictionResult) GetCorrect() bool {
	if m != nil && m.Correct != nil {
		return *m.Correct
	}
	return false
}

func (m *CDOTAUserMsg_PredictionResult) GetPredictions() []*CDOTAUserMsg_PredictionResult_Prediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

type CDOTAUserMsg_PredictionResult_Prediction struct {
	ItemDef          *uint32                                           `protobuf:"varint,1,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	NumCorrect       *uint32                                           `protobuf:"varint,2,opt,name=num_correct,json=numCorrect" json:"num_correct,omitempty"`
	NumFails         *uint32                                           `protobuf:"varint,3,opt,name=num_fails,json=numFails" json:"num_fails,omitempty"`
	Result           *CDOTAUserMsg_PredictionResult_Prediction_EResult `protobuf:"varint,4,opt,name=result,enum=dota.CDOTAUserMsg_PredictionResult_Prediction_EResult,def=1" json:"result,omitempty"`
	GrantedItemDefs  []uint32                                          `protobuf:"varint,6,rep,name=granted_item_defs,json=grantedItemDefs" json:"granted_item_defs,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *CDOTAUserMsg_PredictionResult_Prediction) Reset() {
	*m = CDOTAUserMsg_PredictionResult_Prediction{}
}
func (m *CDOTAUserMsg_PredictionResult_Prediction) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_PredictionResult_Prediction) ProtoMessage()    {}
func (*CDOTAUserMsg_PredictionResult_Prediction) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{34, 0}
}

const Default_CDOTAUserMsg_PredictionResult_Prediction_Result CDOTAUserMsg_PredictionResult_Prediction_EResult = CDOTAUserMsg_PredictionResult_Prediction_k_eResult_ItemGranted

func (m *CDOTAUserMsg_PredictionResult_Prediction) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CDOTAUserMsg_PredictionResult_Prediction) GetNumCorrect() uint32 {
	if m != nil && m.NumCorrect != nil {
		return *m.NumCorrect
	}
	return 0
}

func (m *CDOTAUserMsg_PredictionResult_Prediction) GetNumFails() uint32 {
	if m != nil && m.NumFails != nil {
		return *m.NumFails
	}
	return 0
}

func (m *CDOTAUserMsg_PredictionResult_Prediction) GetResult() CDOTAUserMsg_PredictionResult_Prediction_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CDOTAUserMsg_PredictionResult_Prediction_Result
}

func (m *CDOTAUserMsg_PredictionResult_Prediction) GetGrantedItemDefs() []uint32 {
	if m != nil {
		return m.GrantedItemDefs
	}
	return nil
}

type CDOTAResponseQuerySerialized struct {
	Facts            []*CDOTAResponseQuerySerialized_Fact `protobuf:"bytes,1,rep,name=facts" json:"facts,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CDOTAResponseQuerySerialized) Reset()                    { *m = CDOTAResponseQuerySerialized{} }
func (m *CDOTAResponseQuerySerialized) String() string            { return proto.CompactTextString(m) }
func (*CDOTAResponseQuerySerialized) ProtoMessage()               {}
func (*CDOTAResponseQuerySerialized) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{35} }

func (m *CDOTAResponseQuerySerialized) GetFacts() []*CDOTAResponseQuerySerialized_Fact {
	if m != nil {
		return m.Facts
	}
	return nil
}

type CDOTAResponseQuerySerialized_Fact struct {
	Key              *int32                                       `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Valtype          *CDOTAResponseQuerySerialized_Fact_ValueType `protobuf:"varint,2,req,name=valtype,enum=dota.CDOTAResponseQuerySerialized_Fact_ValueType,def=1" json:"valtype,omitempty"`
	ValNumeric       *float32                                     `protobuf:"fixed32,3,opt,name=val_numeric,json=valNumeric" json:"val_numeric,omitempty"`
	ValString        *string                                      `protobuf:"bytes,4,opt,name=val_string,json=valString" json:"val_string,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CDOTAResponseQuerySerialized_Fact) Reset()         { *m = CDOTAResponseQuerySerialized_Fact{} }
func (m *CDOTAResponseQuerySerialized_Fact) String() string { return proto.CompactTextString(m) }
func (*CDOTAResponseQuerySerialized_Fact) ProtoMessage()    {}
func (*CDOTAResponseQuerySerialized_Fact) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{35, 0}
}

const Default_CDOTAResponseQuerySerialized_Fact_Valtype CDOTAResponseQuerySerialized_Fact_ValueType = CDOTAResponseQuerySerialized_Fact_NUMERIC

func (m *CDOTAResponseQuerySerialized_Fact) GetKey() int32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *CDOTAResponseQuerySerialized_Fact) GetValtype() CDOTAResponseQuerySerialized_Fact_ValueType {
	if m != nil && m.Valtype != nil {
		return *m.Valtype
	}
	return Default_CDOTAResponseQuerySerialized_Fact_Valtype
}

func (m *CDOTAResponseQuerySerialized_Fact) GetValNumeric() float32 {
	if m != nil && m.ValNumeric != nil {
		return *m.ValNumeric
	}
	return 0
}

func (m *CDOTAResponseQuerySerialized_Fact) GetValString() string {
	if m != nil && m.ValString != nil {
		return *m.ValString
	}
	return ""
}

type CDOTASpeechMatchOnClient struct {
	Concept          *int32                        `protobuf:"varint,1,opt,name=concept" json:"concept,omitempty"`
	RecipientType    *int32                        `protobuf:"varint,2,opt,name=recipient_type,json=recipientType" json:"recipient_type,omitempty"`
	Responsequery    *CDOTAResponseQuerySerialized `protobuf:"bytes,3,opt,name=responsequery" json:"responsequery,omitempty"`
	Randomseed       *int32                        `protobuf:"fixed32,4,opt,name=randomseed,def=0" json:"randomseed,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CDOTASpeechMatchOnClient) Reset()                    { *m = CDOTASpeechMatchOnClient{} }
func (m *CDOTASpeechMatchOnClient) String() string            { return proto.CompactTextString(m) }
func (*CDOTASpeechMatchOnClient) ProtoMessage()               {}
func (*CDOTASpeechMatchOnClient) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{36} }

const Default_CDOTASpeechMatchOnClient_Randomseed int32 = 0

func (m *CDOTASpeechMatchOnClient) GetConcept() int32 {
	if m != nil && m.Concept != nil {
		return *m.Concept
	}
	return 0
}

func (m *CDOTASpeechMatchOnClient) GetRecipientType() int32 {
	if m != nil && m.RecipientType != nil {
		return *m.RecipientType
	}
	return 0
}

func (m *CDOTASpeechMatchOnClient) GetResponsequery() *CDOTAResponseQuerySerialized {
	if m != nil {
		return m.Responsequery
	}
	return nil
}

func (m *CDOTASpeechMatchOnClient) GetRandomseed() int32 {
	if m != nil && m.Randomseed != nil {
		return *m.Randomseed
	}
	return Default_CDOTASpeechMatchOnClient_Randomseed
}

type CDOTAUserMsg_UnitEvent struct {
	MsgType             *EDotaEntityMessages                  `protobuf:"varint,1,req,name=msg_type,json=msgType,enum=dota.EDotaEntityMessages,def=0" json:"msg_type,omitempty"`
	EntityIndex         *int32                                `protobuf:"varint,2,req,name=entity_index,json=entityIndex" json:"entity_index,omitempty"`
	Speech              *CDOTAUserMsg_UnitEvent_Speech        `protobuf:"bytes,3,opt,name=speech" json:"speech,omitempty"`
	SpeechMute          *CDOTAUserMsg_UnitEvent_SpeechMute    `protobuf:"bytes,4,opt,name=speech_mute,json=speechMute" json:"speech_mute,omitempty"`
	AddGesture          *CDOTAUserMsg_UnitEvent_AddGesture    `protobuf:"bytes,5,opt,name=add_gesture,json=addGesture" json:"add_gesture,omitempty"`
	RemoveGesture       *CDOTAUserMsg_UnitEvent_RemoveGesture `protobuf:"bytes,6,opt,name=remove_gesture,json=removeGesture" json:"remove_gesture,omitempty"`
	BloodImpact         *CDOTAUserMsg_UnitEvent_BloodImpact   `protobuf:"bytes,7,opt,name=blood_impact,json=bloodImpact" json:"blood_impact,omitempty"`
	FadeGesture         *CDOTAUserMsg_UnitEvent_FadeGesture   `protobuf:"bytes,8,opt,name=fade_gesture,json=fadeGesture" json:"fade_gesture,omitempty"`
	SpeechMatchOnClient *CDOTASpeechMatchOnClient             `protobuf:"bytes,9,opt,name=speech_match_on_client,json=speechMatchOnClient" json:"speech_match_on_client,omitempty"`
	XXX_unrecognized    []byte                                `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent) Reset()                    { *m = CDOTAUserMsg_UnitEvent{} }
func (m *CDOTAUserMsg_UnitEvent) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent) ProtoMessage()               {}
func (*CDOTAUserMsg_UnitEvent) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{37} }

const Default_CDOTAUserMsg_UnitEvent_MsgType EDotaEntityMessages = EDotaEntityMessages_DOTA_UNIT_SPEECH

func (m *CDOTAUserMsg_UnitEvent) GetMsgType() EDotaEntityMessages {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return Default_CDOTAUserMsg_UnitEvent_MsgType
}

func (m *CDOTAUserMsg_UnitEvent) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent) GetSpeech() *CDOTAUserMsg_UnitEvent_Speech {
	if m != nil {
		return m.Speech
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetSpeechMute() *CDOTAUserMsg_UnitEvent_SpeechMute {
	if m != nil {
		return m.SpeechMute
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetAddGesture() *CDOTAUserMsg_UnitEvent_AddGesture {
	if m != nil {
		return m.AddGesture
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetRemoveGesture() *CDOTAUserMsg_UnitEvent_RemoveGesture {
	if m != nil {
		return m.RemoveGesture
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetBloodImpact() *CDOTAUserMsg_UnitEvent_BloodImpact {
	if m != nil {
		return m.BloodImpact
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetFadeGesture() *CDOTAUserMsg_UnitEvent_FadeGesture {
	if m != nil {
		return m.FadeGesture
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetSpeechMatchOnClient() *CDOTASpeechMatchOnClient {
	if m != nil {
		return m.SpeechMatchOnClient
	}
	return nil
}

type CDOTAUserMsg_UnitEvent_Speech struct {
	Concept          *int32  `protobuf:"varint,1,opt,name=concept" json:"concept,omitempty"`
	Response         *string `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	RecipientType    *int32  `protobuf:"varint,3,opt,name=recipient_type,json=recipientType" json:"recipient_type,omitempty"`
	Level            *int32  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Muteable         *bool   `protobuf:"varint,5,opt,name=muteable,def=0" json:"muteable,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_Speech) Reset()         { *m = CDOTAUserMsg_UnitEvent_Speech{} }
func (m *CDOTAUserMsg_UnitEvent_Speech) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_Speech) ProtoMessage()    {}
func (*CDOTAUserMsg_UnitEvent_Speech) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{37, 0}
}

const Default_CDOTAUserMsg_UnitEvent_Speech_Muteable bool = false

func (m *CDOTAUserMsg_UnitEvent_Speech) GetConcept() int32 {
	if m != nil && m.Concept != nil {
		return *m.Concept
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_Speech) GetResponse() string {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return ""
}

func (m *CDOTAUserMsg_UnitEvent_Speech) GetRecipientType() int32 {
	if m != nil && m.RecipientType != nil {
		return *m.RecipientType
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_Speech) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_Speech) GetMuteable() bool {
	if m != nil && m.Muteable != nil {
		return *m.Muteable
	}
	return Default_CDOTAUserMsg_UnitEvent_Speech_Muteable
}

type CDOTAUserMsg_UnitEvent_SpeechMute struct {
	Delay            *float32 `protobuf:"fixed32,1,opt,name=delay,def=0.5" json:"delay,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_SpeechMute) Reset()         { *m = CDOTAUserMsg_UnitEvent_SpeechMute{} }
func (m *CDOTAUserMsg_UnitEvent_SpeechMute) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_SpeechMute) ProtoMessage()    {}
func (*CDOTAUserMsg_UnitEvent_SpeechMute) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{37, 1}
}

const Default_CDOTAUserMsg_UnitEvent_SpeechMute_Delay float32 = 0.5

func (m *CDOTAUserMsg_UnitEvent_SpeechMute) GetDelay() float32 {
	if m != nil && m.Delay != nil {
		return *m.Delay
	}
	return Default_CDOTAUserMsg_UnitEvent_SpeechMute_Delay
}

type CDOTAUserMsg_UnitEvent_AddGesture struct {
	Activity         *int32   `protobuf:"varint,1,opt,name=activity" json:"activity,omitempty"`
	Slot             *int32   `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	FadeIn           *float32 `protobuf:"fixed32,3,opt,name=fade_in,json=fadeIn,def=0" json:"fade_in,omitempty"`
	FadeOut          *float32 `protobuf:"fixed32,4,opt,name=fade_out,json=fadeOut,def=0.1" json:"fade_out,omitempty"`
	PlaybackRate     *float32 `protobuf:"fixed32,5,opt,name=playback_rate,json=playbackRate,def=1" json:"playback_rate,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) Reset()         { *m = CDOTAUserMsg_UnitEvent_AddGesture{} }
func (m *CDOTAUserMsg_UnitEvent_AddGesture) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_AddGesture) ProtoMessage()    {}
func (*CDOTAUserMsg_UnitEvent_AddGesture) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{37, 2}
}

const Default_CDOTAUserMsg_UnitEvent_AddGesture_FadeIn float32 = 0
const Default_CDOTAUserMsg_UnitEvent_AddGesture_FadeOut float32 = 0.1
const Default_CDOTAUserMsg_UnitEvent_AddGesture_PlaybackRate float32 = 1

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetFadeIn() float32 {
	if m != nil && m.FadeIn != nil {
		return *m.FadeIn
	}
	return Default_CDOTAUserMsg_UnitEvent_AddGesture_FadeIn
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetFadeOut() float32 {
	if m != nil && m.FadeOut != nil {
		return *m.FadeOut
	}
	return Default_CDOTAUserMsg_UnitEvent_AddGesture_FadeOut
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetPlaybackRate() float32 {
	if m != nil && m.PlaybackRate != nil {
		return *m.PlaybackRate
	}
	return Default_CDOTAUserMsg_UnitEvent_AddGesture_PlaybackRate
}

type CDOTAUserMsg_UnitEvent_RemoveGesture struct {
	Activity         *int32 `protobuf:"varint,1,opt,name=activity" json:"activity,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_RemoveGesture) Reset()         { *m = CDOTAUserMsg_UnitEvent_RemoveGesture{} }
func (m *CDOTAUserMsg_UnitEvent_RemoveGesture) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_RemoveGesture) ProtoMessage()    {}
func (*CDOTAUserMsg_UnitEvent_RemoveGesture) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{37, 3}
}

func (m *CDOTAUserMsg_UnitEvent_RemoveGesture) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

type CDOTAUserMsg_UnitEvent_BloodImpact struct {
	Scale            *int32 `protobuf:"varint,1,opt,name=scale" json:"scale,omitempty"`
	XNormal          *int32 `protobuf:"varint,2,opt,name=x_normal,json=xNormal" json:"x_normal,omitempty"`
	YNormal          *int32 `protobuf:"varint,3,opt,name=y_normal,json=yNormal" json:"y_normal,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_BloodImpact) Reset()         { *m = CDOTAUserMsg_UnitEvent_BloodImpact{} }
func (m *CDOTAUserMsg_UnitEvent_BloodImpact) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_BloodImpact) ProtoMessage()    {}
func (*CDOTAUserMsg_UnitEvent_BloodImpact) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{37, 4}
}

func (m *CDOTAUserMsg_UnitEvent_BloodImpact) GetScale() int32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_BloodImpact) GetXNormal() int32 {
	if m != nil && m.XNormal != nil {
		return *m.XNormal
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_BloodImpact) GetYNormal() int32 {
	if m != nil && m.YNormal != nil {
		return *m.YNormal
	}
	return 0
}

type CDOTAUserMsg_UnitEvent_FadeGesture struct {
	Activity         *int32 `protobuf:"varint,1,opt,name=activity" json:"activity,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_FadeGesture) Reset()         { *m = CDOTAUserMsg_UnitEvent_FadeGesture{} }
func (m *CDOTAUserMsg_UnitEvent_FadeGesture) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_FadeGesture) ProtoMessage()    {}
func (*CDOTAUserMsg_UnitEvent_FadeGesture) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{37, 5}
}

func (m *CDOTAUserMsg_UnitEvent_FadeGesture) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

type CDOTAUserMsg_ItemPurchased struct {
	ItemAbilityId    *int32 `protobuf:"varint,1,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ItemPurchased) Reset()                    { *m = CDOTAUserMsg_ItemPurchased{} }
func (m *CDOTAUserMsg_ItemPurchased) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ItemPurchased) ProtoMessage()               {}
func (*CDOTAUserMsg_ItemPurchased) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{38} }

func (m *CDOTAUserMsg_ItemPurchased) GetItemAbilityId() int32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

type CDOTAUserMsg_ItemSold struct {
	ItemAbilityId    *int32 `protobuf:"varint,1,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ItemSold) Reset()                    { *m = CDOTAUserMsg_ItemSold{} }
func (m *CDOTAUserMsg_ItemSold) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ItemSold) ProtoMessage()               {}
func (*CDOTAUserMsg_ItemSold) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{39} }

func (m *CDOTAUserMsg_ItemSold) GetItemAbilityId() int32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

type CDOTAUserMsg_ItemFound struct {
	Player           *int32 `protobuf:"varint,1,opt,name=player" json:"player,omitempty"`
	Quality          *int32 `protobuf:"varint,2,opt,name=quality" json:"quality,omitempty"`
	Rarity           *int32 `protobuf:"varint,3,opt,name=rarity" json:"rarity,omitempty"`
	Method           *int32 `protobuf:"varint,4,opt,name=method" json:"method,omitempty"`
	Itemdef          *int32 `protobuf:"varint,5,opt,name=itemdef" json:"itemdef,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ItemFound) Reset()                    { *m = CDOTAUserMsg_ItemFound{} }
func (m *CDOTAUserMsg_ItemFound) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ItemFound) ProtoMessage()               {}
func (*CDOTAUserMsg_ItemFound) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{40} }

func (m *CDOTAUserMsg_ItemFound) GetPlayer() int32 {
	if m != nil && m.Player != nil {
		return *m.Player
	}
	return 0
}

func (m *CDOTAUserMsg_ItemFound) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CDOTAUserMsg_ItemFound) GetRarity() int32 {
	if m != nil && m.Rarity != nil {
		return *m.Rarity
	}
	return 0
}

func (m *CDOTAUserMsg_ItemFound) GetMethod() int32 {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return 0
}

func (m *CDOTAUserMsg_ItemFound) GetItemdef() int32 {
	if m != nil && m.Itemdef != nil {
		return *m.Itemdef
	}
	return 0
}

type CDOTAUserMsg_OverheadEvent struct {
	MessageType          *DOTA_OVERHEAD_ALERT `protobuf:"varint,1,req,name=message_type,json=messageType,enum=dota.DOTA_OVERHEAD_ALERT,def=0" json:"message_type,omitempty"`
	Value                *int32               `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	TargetPlayerEntindex *int32               `protobuf:"varint,3,opt,name=target_player_entindex,json=targetPlayerEntindex" json:"target_player_entindex,omitempty"`
	TargetEntindex       *int32               `protobuf:"varint,4,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	SourcePlayerEntindex *int32               `protobuf:"varint,5,opt,name=source_player_entindex,json=sourcePlayerEntindex" json:"source_player_entindex,omitempty"`
	XXX_unrecognized     []byte               `json:"-"`
}

func (m *CDOTAUserMsg_OverheadEvent) Reset()                    { *m = CDOTAUserMsg_OverheadEvent{} }
func (m *CDOTAUserMsg_OverheadEvent) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_OverheadEvent) ProtoMessage()               {}
func (*CDOTAUserMsg_OverheadEvent) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{41} }

const Default_CDOTAUserMsg_OverheadEvent_MessageType DOTA_OVERHEAD_ALERT = DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_GOLD

func (m *CDOTAUserMsg_OverheadEvent) GetMessageType() DOTA_OVERHEAD_ALERT {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return Default_CDOTAUserMsg_OverheadEvent_MessageType
}

func (m *CDOTAUserMsg_OverheadEvent) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CDOTAUserMsg_OverheadEvent) GetTargetPlayerEntindex() int32 {
	if m != nil && m.TargetPlayerEntindex != nil {
		return *m.TargetPlayerEntindex
	}
	return 0
}

func (m *CDOTAUserMsg_OverheadEvent) GetTargetEntindex() int32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

func (m *CDOTAUserMsg_OverheadEvent) GetSourcePlayerEntindex() int32 {
	if m != nil && m.SourcePlayerEntindex != nil {
		return *m.SourcePlayerEntindex
	}
	return 0
}

type CDOTAUserMsg_TutorialTipInfo struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Progress         *int32  `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_TutorialTipInfo) Reset()                    { *m = CDOTAUserMsg_TutorialTipInfo{} }
func (m *CDOTAUserMsg_TutorialTipInfo) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialTipInfo) ProtoMessage()               {}
func (*CDOTAUserMsg_TutorialTipInfo) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{42} }

func (m *CDOTAUserMsg_TutorialTipInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CDOTAUserMsg_TutorialTipInfo) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

type CDOTAUserMsg_TutorialFinish struct {
	Heading          *string `protobuf:"bytes,1,opt,name=heading" json:"heading,omitempty"`
	Emblem           *string `protobuf:"bytes,2,opt,name=emblem" json:"emblem,omitempty"`
	Body             *string `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Success          *bool   `protobuf:"varint,4,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_TutorialFinish) Reset()                    { *m = CDOTAUserMsg_TutorialFinish{} }
func (m *CDOTAUserMsg_TutorialFinish) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialFinish) ProtoMessage()               {}
func (*CDOTAUserMsg_TutorialFinish) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{43} }

func (m *CDOTAUserMsg_TutorialFinish) GetHeading() string {
	if m != nil && m.Heading != nil {
		return *m.Heading
	}
	return ""
}

func (m *CDOTAUserMsg_TutorialFinish) GetEmblem() string {
	if m != nil && m.Emblem != nil {
		return *m.Emblem
	}
	return ""
}

func (m *CDOTAUserMsg_TutorialFinish) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *CDOTAUserMsg_TutorialFinish) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CDOTAUserMsg_TutorialMinimapPosition struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TutorialMinimapPosition) Reset()         { *m = CDOTAUserMsg_TutorialMinimapPosition{} }
func (m *CDOTAUserMsg_TutorialMinimapPosition) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialMinimapPosition) ProtoMessage()    {}
func (*CDOTAUserMsg_TutorialMinimapPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{44}
}

type CDOTAUserMsg_SendGenericToolTip struct {
	Title            *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Entindex         *int32  `protobuf:"varint,3,opt,name=entindex" json:"entindex,omitempty"`
	Close            *bool   `protobuf:"varint,4,opt,name=close" json:"close,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SendGenericToolTip) Reset()         { *m = CDOTAUserMsg_SendGenericToolTip{} }
func (m *CDOTAUserMsg_SendGenericToolTip) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendGenericToolTip) ProtoMessage()    {}
func (*CDOTAUserMsg_SendGenericToolTip) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{45}
}

func (m *CDOTAUserMsg_SendGenericToolTip) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CDOTAUserMsg_SendGenericToolTip) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CDOTAUserMsg_SendGenericToolTip) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_SendGenericToolTip) GetClose() bool {
	if m != nil && m.Close != nil {
		return *m.Close
	}
	return false
}

type CDOTAUserMsg_WorldLine struct {
	PlayerId         *int32              `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Worldline        *CDOTAMsg_WorldLine `protobuf:"bytes,2,opt,name=worldline" json:"worldline,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CDOTAUserMsg_WorldLine) Reset()                    { *m = CDOTAUserMsg_WorldLine{} }
func (m *CDOTAUserMsg_WorldLine) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_WorldLine) ProtoMessage()               {}
func (*CDOTAUserMsg_WorldLine) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{46} }

func (m *CDOTAUserMsg_WorldLine) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_WorldLine) GetWorldline() *CDOTAMsg_WorldLine {
	if m != nil {
		return m.Worldline
	}
	return nil
}

type CDOTAUserMsg_ChatWheel struct {
	ChatMessageId    *uint32 `protobuf:"varint,1,opt,name=chat_message_id,json=chatMessageId" json:"chat_message_id,omitempty"`
	PlayerId         *uint32 `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	AccountId        *uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ParamHeroId      *uint32 `protobuf:"varint,4,opt,name=param_hero_id,json=paramHeroId" json:"param_hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_ChatWheel) Reset()                    { *m = CDOTAUserMsg_ChatWheel{} }
func (m *CDOTAUserMsg_ChatWheel) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ChatWheel) ProtoMessage()               {}
func (*CDOTAUserMsg_ChatWheel) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{47} }

func (m *CDOTAUserMsg_ChatWheel) GetChatMessageId() uint32 {
	if m != nil && m.ChatMessageId != nil {
		return *m.ChatMessageId
	}
	return 0
}

func (m *CDOTAUserMsg_ChatWheel) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_ChatWheel) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CDOTAUserMsg_ChatWheel) GetParamHeroId() uint32 {
	if m != nil && m.ParamHeroId != nil {
		return *m.ParamHeroId
	}
	return 0
}

type CDOTAUserMsg_ReceivedXmasGift struct {
	PlayerId         *int32  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ItemName         *string `protobuf:"bytes,2,opt,name=item_name,json=itemName" json:"item_name,omitempty"`
	InventorySlot    *int32  `protobuf:"varint,3,opt,name=inventory_slot,json=inventorySlot" json:"inventory_slot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_ReceivedXmasGift) Reset()                    { *m = CDOTAUserMsg_ReceivedXmasGift{} }
func (m *CDOTAUserMsg_ReceivedXmasGift) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ReceivedXmasGift) ProtoMessage()               {}
func (*CDOTAUserMsg_ReceivedXmasGift) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{48} }

func (m *CDOTAUserMsg_ReceivedXmasGift) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_ReceivedXmasGift) GetItemName() string {
	if m != nil && m.ItemName != nil {
		return *m.ItemName
	}
	return ""
}

func (m *CDOTAUserMsg_ReceivedXmasGift) GetInventorySlot() int32 {
	if m != nil && m.InventorySlot != nil {
		return *m.InventorySlot
	}
	return 0
}

type CDOTAUserMsg_ShowSurvey struct {
	SurveyId          *int32  `protobuf:"varint,1,opt,name=survey_id,json=surveyId" json:"survey_id,omitempty"`
	MatchId           *uint64 `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	ResponseStyle     *string `protobuf:"bytes,3,opt,name=response_style,json=responseStyle" json:"response_style,omitempty"`
	TeammateHeroId    *uint32 `protobuf:"varint,4,opt,name=teammate_hero_id,json=teammateHeroId" json:"teammate_hero_id,omitempty"`
	TeammateName      *string `protobuf:"bytes,5,opt,name=teammate_name,json=teammateName" json:"teammate_name,omitempty"`
	TeammateAccountId *uint32 `protobuf:"varint,6,opt,name=teammate_account_id,json=teammateAccountId" json:"teammate_account_id,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CDOTAUserMsg_ShowSurvey) Reset()                    { *m = CDOTAUserMsg_ShowSurvey{} }
func (m *CDOTAUserMsg_ShowSurvey) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ShowSurvey) ProtoMessage()               {}
func (*CDOTAUserMsg_ShowSurvey) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{49} }

func (m *CDOTAUserMsg_ShowSurvey) GetSurveyId() int32 {
	if m != nil && m.SurveyId != nil {
		return *m.SurveyId
	}
	return 0
}

func (m *CDOTAUserMsg_ShowSurvey) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CDOTAUserMsg_ShowSurvey) GetResponseStyle() string {
	if m != nil && m.ResponseStyle != nil {
		return *m.ResponseStyle
	}
	return ""
}

func (m *CDOTAUserMsg_ShowSurvey) GetTeammateHeroId() uint32 {
	if m != nil && m.TeammateHeroId != nil {
		return *m.TeammateHeroId
	}
	return 0
}

func (m *CDOTAUserMsg_ShowSurvey) GetTeammateName() string {
	if m != nil && m.TeammateName != nil {
		return *m.TeammateName
	}
	return ""
}

func (m *CDOTAUserMsg_ShowSurvey) GetTeammateAccountId() uint32 {
	if m != nil && m.TeammateAccountId != nil {
		return *m.TeammateAccountId
	}
	return 0
}

type CDOTAUserMsg_UpdateSharedContent struct {
	SlotType         *int32 `protobuf:"varint,1,opt,name=slot_type,json=slotType" json:"slot_type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UpdateSharedContent) Reset()         { *m = CDOTAUserMsg_UpdateSharedContent{} }
func (m *CDOTAUserMsg_UpdateSharedContent) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UpdateSharedContent) ProtoMessage()    {}
func (*CDOTAUserMsg_UpdateSharedContent) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{50}
}

func (m *CDOTAUserMsg_UpdateSharedContent) GetSlotType() int32 {
	if m != nil && m.SlotType != nil {
		return *m.SlotType
	}
	return 0
}

type CDOTAUserMsg_TutorialRequestExp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TutorialRequestExp) Reset()         { *m = CDOTAUserMsg_TutorialRequestExp{} }
func (m *CDOTAUserMsg_TutorialRequestExp) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialRequestExp) ProtoMessage()    {}
func (*CDOTAUserMsg_TutorialRequestExp) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{51}
}

type CDOTAUserMsg_TutorialFade struct {
	TgtAlpha         *int32 `protobuf:"varint,1,opt,name=tgt_alpha,json=tgtAlpha" json:"tgt_alpha,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TutorialFade) Reset()                    { *m = CDOTAUserMsg_TutorialFade{} }
func (m *CDOTAUserMsg_TutorialFade) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialFade) ProtoMessage()               {}
func (*CDOTAUserMsg_TutorialFade) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{52} }

func (m *CDOTAUserMsg_TutorialFade) GetTgtAlpha() int32 {
	if m != nil && m.TgtAlpha != nil {
		return *m.TgtAlpha
	}
	return 0
}

type CDOTAUserMsg_TutorialPingMinimap struct {
	PlayerId         *uint32  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PosX             *float32 `protobuf:"fixed32,2,opt,name=pos_x,json=posX" json:"pos_x,omitempty"`
	PosY             *float32 `protobuf:"fixed32,3,opt,name=pos_y,json=posY" json:"pos_y,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,4,opt,name=pos_z,json=posZ" json:"pos_z,omitempty"`
	EntityIndex      *int32   `protobuf:"varint,5,opt,name=entity_index,json=entityIndex" json:"entity_index,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_TutorialPingMinimap) Reset()         { *m = CDOTAUserMsg_TutorialPingMinimap{} }
func (m *CDOTAUserMsg_TutorialPingMinimap) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialPingMinimap) ProtoMessage()    {}
func (*CDOTAUserMsg_TutorialPingMinimap) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{53}
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetPosX() float32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

type CDOTAUserMsg_GamerulesStateChanged struct {
	State            *uint32 `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_GamerulesStateChanged) Reset()         { *m = CDOTAUserMsg_GamerulesStateChanged{} }
func (m *CDOTAUserMsg_GamerulesStateChanged) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_GamerulesStateChanged) ProtoMessage()    {}
func (*CDOTAUserMsg_GamerulesStateChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{54}
}

func (m *CDOTAUserMsg_GamerulesStateChanged) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

type CDOTAUserMsg_AddQuestLogEntry struct {
	NpcName          *string `protobuf:"bytes,1,opt,name=npc_name,json=npcName" json:"npc_name,omitempty"`
	NpcDialog        *string `protobuf:"bytes,2,opt,name=npc_dialog,json=npcDialog" json:"npc_dialog,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_AddQuestLogEntry) Reset()                    { *m = CDOTAUserMsg_AddQuestLogEntry{} }
func (m *CDOTAUserMsg_AddQuestLogEntry) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AddQuestLogEntry) ProtoMessage()               {}
func (*CDOTAUserMsg_AddQuestLogEntry) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{55} }

func (m *CDOTAUserMsg_AddQuestLogEntry) GetNpcName() string {
	if m != nil && m.NpcName != nil {
		return *m.NpcName
	}
	return ""
}

func (m *CDOTAUserMsg_AddQuestLogEntry) GetNpcDialog() string {
	if m != nil && m.NpcDialog != nil {
		return *m.NpcDialog
	}
	return ""
}

type CDOTAUserMsg_SendStatPopup struct {
	PlayerId         *int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Statpopup        *CDOTAMsg_SendStatPopup `protobuf:"bytes,2,opt,name=statpopup" json:"statpopup,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CDOTAUserMsg_SendStatPopup) Reset()                    { *m = CDOTAUserMsg_SendStatPopup{} }
func (m *CDOTAUserMsg_SendStatPopup) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendStatPopup) ProtoMessage()               {}
func (*CDOTAUserMsg_SendStatPopup) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{56} }

func (m *CDOTAUserMsg_SendStatPopup) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_SendStatPopup) GetStatpopup() *CDOTAMsg_SendStatPopup {
	if m != nil {
		return m.Statpopup
	}
	return nil
}

type CDOTAUserMsg_DismissAllStatPopups struct {
	Dismissallmsg    *CDOTAMsg_DismissAllStatPopups `protobuf:"bytes,1,opt,name=dismissallmsg" json:"dismissallmsg,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CDOTAUserMsg_DismissAllStatPopups) Reset()         { *m = CDOTAUserMsg_DismissAllStatPopups{} }
func (m *CDOTAUserMsg_DismissAllStatPopups) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_DismissAllStatPopups) ProtoMessage()    {}
func (*CDOTAUserMsg_DismissAllStatPopups) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{57}
}

func (m *CDOTAUserMsg_DismissAllStatPopups) GetDismissallmsg() *CDOTAMsg_DismissAllStatPopups {
	if m != nil {
		return m.Dismissallmsg
	}
	return nil
}

type CDOTAUserMsg_SendRoshanSpectatorPhase struct {
	Phase            *DOTA_ROSHAN_PHASE `protobuf:"varint,1,opt,name=phase,enum=dota.DOTA_ROSHAN_PHASE,def=0" json:"phase,omitempty"`
	PhaseStartTime   *int32             `protobuf:"varint,2,opt,name=phase_start_time,json=phaseStartTime" json:"phase_start_time,omitempty"`
	PhaseLength      *int32             `protobuf:"varint,3,opt,name=phase_length,json=phaseLength" json:"phase_length,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CDOTAUserMsg_SendRoshanSpectatorPhase) Reset()         { *m = CDOTAUserMsg_SendRoshanSpectatorPhase{} }
func (m *CDOTAUserMsg_SendRoshanSpectatorPhase) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendRoshanSpectatorPhase) ProtoMessage()    {}
func (*CDOTAUserMsg_SendRoshanSpectatorPhase) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{58}
}

const Default_CDOTAUserMsg_SendRoshanSpectatorPhase_Phase DOTA_ROSHAN_PHASE = DOTA_ROSHAN_PHASE_k_SRSP_ROSHAN_ALIVE

func (m *CDOTAUserMsg_SendRoshanSpectatorPhase) GetPhase() DOTA_ROSHAN_PHASE {
	if m != nil && m.Phase != nil {
		return *m.Phase
	}
	return Default_CDOTAUserMsg_SendRoshanSpectatorPhase_Phase
}

func (m *CDOTAUserMsg_SendRoshanSpectatorPhase) GetPhaseStartTime() int32 {
	if m != nil && m.PhaseStartTime != nil {
		return *m.PhaseStartTime
	}
	return 0
}

func (m *CDOTAUserMsg_SendRoshanSpectatorPhase) GetPhaseLength() int32 {
	if m != nil && m.PhaseLength != nil {
		return *m.PhaseLength
	}
	return 0
}

type CDOTAUserMsg_SendRoshanPopup struct {
	Reclaimed        *bool  `protobuf:"varint,1,opt,name=reclaimed" json:"reclaimed,omitempty"`
	Gametime         *int32 `protobuf:"varint,2,opt,name=gametime" json:"gametime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_SendRoshanPopup) Reset()                    { *m = CDOTAUserMsg_SendRoshanPopup{} }
func (m *CDOTAUserMsg_SendRoshanPopup) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendRoshanPopup) ProtoMessage()               {}
func (*CDOTAUserMsg_SendRoshanPopup) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{59} }

func (m *CDOTAUserMsg_SendRoshanPopup) GetReclaimed() bool {
	if m != nil && m.Reclaimed != nil {
		return *m.Reclaimed
	}
	return false
}

func (m *CDOTAUserMsg_SendRoshanPopup) GetGametime() int32 {
	if m != nil && m.Gametime != nil {
		return *m.Gametime
	}
	return 0
}

type CDOTAUserMsg_SendFinalGold struct {
	ReliableGold     []uint32 `protobuf:"varint,1,rep,name=reliable_gold,json=reliableGold" json:"reliable_gold,omitempty"`
	UnreliableGold   []uint32 `protobuf:"varint,2,rep,name=unreliable_gold,json=unreliableGold" json:"unreliable_gold,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_SendFinalGold) Reset()                    { *m = CDOTAUserMsg_SendFinalGold{} }
func (m *CDOTAUserMsg_SendFinalGold) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendFinalGold) ProtoMessage()               {}
func (*CDOTAUserMsg_SendFinalGold) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{60} }

func (m *CDOTAUserMsg_SendFinalGold) GetReliableGold() []uint32 {
	if m != nil {
		return m.ReliableGold
	}
	return nil
}

func (m *CDOTAUserMsg_SendFinalGold) GetUnreliableGold() []uint32 {
	if m != nil {
		return m.UnreliableGold
	}
	return nil
}

type CDOTAUserMsg_CustomMsg struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	PlayerId         *int32  `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Value            *int32  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_CustomMsg) Reset()                    { *m = CDOTAUserMsg_CustomMsg{} }
func (m *CDOTAUserMsg_CustomMsg) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CustomMsg) ProtoMessage()               {}
func (*CDOTAUserMsg_CustomMsg) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{61} }

func (m *CDOTAUserMsg_CustomMsg) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CDOTAUserMsg_CustomMsg) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_CustomMsg) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CDOTAUserMsg_CoachHUDPing struct {
	PlayerId         *uint32                `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	HudPing          *CDOTAMsg_CoachHUDPing `protobuf:"bytes,2,opt,name=hud_ping,json=hudPing" json:"hud_ping,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CDOTAUserMsg_CoachHUDPing) Reset()                    { *m = CDOTAUserMsg_CoachHUDPing{} }
func (m *CDOTAUserMsg_CoachHUDPing) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CoachHUDPing) ProtoMessage()               {}
func (*CDOTAUserMsg_CoachHUDPing) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{62} }

func (m *CDOTAUserMsg_CoachHUDPing) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_CoachHUDPing) GetHudPing() *CDOTAMsg_CoachHUDPing {
	if m != nil {
		return m.HudPing
	}
	return nil
}

type CDOTAUserMsg_ClientLoadGridNav struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ClientLoadGridNav) Reset()         { *m = CDOTAUserMsg_ClientLoadGridNav{} }
func (m *CDOTAUserMsg_ClientLoadGridNav) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ClientLoadGridNav) ProtoMessage()    {}
func (*CDOTAUserMsg_ClientLoadGridNav) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{63}
}

type CDOTAUserMsg_TE_Projectile struct {
	HSource              *int32      `protobuf:"varint,1,opt,name=hSource" json:"hSource,omitempty"`
	HTarget              *int32      `protobuf:"varint,2,opt,name=hTarget" json:"hTarget,omitempty"`
	MoveSpeed            *int32      `protobuf:"varint,3,opt,name=moveSpeed" json:"moveSpeed,omitempty"`
	SourceAttachment     *int32      `protobuf:"varint,4,opt,name=sourceAttachment" json:"sourceAttachment,omitempty"`
	ParticleSystemHandle *int64      `protobuf:"varint,5,opt,name=particleSystemHandle" json:"particleSystemHandle,omitempty"`
	Dodgeable            *bool       `protobuf:"varint,6,opt,name=dodgeable" json:"dodgeable,omitempty"`
	IsAttack             *bool       `protobuf:"varint,7,opt,name=isAttack" json:"isAttack,omitempty"`
	ExpireTime           *float32    `protobuf:"fixed32,9,opt,name=expireTime" json:"expireTime,omitempty"`
	Maximpacttime        *float32    `protobuf:"fixed32,10,opt,name=maximpacttime" json:"maximpacttime,omitempty"`
	Colorgemcolor        *uint32     `protobuf:"fixed32,11,opt,name=colorgemcolor" json:"colorgemcolor,omitempty"`
	LaunchTick           *int32      `protobuf:"varint,12,opt,name=launch_tick,json=launchTick" json:"launch_tick,omitempty"`
	Handle               *int32      `protobuf:"varint,13,opt,name=handle" json:"handle,omitempty"`
	VTargetLoc           *CMsgVector `protobuf:"bytes,14,opt,name=vTargetLoc" json:"vTargetLoc,omitempty"`
	XXX_unrecognized     []byte      `json:"-"`
}

func (m *CDOTAUserMsg_TE_Projectile) Reset()                    { *m = CDOTAUserMsg_TE_Projectile{} }
func (m *CDOTAUserMsg_TE_Projectile) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_Projectile) ProtoMessage()               {}
func (*CDOTAUserMsg_TE_Projectile) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{64} }

func (m *CDOTAUserMsg_TE_Projectile) GetHSource() int32 {
	if m != nil && m.HSource != nil {
		return *m.HSource
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetHTarget() int32 {
	if m != nil && m.HTarget != nil {
		return *m.HTarget
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetMoveSpeed() int32 {
	if m != nil && m.MoveSpeed != nil {
		return *m.MoveSpeed
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetSourceAttachment() int32 {
	if m != nil && m.SourceAttachment != nil {
		return *m.SourceAttachment
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetParticleSystemHandle() int64 {
	if m != nil && m.ParticleSystemHandle != nil {
		return *m.ParticleSystemHandle
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetDodgeable() bool {
	if m != nil && m.Dodgeable != nil {
		return *m.Dodgeable
	}
	return false
}

func (m *CDOTAUserMsg_TE_Projectile) GetIsAttack() bool {
	if m != nil && m.IsAttack != nil {
		return *m.IsAttack
	}
	return false
}

func (m *CDOTAUserMsg_TE_Projectile) GetExpireTime() float32 {
	if m != nil && m.ExpireTime != nil {
		return *m.ExpireTime
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetMaximpacttime() float32 {
	if m != nil && m.Maximpacttime != nil {
		return *m.Maximpacttime
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetColorgemcolor() uint32 {
	if m != nil && m.Colorgemcolor != nil {
		return *m.Colorgemcolor
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetLaunchTick() int32 {
	if m != nil && m.LaunchTick != nil {
		return *m.LaunchTick
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetVTargetLoc() *CMsgVector {
	if m != nil {
		return m.VTargetLoc
	}
	return nil
}

type CDOTAUserMsg_TE_ProjectileLoc struct {
	VSourceLoc           *CMsgVector `protobuf:"bytes,1,opt,name=vSourceLoc" json:"vSourceLoc,omitempty"`
	HTarget              *int32      `protobuf:"varint,2,opt,name=hTarget" json:"hTarget,omitempty"`
	MoveSpeed            *int32      `protobuf:"varint,3,opt,name=moveSpeed" json:"moveSpeed,omitempty"`
	ParticleSystemHandle *int64      `protobuf:"varint,4,opt,name=particleSystemHandle" json:"particleSystemHandle,omitempty"`
	Dodgeable            *bool       `protobuf:"varint,5,opt,name=dodgeable" json:"dodgeable,omitempty"`
	IsAttack             *bool       `protobuf:"varint,6,opt,name=isAttack" json:"isAttack,omitempty"`
	ExpireTime           *float32    `protobuf:"fixed32,9,opt,name=expireTime" json:"expireTime,omitempty"`
	VTargetLoc           *CMsgVector `protobuf:"bytes,10,opt,name=vTargetLoc" json:"vTargetLoc,omitempty"`
	Colorgemcolor        *uint32     `protobuf:"fixed32,11,opt,name=colorgemcolor" json:"colorgemcolor,omitempty"`
	LaunchTick           *int32      `protobuf:"varint,12,opt,name=launch_tick,json=launchTick" json:"launch_tick,omitempty"`
	Handle               *int32      `protobuf:"varint,13,opt,name=handle" json:"handle,omitempty"`
	XXX_unrecognized     []byte      `json:"-"`
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) Reset()                    { *m = CDOTAUserMsg_TE_ProjectileLoc{} }
func (m *CDOTAUserMsg_TE_ProjectileLoc) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_ProjectileLoc) ProtoMessage()               {}
func (*CDOTAUserMsg_TE_ProjectileLoc) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{65} }

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetVSourceLoc() *CMsgVector {
	if m != nil {
		return m.VSourceLoc
	}
	return nil
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetHTarget() int32 {
	if m != nil && m.HTarget != nil {
		return *m.HTarget
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetMoveSpeed() int32 {
	if m != nil && m.MoveSpeed != nil {
		return *m.MoveSpeed
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetParticleSystemHandle() int64 {
	if m != nil && m.ParticleSystemHandle != nil {
		return *m.ParticleSystemHandle
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetDodgeable() bool {
	if m != nil && m.Dodgeable != nil {
		return *m.Dodgeable
	}
	return false
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetIsAttack() bool {
	if m != nil && m.IsAttack != nil {
		return *m.IsAttack
	}
	return false
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetExpireTime() float32 {
	if m != nil && m.ExpireTime != nil {
		return *m.ExpireTime
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetVTargetLoc() *CMsgVector {
	if m != nil {
		return m.VTargetLoc
	}
	return nil
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetColorgemcolor() uint32 {
	if m != nil && m.Colorgemcolor != nil {
		return *m.Colorgemcolor
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetLaunchTick() int32 {
	if m != nil && m.LaunchTick != nil {
		return *m.LaunchTick
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

type CDOTAUserMsg_TE_DestroyProjectile struct {
	Handle           *int32 `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TE_DestroyProjectile) Reset()         { *m = CDOTAUserMsg_TE_DestroyProjectile{} }
func (m *CDOTAUserMsg_TE_DestroyProjectile) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_DestroyProjectile) ProtoMessage()    {}
func (*CDOTAUserMsg_TE_DestroyProjectile) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{66}
}

func (m *CDOTAUserMsg_TE_DestroyProjectile) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

type CDOTAUserMsg_TE_DotaBloodImpact struct {
	Entity           *int32   `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	Scale            *float32 `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
	Xnormal          *float32 `protobuf:"fixed32,3,opt,name=xnormal" json:"xnormal,omitempty"`
	Ynormal          *float32 `protobuf:"fixed32,4,opt,name=ynormal" json:"ynormal,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) Reset()         { *m = CDOTAUserMsg_TE_DotaBloodImpact{} }
func (m *CDOTAUserMsg_TE_DotaBloodImpact) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_DotaBloodImpact) ProtoMessage()    {}
func (*CDOTAUserMsg_TE_DotaBloodImpact) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{67}
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) GetXnormal() float32 {
	if m != nil && m.Xnormal != nil {
		return *m.Xnormal
	}
	return 0
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) GetYnormal() float32 {
	if m != nil && m.Ynormal != nil {
		return *m.Ynormal
	}
	return 0
}

type CDOTAUserMsg_AbilityPing struct {
	PlayerId         *uint32                 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	AbilityId        *uint32                 `protobuf:"varint,2,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	Type             *DOTA_ABILITY_PING_TYPE `protobuf:"varint,3,opt,name=type,enum=dota.DOTA_ABILITY_PING_TYPE,def=1" json:"type,omitempty"`
	CooldownSeconds  *uint32                 `protobuf:"varint,4,opt,name=cooldown_seconds,json=cooldownSeconds" json:"cooldown_seconds,omitempty"`
	Level            *uint32                 `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Passive          *bool                   `protobuf:"varint,6,opt,name=passive" json:"passive,omitempty"`
	ManaNeeded       *uint32                 `protobuf:"varint,7,opt,name=mana_needed,json=manaNeeded" json:"mana_needed,omitempty"`
	EntityId         *uint32                 `protobuf:"varint,8,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	PrimaryCharges   *int32                  `protobuf:"varint,9,opt,name=primary_charges,json=primaryCharges" json:"primary_charges,omitempty"`
	SecondaryCharges *int32                  `protobuf:"varint,10,opt,name=secondary_charges,json=secondaryCharges" json:"secondary_charges,omitempty"`
	CasterId         *uint32                 `protobuf:"varint,11,opt,name=caster_id,json=casterId" json:"caster_id,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CDOTAUserMsg_AbilityPing) Reset()                    { *m = CDOTAUserMsg_AbilityPing{} }
func (m *CDOTAUserMsg_AbilityPing) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AbilityPing) ProtoMessage()               {}
func (*CDOTAUserMsg_AbilityPing) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{68} }

const Default_CDOTAUserMsg_AbilityPing_Type DOTA_ABILITY_PING_TYPE = DOTA_ABILITY_PING_TYPE_ABILITY_PING_READY

func (m *CDOTAUserMsg_AbilityPing) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetAbilityId() uint32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetType() DOTA_ABILITY_PING_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CDOTAUserMsg_AbilityPing_Type
}

func (m *CDOTAUserMsg_AbilityPing) GetCooldownSeconds() uint32 {
	if m != nil && m.CooldownSeconds != nil {
		return *m.CooldownSeconds
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetPassive() bool {
	if m != nil && m.Passive != nil {
		return *m.Passive
	}
	return false
}

func (m *CDOTAUserMsg_AbilityPing) GetManaNeeded() uint32 {
	if m != nil && m.ManaNeeded != nil {
		return *m.ManaNeeded
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetEntityId() uint32 {
	if m != nil && m.EntityId != nil {
		return *m.EntityId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetPrimaryCharges() int32 {
	if m != nil && m.PrimaryCharges != nil {
		return *m.PrimaryCharges
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetSecondaryCharges() int32 {
	if m != nil && m.SecondaryCharges != nil {
		return *m.SecondaryCharges
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetCasterId() uint32 {
	if m != nil && m.CasterId != nil {
		return *m.CasterId
	}
	return 0
}

type CDOTAUserMsg_TE_UnitAnimation struct {
	Entity           *int32   `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	SequenceVariant  *int32   `protobuf:"varint,2,opt,name=sequenceVariant" json:"sequenceVariant,omitempty"`
	Playbackrate     *float32 `protobuf:"fixed32,3,opt,name=playbackrate" json:"playbackrate,omitempty"`
	Castpoint        *float32 `protobuf:"fixed32,4,opt,name=castpoint" json:"castpoint,omitempty"`
	Type             *int32   `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	Activity         *int32   `protobuf:"varint,6,opt,name=activity" json:"activity,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_TE_UnitAnimation) Reset()                    { *m = CDOTAUserMsg_TE_UnitAnimation{} }
func (m *CDOTAUserMsg_TE_UnitAnimation) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_UnitAnimation) ProtoMessage()               {}
func (*CDOTAUserMsg_TE_UnitAnimation) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{69} }

func (m *CDOTAUserMsg_TE_UnitAnimation) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetSequenceVariant() int32 {
	if m != nil && m.SequenceVariant != nil {
		return *m.SequenceVariant
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetPlaybackrate() float32 {
	if m != nil && m.Playbackrate != nil {
		return *m.Playbackrate
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetCastpoint() float32 {
	if m != nil && m.Castpoint != nil {
		return *m.Castpoint
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

type CDOTAUserMsg_TE_UnitAnimationEnd struct {
	Entity           *int32 `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	Snap             *bool  `protobuf:"varint,2,opt,name=snap" json:"snap,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TE_UnitAnimationEnd) Reset()         { *m = CDOTAUserMsg_TE_UnitAnimationEnd{} }
func (m *CDOTAUserMsg_TE_UnitAnimationEnd) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_UnitAnimationEnd) ProtoMessage()    {}
func (*CDOTAUserMsg_TE_UnitAnimationEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{70}
}

func (m *CDOTAUserMsg_TE_UnitAnimationEnd) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimationEnd) GetSnap() bool {
	if m != nil && m.Snap != nil {
		return *m.Snap
	}
	return false
}

type CDOTAUserMsg_ShowGenericPopup struct {
	Header             *string `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Body               *string `protobuf:"bytes,2,req,name=body" json:"body,omitempty"`
	Param1             *string `protobuf:"bytes,3,opt,name=param1" json:"param1,omitempty"`
	Param2             *string `protobuf:"bytes,4,opt,name=param2" json:"param2,omitempty"`
	TintScreen         *bool   `protobuf:"varint,5,opt,name=tint_screen,json=tintScreen" json:"tint_screen,omitempty"`
	ShowNoOtherDialogs *bool   `protobuf:"varint,6,opt,name=show_no_other_dialogs,json=showNoOtherDialogs" json:"show_no_other_dialogs,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CDOTAUserMsg_ShowGenericPopup) Reset()                    { *m = CDOTAUserMsg_ShowGenericPopup{} }
func (m *CDOTAUserMsg_ShowGenericPopup) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ShowGenericPopup) ProtoMessage()               {}
func (*CDOTAUserMsg_ShowGenericPopup) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{71} }

func (m *CDOTAUserMsg_ShowGenericPopup) GetHeader() string {
	if m != nil && m.Header != nil {
		return *m.Header
	}
	return ""
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetParam1() string {
	if m != nil && m.Param1 != nil {
		return *m.Param1
	}
	return ""
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetParam2() string {
	if m != nil && m.Param2 != nil {
		return *m.Param2
	}
	return ""
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetTintScreen() bool {
	if m != nil && m.TintScreen != nil {
		return *m.TintScreen
	}
	return false
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetShowNoOtherDialogs() bool {
	if m != nil && m.ShowNoOtherDialogs != nil {
		return *m.ShowNoOtherDialogs
	}
	return false
}

type CDOTAUserMsg_VoteStart struct {
	Title            *string  `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	ChoiceCount      *int32   `protobuf:"varint,3,opt,name=choice_count,json=choiceCount" json:"choice_count,omitempty"`
	Choices          []string `protobuf:"bytes,4,rep,name=choices" json:"choices,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_VoteStart) Reset()                    { *m = CDOTAUserMsg_VoteStart{} }
func (m *CDOTAUserMsg_VoteStart) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_VoteStart) ProtoMessage()               {}
func (*CDOTAUserMsg_VoteStart) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{72} }

func (m *CDOTAUserMsg_VoteStart) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CDOTAUserMsg_VoteStart) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAUserMsg_VoteStart) GetChoiceCount() int32 {
	if m != nil && m.ChoiceCount != nil {
		return *m.ChoiceCount
	}
	return 0
}

func (m *CDOTAUserMsg_VoteStart) GetChoices() []string {
	if m != nil {
		return m.Choices
	}
	return nil
}

type CDOTAUserMsg_VoteUpdate struct {
	ChoiceCounts     []int32 `protobuf:"varint,1,rep,name=choice_counts,json=choiceCounts" json:"choice_counts,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_VoteUpdate) Reset()                    { *m = CDOTAUserMsg_VoteUpdate{} }
func (m *CDOTAUserMsg_VoteUpdate) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_VoteUpdate) ProtoMessage()               {}
func (*CDOTAUserMsg_VoteUpdate) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{73} }

func (m *CDOTAUserMsg_VoteUpdate) GetChoiceCounts() []int32 {
	if m != nil {
		return m.ChoiceCounts
	}
	return nil
}

type CDOTAUserMsg_VoteEnd struct {
	SelectedChoice   *int32 `protobuf:"varint,1,opt,name=selected_choice,json=selectedChoice" json:"selected_choice,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_VoteEnd) Reset()                    { *m = CDOTAUserMsg_VoteEnd{} }
func (m *CDOTAUserMsg_VoteEnd) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_VoteEnd) ProtoMessage()               {}
func (*CDOTAUserMsg_VoteEnd) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{74} }

func (m *CDOTAUserMsg_VoteEnd) GetSelectedChoice() int32 {
	if m != nil && m.SelectedChoice != nil {
		return *m.SelectedChoice
	}
	return 0
}

type CDOTAUserMsg_BoosterStatePlayer struct {
	PlayerId         *uint32  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Bonus            *float32 `protobuf:"fixed32,2,opt,name=bonus" json:"bonus,omitempty"`
	EventBonus       *float32 `protobuf:"fixed32,3,opt,name=event_bonus,json=eventBonus" json:"event_bonus,omitempty"`
	BonusItemId      *uint32  `protobuf:"varint,4,opt,name=bonus_item_id,json=bonusItemId" json:"bonus_item_id,omitempty"`
	EventBonusItemId *uint32  `protobuf:"varint,5,opt,name=event_bonus_item_id,json=eventBonusItemId" json:"event_bonus_item_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_BoosterStatePlayer) Reset()         { *m = CDOTAUserMsg_BoosterStatePlayer{} }
func (m *CDOTAUserMsg_BoosterStatePlayer) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_BoosterStatePlayer) ProtoMessage()    {}
func (*CDOTAUserMsg_BoosterStatePlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{75}
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetBonus() float32 {
	if m != nil && m.Bonus != nil {
		return *m.Bonus
	}
	return 0
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetEventBonus() float32 {
	if m != nil && m.EventBonus != nil {
		return *m.EventBonus
	}
	return 0
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetBonusItemId() uint32 {
	if m != nil && m.BonusItemId != nil {
		return *m.BonusItemId
	}
	return 0
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetEventBonusItemId() uint32 {
	if m != nil && m.EventBonusItemId != nil {
		return *m.EventBonusItemId
	}
	return 0
}

type CDOTAUserMsg_BoosterState struct {
	BoostedPlayers   []*CDOTAUserMsg_BoosterStatePlayer `protobuf:"bytes,1,rep,name=boosted_players,json=boostedPlayers" json:"boosted_players,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CDOTAUserMsg_BoosterState) Reset()                    { *m = CDOTAUserMsg_BoosterState{} }
func (m *CDOTAUserMsg_BoosterState) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_BoosterState) ProtoMessage()               {}
func (*CDOTAUserMsg_BoosterState) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{76} }

func (m *CDOTAUserMsg_BoosterState) GetBoostedPlayers() []*CDOTAUserMsg_BoosterStatePlayer {
	if m != nil {
		return m.BoostedPlayers
	}
	return nil
}

type CDOTAUserMsg_PlayerMMR struct {
	Mmr              []int32 `protobuf:"zigzag32,1,rep,packed,name=mmr" json:"mmr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_PlayerMMR) Reset()                    { *m = CDOTAUserMsg_PlayerMMR{} }
func (m *CDOTAUserMsg_PlayerMMR) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_PlayerMMR) ProtoMessage()               {}
func (*CDOTAUserMsg_PlayerMMR) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{77} }

func (m *CDOTAUserMsg_PlayerMMR) GetMmr() []int32 {
	if m != nil {
		return m.Mmr
	}
	return nil
}

type CDOTAUserMsg_AbilitySteal struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	AbilityId        *uint32 `protobuf:"varint,2,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	AbilityLevel     *uint32 `protobuf:"varint,3,opt,name=ability_level,json=abilityLevel" json:"ability_level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_AbilitySteal) Reset()                    { *m = CDOTAUserMsg_AbilitySteal{} }
func (m *CDOTAUserMsg_AbilitySteal) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AbilitySteal) ProtoMessage()               {}
func (*CDOTAUserMsg_AbilitySteal) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{78} }

func (m *CDOTAUserMsg_AbilitySteal) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilitySteal) GetAbilityId() uint32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilitySteal) GetAbilityLevel() uint32 {
	if m != nil && m.AbilityLevel != nil {
		return *m.AbilityLevel
	}
	return 0
}

type CDOTAUserMsg_StatsHeroLookup struct {
	PlayerId         *int32  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	HeroId           *int32  `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	HeroName         *string `protobuf:"bytes,3,opt,name=hero_name,json=heroName" json:"hero_name,omitempty"`
	Persona          *string `protobuf:"bytes,4,opt,name=persona" json:"persona,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_StatsHeroLookup) Reset()                    { *m = CDOTAUserMsg_StatsHeroLookup{} }
func (m *CDOTAUserMsg_StatsHeroLookup) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_StatsHeroLookup) ProtoMessage()               {}
func (*CDOTAUserMsg_StatsHeroLookup) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{79} }

func (m *CDOTAUserMsg_StatsHeroLookup) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroLookup) GetHeroId() int32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroLookup) GetHeroName() string {
	if m != nil && m.HeroName != nil {
		return *m.HeroName
	}
	return ""
}

func (m *CDOTAUserMsg_StatsHeroLookup) GetPersona() string {
	if m != nil && m.Persona != nil {
		return *m.Persona
	}
	return ""
}

type CDOTAUserMsg_StatsHeroPositionInfo struct {
	AveragePosition  *float32                                           `protobuf:"fixed32,1,opt,name=average_position,json=averagePosition" json:"average_position,omitempty"`
	PositionDetails  []*CDOTAUserMsg_StatsHeroPositionInfo_PositionPair `protobuf:"bytes,2,rep,name=position_details,json=positionDetails" json:"position_details,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *CDOTAUserMsg_StatsHeroPositionInfo) Reset()         { *m = CDOTAUserMsg_StatsHeroPositionInfo{} }
func (m *CDOTAUserMsg_StatsHeroPositionInfo) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_StatsHeroPositionInfo) ProtoMessage()    {}
func (*CDOTAUserMsg_StatsHeroPositionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{80}
}

func (m *CDOTAUserMsg_StatsHeroPositionInfo) GetAveragePosition() float32 {
	if m != nil && m.AveragePosition != nil {
		return *m.AveragePosition
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroPositionInfo) GetPositionDetails() []*CDOTAUserMsg_StatsHeroPositionInfo_PositionPair {
	if m != nil {
		return m.PositionDetails
	}
	return nil
}

type CDOTAUserMsg_StatsHeroPositionInfo_PositionPair struct {
	PositionCategory *DOTA_POSITION_CATEGORY `protobuf:"varint,1,opt,name=position_category,json=positionCategory,enum=dota.DOTA_POSITION_CATEGORY,def=0" json:"position_category,omitempty"`
	PositionCount    *uint32                 `protobuf:"varint,2,opt,name=position_count,json=positionCount" json:"position_count,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CDOTAUserMsg_StatsHeroPositionInfo_PositionPair) Reset() {
	*m = CDOTAUserMsg_StatsHeroPositionInfo_PositionPair{}
}
func (m *CDOTAUserMsg_StatsHeroPositionInfo_PositionPair) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_StatsHeroPositionInfo_PositionPair) ProtoMessage() {}
func (*CDOTAUserMsg_StatsHeroPositionInfo_PositionPair) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{80, 0}
}

const Default_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_PositionCategory DOTA_POSITION_CATEGORY = DOTA_POSITION_CATEGORY_DOTA_POSITION_NONE

func (m *CDOTAUserMsg_StatsHeroPositionInfo_PositionPair) GetPositionCategory() DOTA_POSITION_CATEGORY {
	if m != nil && m.PositionCategory != nil {
		return *m.PositionCategory
	}
	return Default_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_PositionCategory
}

func (m *CDOTAUserMsg_StatsHeroPositionInfo_PositionPair) GetPositionCount() uint32 {
	if m != nil && m.PositionCount != nil {
		return *m.PositionCount
	}
	return 0
}

type CDOTAUserMsg_StatsHeroMinuteDetails struct {
	LastHits           *uint32                             `protobuf:"varint,1,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	HeroKills          *uint32                             `protobuf:"varint,2,opt,name=hero_kills,json=heroKills" json:"hero_kills,omitempty"`
	HeroDamage         *uint32                             `protobuf:"varint,3,opt,name=hero_damage,json=heroDamage" json:"hero_damage,omitempty"`
	TowerDamage        *uint32                             `protobuf:"varint,4,opt,name=tower_damage,json=towerDamage" json:"tower_damage,omitempty"`
	PositionInfo       *CDOTAUserMsg_StatsHeroPositionInfo `protobuf:"bytes,5,opt,name=position_info,json=positionInfo" json:"position_info,omitempty"`
	TotalXp            *uint32                             `protobuf:"varint,6,opt,name=total_xp,json=totalXp" json:"total_xp,omitempty"`
	NetWorth           *uint32                             `protobuf:"varint,7,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	HarvestedCreepGold *uint32                             `protobuf:"varint,8,opt,name=harvested_creep_gold,json=harvestedCreepGold" json:"harvested_creep_gold,omitempty"`
	ClaimedFarm        *uint32                             `protobuf:"varint,9,opt,name=claimed_farm,json=claimedFarm" json:"claimed_farm,omitempty"`
	WardsPlaced        *uint32                             `protobuf:"varint,10,opt,name=wards_placed,json=wardsPlaced" json:"wards_placed,omitempty"`
	RunesCollected     *uint32                             `protobuf:"varint,11,opt,name=runes_collected,json=runesCollected" json:"runes_collected,omitempty"`
	TpsUsed            *uint32                             `protobuf:"varint,12,opt,name=tps_used,json=tpsUsed" json:"tps_used,omitempty"`
	ManaSpent          []uint32                            `protobuf:"varint,13,rep,name=mana_spent,json=manaSpent" json:"mana_spent,omitempty"`
	DamageAbsorbed     []uint32                            `protobuf:"varint,14,rep,name=damage_absorbed,json=damageAbsorbed" json:"damage_absorbed,omitempty"`
	DamageDone         []uint32                            `protobuf:"varint,15,rep,name=damage_done,json=damageDone" json:"damage_done,omitempty"`
	XXX_unrecognized   []byte                              `json:"-"`
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) Reset()         { *m = CDOTAUserMsg_StatsHeroMinuteDetails{} }
func (m *CDOTAUserMsg_StatsHeroMinuteDetails) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_StatsHeroMinuteDetails) ProtoMessage()    {}
func (*CDOTAUserMsg_StatsHeroMinuteDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{81}
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetHeroKills() uint32 {
	if m != nil && m.HeroKills != nil {
		return *m.HeroKills
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetHeroDamage() uint32 {
	if m != nil && m.HeroDamage != nil {
		return *m.HeroDamage
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetTowerDamage() uint32 {
	if m != nil && m.TowerDamage != nil {
		return *m.TowerDamage
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetPositionInfo() *CDOTAUserMsg_StatsHeroPositionInfo {
	if m != nil {
		return m.PositionInfo
	}
	return nil
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetTotalXp() uint32 {
	if m != nil && m.TotalXp != nil {
		return *m.TotalXp
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetNetWorth() uint32 {
	if m != nil && m.NetWorth != nil {
		return *m.NetWorth
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetHarvestedCreepGold() uint32 {
	if m != nil && m.HarvestedCreepGold != nil {
		return *m.HarvestedCreepGold
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetClaimedFarm() uint32 {
	if m != nil && m.ClaimedFarm != nil {
		return *m.ClaimedFarm
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetWardsPlaced() uint32 {
	if m != nil && m.WardsPlaced != nil {
		return *m.WardsPlaced
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetRunesCollected() uint32 {
	if m != nil && m.RunesCollected != nil {
		return *m.RunesCollected
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetTpsUsed() uint32 {
	if m != nil && m.TpsUsed != nil {
		return *m.TpsUsed
	}
	return 0
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetManaSpent() []uint32 {
	if m != nil {
		return m.ManaSpent
	}
	return nil
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetDamageAbsorbed() []uint32 {
	if m != nil {
		return m.DamageAbsorbed
	}
	return nil
}

func (m *CDOTAUserMsg_StatsHeroMinuteDetails) GetDamageDone() []uint32 {
	if m != nil {
		return m.DamageDone
	}
	return nil
}

type CDOTAUserMsg_StatsTeamMinuteDetails struct {
	PlayerStats            []*CDOTAUserMsg_StatsHeroMinuteDetails                     `protobuf:"bytes,1,rep,name=player_stats,json=playerStats" json:"player_stats,omitempty"`
	TowerKills             *uint32                                                    `protobuf:"varint,2,opt,name=tower_kills,json=towerKills" json:"tower_kills,omitempty"`
	BarrackKills           *uint32                                                    `protobuf:"varint,3,opt,name=barrack_kills,json=barrackKills" json:"barrack_kills,omitempty"`
	AvailableLaneCreepGold *uint32                                                    `protobuf:"varint,4,opt,name=available_lane_creep_gold,json=availableLaneCreepGold" json:"available_lane_creep_gold,omitempty"`
	BalanceKillValue       *uint32                                                    `protobuf:"varint,5,opt,name=balance_kill_value,json=balanceKillValue" json:"balance_kill_value,omitempty"`
	BalanceTowerValue      *uint32                                                    `protobuf:"varint,6,opt,name=balance_tower_value,json=balanceTowerValue" json:"balance_tower_value,omitempty"`
	BalanceBarracksValue   *uint32                                                    `protobuf:"varint,7,opt,name=balance_barracks_value,json=balanceBarracksValue" json:"balance_barracks_value,omitempty"`
	BalanceGoldValue       *uint32                                                    `protobuf:"varint,8,opt,name=balance_gold_value,json=balanceGoldValue" json:"balance_gold_value,omitempty"`
	BalanceXpValue         *uint32                                                    `protobuf:"varint,9,opt,name=balance_xp_value,json=balanceXpValue" json:"balance_xp_value,omitempty"`
	LanePerformance        []*CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance `protobuf:"bytes,10,rep,name=lane_performance,json=lanePerformance" json:"lane_performance,omitempty"`
	XXX_unrecognized       []byte                                                     `json:"-"`
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) Reset()         { *m = CDOTAUserMsg_StatsTeamMinuteDetails{} }
func (m *CDOTAUserMsg_StatsTeamMinuteDetails) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_StatsTeamMinuteDetails) ProtoMessage()    {}
func (*CDOTAUserMsg_StatsTeamMinuteDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{82}
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetPlayerStats() []*CDOTAUserMsg_StatsHeroMinuteDetails {
	if m != nil {
		return m.PlayerStats
	}
	return nil
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetTowerKills() uint32 {
	if m != nil && m.TowerKills != nil {
		return *m.TowerKills
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetBarrackKills() uint32 {
	if m != nil && m.BarrackKills != nil {
		return *m.BarrackKills
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetAvailableLaneCreepGold() uint32 {
	if m != nil && m.AvailableLaneCreepGold != nil {
		return *m.AvailableLaneCreepGold
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetBalanceKillValue() uint32 {
	if m != nil && m.BalanceKillValue != nil {
		return *m.BalanceKillValue
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetBalanceTowerValue() uint32 {
	if m != nil && m.BalanceTowerValue != nil {
		return *m.BalanceTowerValue
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetBalanceBarracksValue() uint32 {
	if m != nil && m.BalanceBarracksValue != nil {
		return *m.BalanceBarracksValue
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetBalanceGoldValue() uint32 {
	if m != nil && m.BalanceGoldValue != nil {
		return *m.BalanceGoldValue
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetBalanceXpValue() uint32 {
	if m != nil && m.BalanceXpValue != nil {
		return *m.BalanceXpValue
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails) GetLanePerformance() []*CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance {
	if m != nil {
		return m.LanePerformance
	}
	return nil
}

type CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance struct {
	LocationCategory *uint32 `protobuf:"varint,1,opt,name=location_category,json=locationCategory" json:"location_category,omitempty"`
	StatType         *uint32 `protobuf:"varint,2,opt,name=stat_type,json=statType" json:"stat_type,omitempty"`
	Value            *uint32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance) Reset() {
	*m = CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance{}
}
func (m *CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance) ProtoMessage() {}
func (*CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{82, 0}
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance) GetLocationCategory() uint32 {
	if m != nil && m.LocationCategory != nil {
		return *m.LocationCategory
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance) GetStatType() uint32 {
	if m != nil && m.StatType != nil {
		return *m.StatType
	}
	return 0
}

func (m *CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CDOTAUserMsg_StatsPlayerKillShare struct {
	PlayerId         *int32   `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	KillSharePercent *float32 `protobuf:"fixed32,2,opt,name=kill_share_percent,json=killSharePercent" json:"kill_share_percent,omitempty"`
	PlayerLocX       *float32 `protobuf:"fixed32,3,opt,name=player_loc_x,json=playerLocX" json:"player_loc_x,omitempty"`
	PlayerLocY       *float32 `protobuf:"fixed32,4,opt,name=player_loc_y,json=playerLocY" json:"player_loc_y,omitempty"`
	HealthPercent    *float32 `protobuf:"fixed32,5,opt,name=health_percent,json=healthPercent" json:"health_percent,omitempty"`
	ManaPercent      *float32 `protobuf:"fixed32,6,opt,name=mana_percent,json=manaPercent" json:"mana_percent,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_StatsPlayerKillShare) Reset()         { *m = CDOTAUserMsg_StatsPlayerKillShare{} }
func (m *CDOTAUserMsg_StatsPlayerKillShare) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_StatsPlayerKillShare) ProtoMessage()    {}
func (*CDOTAUserMsg_StatsPlayerKillShare) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{83}
}

func (m *CDOTAUserMsg_StatsPlayerKillShare) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_StatsPlayerKillShare) GetKillSharePercent() float32 {
	if m != nil && m.KillSharePercent != nil {
		return *m.KillSharePercent
	}
	return 0
}

func (m *CDOTAUserMsg_StatsPlayerKillShare) GetPlayerLocX() float32 {
	if m != nil && m.PlayerLocX != nil {
		return *m.PlayerLocX
	}
	return 0
}

func (m *CDOTAUserMsg_StatsPlayerKillShare) GetPlayerLocY() float32 {
	if m != nil && m.PlayerLocY != nil {
		return *m.PlayerLocY
	}
	return 0
}

func (m *CDOTAUserMsg_StatsPlayerKillShare) GetHealthPercent() float32 {
	if m != nil && m.HealthPercent != nil {
		return *m.HealthPercent
	}
	return 0
}

func (m *CDOTAUserMsg_StatsPlayerKillShare) GetManaPercent() float32 {
	if m != nil && m.ManaPercent != nil {
		return *m.ManaPercent
	}
	return 0
}

type CDOTAUserMsg_StatsKillDetails struct {
	VictimId         *uint32                              `protobuf:"varint,1,opt,name=victim_id,json=victimId" json:"victim_id,omitempty"`
	KillShares       []*CDOTAUserMsg_StatsPlayerKillShare `protobuf:"bytes,2,rep,name=kill_shares,json=killShares" json:"kill_shares,omitempty"`
	DamageToKill     *uint32                              `protobuf:"varint,3,opt,name=damage_to_kill,json=damageToKill" json:"damage_to_kill,omitempty"`
	EffectiveHealth  *uint32                              `protobuf:"varint,4,opt,name=effective_health,json=effectiveHealth" json:"effective_health,omitempty"`
	DeathTime        *float32                             `protobuf:"fixed32,5,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`
	KillerId         *uint32                              `protobuf:"varint,6,opt,name=killer_id,json=killerId" json:"killer_id,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CDOTAUserMsg_StatsKillDetails) Reset()                    { *m = CDOTAUserMsg_StatsKillDetails{} }
func (m *CDOTAUserMsg_StatsKillDetails) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_StatsKillDetails) ProtoMessage()               {}
func (*CDOTAUserMsg_StatsKillDetails) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{84} }

func (m *CDOTAUserMsg_StatsKillDetails) GetVictimId() uint32 {
	if m != nil && m.VictimId != nil {
		return *m.VictimId
	}
	return 0
}

func (m *CDOTAUserMsg_StatsKillDetails) GetKillShares() []*CDOTAUserMsg_StatsPlayerKillShare {
	if m != nil {
		return m.KillShares
	}
	return nil
}

func (m *CDOTAUserMsg_StatsKillDetails) GetDamageToKill() uint32 {
	if m != nil && m.DamageToKill != nil {
		return *m.DamageToKill
	}
	return 0
}

func (m *CDOTAUserMsg_StatsKillDetails) GetEffectiveHealth() uint32 {
	if m != nil && m.EffectiveHealth != nil {
		return *m.EffectiveHealth
	}
	return 0
}

func (m *CDOTAUserMsg_StatsKillDetails) GetDeathTime() float32 {
	if m != nil && m.DeathTime != nil {
		return *m.DeathTime
	}
	return 0
}

func (m *CDOTAUserMsg_StatsKillDetails) GetKillerId() uint32 {
	if m != nil && m.KillerId != nil {
		return *m.KillerId
	}
	return 0
}

type CDOTAUserMsg_StatsMatchDetails struct {
	HeroLookup       []*CDOTAUserMsg_StatsHeroLookup                                  `protobuf:"bytes,1,rep,name=hero_lookup,json=heroLookup" json:"hero_lookup,omitempty"`
	RadiantStats     []*CDOTAUserMsg_StatsTeamMinuteDetails                           `protobuf:"bytes,2,rep,name=radiant_stats,json=radiantStats" json:"radiant_stats,omitempty"`
	DireStats        []*CDOTAUserMsg_StatsTeamMinuteDetails                           `protobuf:"bytes,3,rep,name=dire_stats,json=direStats" json:"dire_stats,omitempty"`
	RadiantKills     []*CDOTAUserMsg_StatsKillDetails                                 `protobuf:"bytes,4,rep,name=radiant_kills,json=radiantKills" json:"radiant_kills,omitempty"`
	DireKills        []*CDOTAUserMsg_StatsKillDetails                                 `protobuf:"bytes,5,rep,name=dire_kills,json=direKills" json:"dire_kills,omitempty"`
	FightDetails     []*CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails `protobuf:"bytes,6,rep,name=fight_details,json=fightDetails" json:"fight_details,omitempty"`
	XXX_unrecognized []byte                                                           `json:"-"`
}

func (m *CDOTAUserMsg_StatsMatchDetails) Reset()         { *m = CDOTAUserMsg_StatsMatchDetails{} }
func (m *CDOTAUserMsg_StatsMatchDetails) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_StatsMatchDetails) ProtoMessage()    {}
func (*CDOTAUserMsg_StatsMatchDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{85}
}

func (m *CDOTAUserMsg_StatsMatchDetails) GetHeroLookup() []*CDOTAUserMsg_StatsHeroLookup {
	if m != nil {
		return m.HeroLookup
	}
	return nil
}

func (m *CDOTAUserMsg_StatsMatchDetails) GetRadiantStats() []*CDOTAUserMsg_StatsTeamMinuteDetails {
	if m != nil {
		return m.RadiantStats
	}
	return nil
}

func (m *CDOTAUserMsg_StatsMatchDetails) GetDireStats() []*CDOTAUserMsg_StatsTeamMinuteDetails {
	if m != nil {
		return m.DireStats
	}
	return nil
}

func (m *CDOTAUserMsg_StatsMatchDetails) GetRadiantKills() []*CDOTAUserMsg_StatsKillDetails {
	if m != nil {
		return m.RadiantKills
	}
	return nil
}

func (m *CDOTAUserMsg_StatsMatchDetails) GetDireKills() []*CDOTAUserMsg_StatsKillDetails {
	if m != nil {
		return m.DireKills
	}
	return nil
}

func (m *CDOTAUserMsg_StatsMatchDetails) GetFightDetails() []*CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails {
	if m != nil {
		return m.FightDetails
	}
	return nil
}

type CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails struct {
	Participants     []uint32 `protobuf:"varint,1,rep,name=participants" json:"participants,omitempty"`
	Deaths           []uint32 `protobuf:"varint,2,rep,name=deaths" json:"deaths,omitempty"`
	GoldDelta        *uint32  `protobuf:"varint,3,opt,name=gold_delta,json=goldDelta" json:"gold_delta,omitempty"`
	XpDelta          *uint32  `protobuf:"varint,4,opt,name=xp_delta,json=xpDelta" json:"xp_delta,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails) Reset() {
	*m = CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails{}
}
func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails) ProtoMessage() {}
func (*CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{85, 0}
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails) GetParticipants() []uint32 {
	if m != nil {
		return m.Participants
	}
	return nil
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails) GetDeaths() []uint32 {
	if m != nil {
		return m.Deaths
	}
	return nil
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails) GetGoldDelta() uint32 {
	if m != nil && m.GoldDelta != nil {
		return *m.GoldDelta
	}
	return 0
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails) GetXpDelta() uint32 {
	if m != nil && m.XpDelta != nil {
		return *m.XpDelta
	}
	return 0
}

type CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails struct {
	StartTime           *float32                                                           `protobuf:"fixed32,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime             *float32                                                           `protobuf:"fixed32,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	RadiantFightDetails *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails `protobuf:"bytes,3,opt,name=radiant_fight_details,json=radiantFightDetails" json:"radiant_fight_details,omitempty"`
	DireFightDetails    *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails `protobuf:"bytes,4,opt,name=dire_fight_details,json=direFightDetails" json:"dire_fight_details,omitempty"`
	XXX_unrecognized    []byte                                                             `json:"-"`
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails) Reset() {
	*m = CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails{}
}
func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails) ProtoMessage() {}
func (*CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{85, 1}
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails) GetStartTime() float32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails) GetEndTime() float32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails) GetRadiantFightDetails() *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails {
	if m != nil {
		return m.RadiantFightDetails
	}
	return nil
}

func (m *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails) GetDireFightDetails() *CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails {
	if m != nil {
		return m.DireFightDetails
	}
	return nil
}

type CDOTAUserMsg_MiniTaunt struct {
	TauntingPlayerId *uint32 `protobuf:"varint,1,opt,name=taunting_player_id,json=tauntingPlayerId" json:"taunting_player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_MiniTaunt) Reset()                    { *m = CDOTAUserMsg_MiniTaunt{} }
func (m *CDOTAUserMsg_MiniTaunt) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MiniTaunt) ProtoMessage()               {}
func (*CDOTAUserMsg_MiniTaunt) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{86} }

func (m *CDOTAUserMsg_MiniTaunt) GetTauntingPlayerId() uint32 {
	if m != nil && m.TauntingPlayerId != nil {
		return *m.TauntingPlayerId
	}
	return 0
}

type CDOTAUserMsg_SpeechBubble struct {
	DestroyAll       *bool  `protobuf:"varint,1,opt,name=destroy_all,json=destroyAll" json:"destroy_all,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_SpeechBubble) Reset()                    { *m = CDOTAUserMsg_SpeechBubble{} }
func (m *CDOTAUserMsg_SpeechBubble) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SpeechBubble) ProtoMessage()               {}
func (*CDOTAUserMsg_SpeechBubble) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{87} }

func (m *CDOTAUserMsg_SpeechBubble) GetDestroyAll() bool {
	if m != nil && m.DestroyAll != nil {
		return *m.DestroyAll
	}
	return false
}

type CDOTAUserMsg_CustomHeaderMessage struct {
	PlayerId         *uint32  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	Message          *string  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Value            *int32   `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_CustomHeaderMessage) Reset()         { *m = CDOTAUserMsg_CustomHeaderMessage{} }
func (m *CDOTAUserMsg_CustomHeaderMessage) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CustomHeaderMessage) ProtoMessage()    {}
func (*CDOTAUserMsg_CustomHeaderMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{88}
}

func (m *CDOTAUserMsg_CustomHeaderMessage) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_CustomHeaderMessage) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAUserMsg_CustomHeaderMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CDOTAUserMsg_CustomHeaderMessage) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CMsgHeroAbilityStat struct {
	StatType         *EHeroStatType `protobuf:"varint,1,opt,name=stat_type,json=statType,enum=dota.EHeroStatType,def=0" json:"stat_type,omitempty"`
	IntValue         *int32         `protobuf:"varint,2,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
	FloatValue       *float32       `protobuf:"fixed32,3,opt,name=float_value,json=floatValue" json:"float_value,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CMsgHeroAbilityStat) Reset()                    { *m = CMsgHeroAbilityStat{} }
func (m *CMsgHeroAbilityStat) String() string            { return proto.CompactTextString(m) }
func (*CMsgHeroAbilityStat) ProtoMessage()               {}
func (*CMsgHeroAbilityStat) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{89} }

const Default_CMsgHeroAbilityStat_StatType EHeroStatType = EHeroStatType_k_EHeroStatType_None

func (m *CMsgHeroAbilityStat) GetStatType() EHeroStatType {
	if m != nil && m.StatType != nil {
		return *m.StatType
	}
	return Default_CMsgHeroAbilityStat_StatType
}

func (m *CMsgHeroAbilityStat) GetIntValue() int32 {
	if m != nil && m.IntValue != nil {
		return *m.IntValue
	}
	return 0
}

func (m *CMsgHeroAbilityStat) GetFloatValue() float32 {
	if m != nil && m.FloatValue != nil {
		return *m.FloatValue
	}
	return 0
}

type CMsgCombatAnalyzerPlayerStat struct {
	AccountId        *uint32                `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroAbilityStats []*CMsgHeroAbilityStat `protobuf:"bytes,2,rep,name=hero_ability_stats,json=heroAbilityStats" json:"hero_ability_stats,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CMsgCombatAnalyzerPlayerStat) Reset()                    { *m = CMsgCombatAnalyzerPlayerStat{} }
func (m *CMsgCombatAnalyzerPlayerStat) String() string            { return proto.CompactTextString(m) }
func (*CMsgCombatAnalyzerPlayerStat) ProtoMessage()               {}
func (*CMsgCombatAnalyzerPlayerStat) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{90} }

func (m *CMsgCombatAnalyzerPlayerStat) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgCombatAnalyzerPlayerStat) GetHeroAbilityStats() []*CMsgHeroAbilityStat {
	if m != nil {
		return m.HeroAbilityStats
	}
	return nil
}

type CMsgCombatAnalyzerStats struct {
	MatchId          *uint64                         `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	PlayerStats      []*CMsgCombatAnalyzerPlayerStat `protobuf:"bytes,2,rep,name=player_stats,json=playerStats" json:"player_stats,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CMsgCombatAnalyzerStats) Reset()                    { *m = CMsgCombatAnalyzerStats{} }
func (m *CMsgCombatAnalyzerStats) String() string            { return proto.CompactTextString(m) }
func (*CMsgCombatAnalyzerStats) ProtoMessage()               {}
func (*CMsgCombatAnalyzerStats) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{91} }

func (m *CMsgCombatAnalyzerStats) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgCombatAnalyzerStats) GetPlayerStats() []*CMsgCombatAnalyzerPlayerStat {
	if m != nil {
		return m.PlayerStats
	}
	return nil
}

type CDOTAUserMsg_BeastChat struct {
	Team             *uint32 `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	Format           *string `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Target           *string `protobuf:"bytes,4,opt,name=target" json:"target,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_BeastChat) Reset()                    { *m = CDOTAUserMsg_BeastChat{} }
func (m *CDOTAUserMsg_BeastChat) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_BeastChat) ProtoMessage()               {}
func (*CDOTAUserMsg_BeastChat) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{92} }

func (m *CDOTAUserMsg_BeastChat) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CDOTAUserMsg_BeastChat) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *CDOTAUserMsg_BeastChat) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CDOTAUserMsg_BeastChat) GetTarget() string {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return ""
}

type CDOTAUserMsg_CustomHudElement_Create struct {
	ElementId        *string `protobuf:"bytes,1,opt,name=element_id,json=elementId" json:"element_id,omitempty"`
	LayoutFilename   *string `protobuf:"bytes,2,opt,name=layout_filename,json=layoutFilename" json:"layout_filename,omitempty"`
	Data             []byte  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_CustomHudElement_Create) Reset()         { *m = CDOTAUserMsg_CustomHudElement_Create{} }
func (m *CDOTAUserMsg_CustomHudElement_Create) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CustomHudElement_Create) ProtoMessage()    {}
func (*CDOTAUserMsg_CustomHudElement_Create) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{93}
}

func (m *CDOTAUserMsg_CustomHudElement_Create) GetElementId() string {
	if m != nil && m.ElementId != nil {
		return *m.ElementId
	}
	return ""
}

func (m *CDOTAUserMsg_CustomHudElement_Create) GetLayoutFilename() string {
	if m != nil && m.LayoutFilename != nil {
		return *m.LayoutFilename
	}
	return ""
}

func (m *CDOTAUserMsg_CustomHudElement_Create) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CDOTAUserMsg_CustomHudElement_Modify struct {
	ElementId        *string `protobuf:"bytes,1,opt,name=element_id,json=elementId" json:"element_id,omitempty"`
	ModifyVisible    *bool   `protobuf:"varint,2,opt,name=modify_visible,json=modifyVisible" json:"modify_visible,omitempty"`
	Data             []byte  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_CustomHudElement_Modify) Reset()         { *m = CDOTAUserMsg_CustomHudElement_Modify{} }
func (m *CDOTAUserMsg_CustomHudElement_Modify) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CustomHudElement_Modify) ProtoMessage()    {}
func (*CDOTAUserMsg_CustomHudElement_Modify) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{94}
}

func (m *CDOTAUserMsg_CustomHudElement_Modify) GetElementId() string {
	if m != nil && m.ElementId != nil {
		return *m.ElementId
	}
	return ""
}

func (m *CDOTAUserMsg_CustomHudElement_Modify) GetModifyVisible() bool {
	if m != nil && m.ModifyVisible != nil {
		return *m.ModifyVisible
	}
	return false
}

func (m *CDOTAUserMsg_CustomHudElement_Modify) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CDOTAUserMsg_CustomHudElement_Destroy struct {
	ElementId        *string `protobuf:"bytes,1,opt,name=element_id,json=elementId" json:"element_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_CustomHudElement_Destroy) Reset()         { *m = CDOTAUserMsg_CustomHudElement_Destroy{} }
func (m *CDOTAUserMsg_CustomHudElement_Destroy) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CustomHudElement_Destroy) ProtoMessage()    {}
func (*CDOTAUserMsg_CustomHudElement_Destroy) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{95}
}

func (m *CDOTAUserMsg_CustomHudElement_Destroy) GetElementId() string {
	if m != nil && m.ElementId != nil {
		return *m.ElementId
	}
	return ""
}

type CDOTAUserMsg_CompendiumStatePlayer struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Level            *uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_CompendiumStatePlayer) Reset()         { *m = CDOTAUserMsg_CompendiumStatePlayer{} }
func (m *CDOTAUserMsg_CompendiumStatePlayer) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CompendiumStatePlayer) ProtoMessage()    {}
func (*CDOTAUserMsg_CompendiumStatePlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{96}
}

func (m *CDOTAUserMsg_CompendiumStatePlayer) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_CompendiumStatePlayer) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

type CDOTAUserMsg_CompendiumState struct {
	CompendiumPlayers []*CDOTAUserMsg_CompendiumStatePlayer `protobuf:"bytes,1,rep,name=compendium_players,json=compendiumPlayers" json:"compendium_players,omitempty"`
	XXX_unrecognized  []byte                                `json:"-"`
}

func (m *CDOTAUserMsg_CompendiumState) Reset()                    { *m = CDOTAUserMsg_CompendiumState{} }
func (m *CDOTAUserMsg_CompendiumState) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CompendiumState) ProtoMessage()               {}
func (*CDOTAUserMsg_CompendiumState) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{97} }

func (m *CDOTAUserMsg_CompendiumState) GetCompendiumPlayers() []*CDOTAUserMsg_CompendiumStatePlayer {
	if m != nil {
		return m.CompendiumPlayers
	}
	return nil
}

type CDOTAUserMsg_ProjectionAbility struct {
	AbilityId        *uint32     `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	CasterEntIndex   *int32      `protobuf:"varint,2,opt,name=caster_ent_index,json=casterEntIndex" json:"caster_ent_index,omitempty"`
	CasterTeam       *int32      `protobuf:"varint,3,opt,name=caster_team,json=casterTeam" json:"caster_team,omitempty"`
	ChannelEnd       *bool       `protobuf:"varint,4,opt,name=channel_end,json=channelEnd" json:"channel_end,omitempty"`
	Origin           *CMsgVector `protobuf:"bytes,5,opt,name=origin" json:"origin,omitempty"`
	TrackCasterOnly  *bool       `protobuf:"varint,6,opt,name=track_caster_only,json=trackCasterOnly" json:"track_caster_only,omitempty"`
	EndTime          *float32    `protobuf:"fixed32,7,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	VictimEntIndex   *int32      `protobuf:"varint,8,opt,name=victim_ent_index,json=victimEntIndex" json:"victim_ent_index,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_ProjectionAbility) Reset()         { *m = CDOTAUserMsg_ProjectionAbility{} }
func (m *CDOTAUserMsg_ProjectionAbility) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ProjectionAbility) ProtoMessage()    {}
func (*CDOTAUserMsg_ProjectionAbility) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{98}
}

func (m *CDOTAUserMsg_ProjectionAbility) GetAbilityId() uint32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_ProjectionAbility) GetCasterEntIndex() int32 {
	if m != nil && m.CasterEntIndex != nil {
		return *m.CasterEntIndex
	}
	return 0
}

func (m *CDOTAUserMsg_ProjectionAbility) GetCasterTeam() int32 {
	if m != nil && m.CasterTeam != nil {
		return *m.CasterTeam
	}
	return 0
}

func (m *CDOTAUserMsg_ProjectionAbility) GetChannelEnd() bool {
	if m != nil && m.ChannelEnd != nil {
		return *m.ChannelEnd
	}
	return false
}

func (m *CDOTAUserMsg_ProjectionAbility) GetOrigin() *CMsgVector {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *CDOTAUserMsg_ProjectionAbility) GetTrackCasterOnly() bool {
	if m != nil && m.TrackCasterOnly != nil {
		return *m.TrackCasterOnly
	}
	return false
}

func (m *CDOTAUserMsg_ProjectionAbility) GetEndTime() float32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *CDOTAUserMsg_ProjectionAbility) GetVictimEntIndex() int32 {
	if m != nil && m.VictimEntIndex != nil {
		return *m.VictimEntIndex
	}
	return 0
}

type CDOTAUserMsg_ProjectionEvent struct {
	EventId          *EProjectionEvent `protobuf:"varint,1,opt,name=event_id,json=eventId,enum=dota.EProjectionEvent,def=0" json:"event_id,omitempty"`
	Team             *uint32           `protobuf:"varint,2,opt,name=team" json:"team,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CDOTAUserMsg_ProjectionEvent) Reset()                    { *m = CDOTAUserMsg_ProjectionEvent{} }
func (m *CDOTAUserMsg_ProjectionEvent) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ProjectionEvent) ProtoMessage()               {}
func (*CDOTAUserMsg_ProjectionEvent) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{99} }

const Default_CDOTAUserMsg_ProjectionEvent_EventId EProjectionEvent = EProjectionEvent_ePE_FirstBlood

func (m *CDOTAUserMsg_ProjectionEvent) GetEventId() EProjectionEvent {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return Default_CDOTAUserMsg_ProjectionEvent_EventId
}

func (m *CDOTAUserMsg_ProjectionEvent) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

type CDOTAUserMsg_XPAlert struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	TargetEntindex   *uint32 `protobuf:"varint,2,opt,name=target_entindex,json=targetEntindex" json:"target_entindex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_XPAlert) Reset()                    { *m = CDOTAUserMsg_XPAlert{} }
func (m *CDOTAUserMsg_XPAlert) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_XPAlert) ProtoMessage()               {}
func (*CDOTAUserMsg_XPAlert) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{100} }

func (m *CDOTAUserMsg_XPAlert) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_XPAlert) GetTargetEntindex() uint32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

type CDOTAUserMsg_UpdateQuestProgress struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UpdateQuestProgress) Reset()         { *m = CDOTAUserMsg_UpdateQuestProgress{} }
func (m *CDOTAUserMsg_UpdateQuestProgress) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UpdateQuestProgress) ProtoMessage()    {}
func (*CDOTAUserMsg_UpdateQuestProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{101}
}

type CDOTAUserMsg_QuestStatus struct {
	PlayerId         *uint32  `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	QuestId          *uint32  `protobuf:"varint,2,opt,name=quest_id,json=questId" json:"quest_id,omitempty"`
	ChallengeId      *uint32  `protobuf:"varint,3,opt,name=challenge_id,json=challengeId" json:"challenge_id,omitempty"`
	Progress         *uint32  `protobuf:"varint,4,opt,name=progress" json:"progress,omitempty"`
	Goal             *uint32  `protobuf:"varint,5,opt,name=goal" json:"goal,omitempty"`
	Query            *uint32  `protobuf:"varint,6,opt,name=query" json:"query,omitempty"`
	FailGametime     *float32 `protobuf:"fixed32,7,opt,name=fail_gametime,json=failGametime" json:"fail_gametime,omitempty"`
	ItemAbilityId    *uint32  `protobuf:"varint,8,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_QuestStatus) Reset()                    { *m = CDOTAUserMsg_QuestStatus{} }
func (m *CDOTAUserMsg_QuestStatus) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_QuestStatus) ProtoMessage()               {}
func (*CDOTAUserMsg_QuestStatus) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{102} }

func (m *CDOTAUserMsg_QuestStatus) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_QuestStatus) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *CDOTAUserMsg_QuestStatus) GetChallengeId() uint32 {
	if m != nil && m.ChallengeId != nil {
		return *m.ChallengeId
	}
	return 0
}

func (m *CDOTAUserMsg_QuestStatus) GetProgress() uint32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *CDOTAUserMsg_QuestStatus) GetGoal() uint32 {
	if m != nil && m.Goal != nil {
		return *m.Goal
	}
	return 0
}

func (m *CDOTAUserMsg_QuestStatus) GetQuery() uint32 {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return 0
}

func (m *CDOTAUserMsg_QuestStatus) GetFailGametime() float32 {
	if m != nil && m.FailGametime != nil {
		return *m.FailGametime
	}
	return 0
}

func (m *CDOTAUserMsg_QuestStatus) GetItemAbilityId() uint32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

type CDOTAUserMsg_SuggestHeroPick struct {
	PlayerId         *uint32 `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	HeroId           *uint32 `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Ban              *bool   `protobuf:"varint,3,opt,name=ban" json:"ban,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SuggestHeroPick) Reset()                    { *m = CDOTAUserMsg_SuggestHeroPick{} }
func (m *CDOTAUserMsg_SuggestHeroPick) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SuggestHeroPick) ProtoMessage()               {}
func (*CDOTAUserMsg_SuggestHeroPick) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{103} }

func (m *CDOTAUserMsg_SuggestHeroPick) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_SuggestHeroPick) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CDOTAUserMsg_SuggestHeroPick) GetBan() bool {
	if m != nil && m.Ban != nil {
		return *m.Ban
	}
	return false
}

type CDOTAUserMsg_SuggestHeroRole struct {
	PlayerId         *uint32 `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	HeroRole         *string `protobuf:"bytes,2,opt,name=hero_role,json=heroRole" json:"hero_role,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SuggestHeroRole) Reset()                    { *m = CDOTAUserMsg_SuggestHeroRole{} }
func (m *CDOTAUserMsg_SuggestHeroRole) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SuggestHeroRole) ProtoMessage()               {}
func (*CDOTAUserMsg_SuggestHeroRole) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{104} }

func (m *CDOTAUserMsg_SuggestHeroRole) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_SuggestHeroRole) GetHeroRole() string {
	if m != nil && m.HeroRole != nil {
		return *m.HeroRole
	}
	return ""
}

type CDOTAUserMsg_KillcamDamageTaken struct {
	PlayerId         *uint32 `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	DamageTaken      *uint32 `protobuf:"varint,2,opt,name=damage_taken,json=damageTaken" json:"damage_taken,omitempty"`
	ItemType         *uint32 `protobuf:"varint,3,opt,name=item_type,json=itemType" json:"item_type,omitempty"`
	ItemAbilityId    *uint32 `protobuf:"varint,4,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	HeroName         *string `protobuf:"bytes,5,opt,name=hero_name,json=heroName" json:"hero_name,omitempty"`
	DamageColor      *string `protobuf:"bytes,6,opt,name=damage_color,json=damageColor" json:"damage_color,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_KillcamDamageTaken) Reset()         { *m = CDOTAUserMsg_KillcamDamageTaken{} }
func (m *CDOTAUserMsg_KillcamDamageTaken) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_KillcamDamageTaken) ProtoMessage()    {}
func (*CDOTAUserMsg_KillcamDamageTaken) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{105}
}

func (m *CDOTAUserMsg_KillcamDamageTaken) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_KillcamDamageTaken) GetDamageTaken() uint32 {
	if m != nil && m.DamageTaken != nil {
		return *m.DamageTaken
	}
	return 0
}

func (m *CDOTAUserMsg_KillcamDamageTaken) GetItemType() uint32 {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return 0
}

func (m *CDOTAUserMsg_KillcamDamageTaken) GetItemAbilityId() uint32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_KillcamDamageTaken) GetHeroName() string {
	if m != nil && m.HeroName != nil {
		return *m.HeroName
	}
	return ""
}

func (m *CDOTAUserMsg_KillcamDamageTaken) GetDamageColor() string {
	if m != nil && m.DamageColor != nil {
		return *m.DamageColor
	}
	return ""
}

type CDOTAUserMsg_SelectPenaltyGold struct {
	PlayerId         *uint32 `protobuf:"varint,1,req,name=player_id,json=playerId" json:"player_id,omitempty"`
	Cost             *int32  `protobuf:"zigzag32,2,opt,name=cost" json:"cost,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SelectPenaltyGold) Reset()         { *m = CDOTAUserMsg_SelectPenaltyGold{} }
func (m *CDOTAUserMsg_SelectPenaltyGold) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SelectPenaltyGold) ProtoMessage()    {}
func (*CDOTAUserMsg_SelectPenaltyGold) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{106}
}

func (m *CDOTAUserMsg_SelectPenaltyGold) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_SelectPenaltyGold) GetCost() int32 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

type CDOTAUserMsg_RollDiceResult struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ChannelType      *uint32 `protobuf:"varint,2,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	RollMin          *uint32 `protobuf:"varint,3,opt,name=roll_min,json=rollMin" json:"roll_min,omitempty"`
	RollMax          *uint32 `protobuf:"varint,4,opt,name=roll_max,json=rollMax" json:"roll_max,omitempty"`
	Result           *uint32 `protobuf:"varint,5,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_RollDiceResult) Reset()                    { *m = CDOTAUserMsg_RollDiceResult{} }
func (m *CDOTAUserMsg_RollDiceResult) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_RollDiceResult) ProtoMessage()               {}
func (*CDOTAUserMsg_RollDiceResult) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{107} }

func (m *CDOTAUserMsg_RollDiceResult) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_RollDiceResult) GetChannelType() uint32 {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return 0
}

func (m *CDOTAUserMsg_RollDiceResult) GetRollMin() uint32 {
	if m != nil && m.RollMin != nil {
		return *m.RollMin
	}
	return 0
}

func (m *CDOTAUserMsg_RollDiceResult) GetRollMax() uint32 {
	if m != nil && m.RollMax != nil {
		return *m.RollMax
	}
	return 0
}

func (m *CDOTAUserMsg_RollDiceResult) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CDOTAUserMsg_FlipCoinResult struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ChannelType      *uint32 `protobuf:"varint,2,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	Result           *bool   `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_FlipCoinResult) Reset()                    { *m = CDOTAUserMsg_FlipCoinResult{} }
func (m *CDOTAUserMsg_FlipCoinResult) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_FlipCoinResult) ProtoMessage()               {}
func (*CDOTAUserMsg_FlipCoinResult) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{108} }

func (m *CDOTAUserMsg_FlipCoinResult) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_FlipCoinResult) GetChannelType() uint32 {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return 0
}

func (m *CDOTAUserMsg_FlipCoinResult) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CDOTAUserMessage_RequestItemSuggestions struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMessage_RequestItemSuggestions) Reset() {
	*m = CDOTAUserMessage_RequestItemSuggestions{}
}
func (m *CDOTAUserMessage_RequestItemSuggestions) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMessage_RequestItemSuggestions) ProtoMessage()    {}
func (*CDOTAUserMessage_RequestItemSuggestions) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{109}
}

func (m *CDOTAUserMessage_RequestItemSuggestions) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CDOTAUserMessage_TeamCaptainChanged struct {
	Team             *uint32 `protobuf:"varint,1,opt,name=team" json:"team,omitempty"`
	CaptainPlayerId  *uint32 `protobuf:"varint,2,opt,name=captain_player_id,json=captainPlayerId" json:"captain_player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMessage_TeamCaptainChanged) Reset()         { *m = CDOTAUserMessage_TeamCaptainChanged{} }
func (m *CDOTAUserMessage_TeamCaptainChanged) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMessage_TeamCaptainChanged) ProtoMessage()    {}
func (*CDOTAUserMessage_TeamCaptainChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{110}
}

func (m *CDOTAUserMessage_TeamCaptainChanged) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CDOTAUserMessage_TeamCaptainChanged) GetCaptainPlayerId() uint32 {
	if m != nil && m.CaptainPlayerId != nil {
		return *m.CaptainPlayerId
	}
	return 0
}

type CDOTAUserMsg_ChatWheelCooldown struct {
	MessageId         *uint32  `protobuf:"varint,1,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	CooldownRemaining *float32 `protobuf:"fixed32,2,opt,name=cooldown_remaining,json=cooldownRemaining" json:"cooldown_remaining,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *CDOTAUserMsg_ChatWheelCooldown) Reset()         { *m = CDOTAUserMsg_ChatWheelCooldown{} }
func (m *CDOTAUserMsg_ChatWheelCooldown) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ChatWheelCooldown) ProtoMessage()    {}
func (*CDOTAUserMsg_ChatWheelCooldown) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{111}
}

func (m *CDOTAUserMsg_ChatWheelCooldown) GetMessageId() uint32 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *CDOTAUserMsg_ChatWheelCooldown) GetCooldownRemaining() float32 {
	if m != nil && m.CooldownRemaining != nil {
		return *m.CooldownRemaining
	}
	return 0
}

type CDOTAUserMsg_HeroRelicProgress struct {
	HeroRelicType    *uint32 `protobuf:"varint,1,opt,name=hero_relic_type,json=heroRelicType" json:"hero_relic_type,omitempty"`
	Value            *uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Ehandle          *uint32 `protobuf:"varint,3,opt,name=ehandle" json:"ehandle,omitempty"`
	EventId          *uint32 `protobuf:"varint,4,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_HeroRelicProgress) Reset()         { *m = CDOTAUserMsg_HeroRelicProgress{} }
func (m *CDOTAUserMsg_HeroRelicProgress) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_HeroRelicProgress) ProtoMessage()    {}
func (*CDOTAUserMsg_HeroRelicProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{112}
}

func (m *CDOTAUserMsg_HeroRelicProgress) GetHeroRelicType() uint32 {
	if m != nil && m.HeroRelicType != nil {
		return *m.HeroRelicType
	}
	return 0
}

func (m *CDOTAUserMsg_HeroRelicProgress) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CDOTAUserMsg_HeroRelicProgress) GetEhandle() uint32 {
	if m != nil && m.Ehandle != nil {
		return *m.Ehandle
	}
	return 0
}

func (m *CDOTAUserMsg_HeroRelicProgress) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

type CDOTAUserMsg_AbilityDraftRequestAbility struct {
	PlayerId           *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	RequestedAbilityId *uint32 `protobuf:"varint,2,opt,name=requested_ability_id,json=requestedAbilityId" json:"requested_ability_id,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CDOTAUserMsg_AbilityDraftRequestAbility) Reset() {
	*m = CDOTAUserMsg_AbilityDraftRequestAbility{}
}
func (m *CDOTAUserMsg_AbilityDraftRequestAbility) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AbilityDraftRequestAbility) ProtoMessage()    {}
func (*CDOTAUserMsg_AbilityDraftRequestAbility) Descriptor() ([]byte, []int) {
	return fileDescriptor25, []int{113}
}

func (m *CDOTAUserMsg_AbilityDraftRequestAbility) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityDraftRequestAbility) GetRequestedAbilityId() uint32 {
	if m != nil && m.RequestedAbilityId != nil {
		return *m.RequestedAbilityId
	}
	return 0
}

type CDOTAUserMsg_DamageReport struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	TargetHeroId     *uint32 `protobuf:"varint,2,opt,name=target_hero_id,json=targetHeroId" json:"target_hero_id,omitempty"`
	SourceHeroId     *uint32 `protobuf:"varint,3,opt,name=source_hero_id,json=sourceHeroId" json:"source_hero_id,omitempty"`
	DamageAmount     *int32  `protobuf:"varint,4,opt,name=damage_amount,json=damageAmount" json:"damage_amount,omitempty"`
	Broadcast        *bool   `protobuf:"varint,5,opt,name=broadcast" json:"broadcast,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_DamageReport) Reset()                    { *m = CDOTAUserMsg_DamageReport{} }
func (m *CDOTAUserMsg_DamageReport) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_DamageReport) ProtoMessage()               {}
func (*CDOTAUserMsg_DamageReport) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{114} }

func (m *CDOTAUserMsg_DamageReport) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_DamageReport) GetTargetHeroId() uint32 {
	if m != nil && m.TargetHeroId != nil {
		return *m.TargetHeroId
	}
	return 0
}

func (m *CDOTAUserMsg_DamageReport) GetSourceHeroId() uint32 {
	if m != nil && m.SourceHeroId != nil {
		return *m.SourceHeroId
	}
	return 0
}

func (m *CDOTAUserMsg_DamageReport) GetDamageAmount() int32 {
	if m != nil && m.DamageAmount != nil {
		return *m.DamageAmount
	}
	return 0
}

func (m *CDOTAUserMsg_DamageReport) GetBroadcast() bool {
	if m != nil && m.Broadcast != nil {
		return *m.Broadcast
	}
	return false
}

type CDOTAUserMsg_SalutePlayer struct {
	SourcePlayerId   *int32  `protobuf:"varint,1,opt,name=source_player_id,json=sourcePlayerId" json:"source_player_id,omitempty"`
	TargetPlayerId   *int32  `protobuf:"varint,2,opt,name=target_player_id,json=targetPlayerId" json:"target_player_id,omitempty"`
	TipAmount        *uint32 `protobuf:"varint,3,opt,name=tip_amount,json=tipAmount" json:"tip_amount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SalutePlayer) Reset()                    { *m = CDOTAUserMsg_SalutePlayer{} }
func (m *CDOTAUserMsg_SalutePlayer) String() string            { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SalutePlayer) ProtoMessage()               {}
func (*CDOTAUserMsg_SalutePlayer) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{115} }

func (m *CDOTAUserMsg_SalutePlayer) GetSourcePlayerId() int32 {
	if m != nil && m.SourcePlayerId != nil {
		return *m.SourcePlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_SalutePlayer) GetTargetPlayerId() int32 {
	if m != nil && m.TargetPlayerId != nil {
		return *m.TargetPlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_SalutePlayer) GetTipAmount() uint32 {
	if m != nil && m.TipAmount != nil {
		return *m.TipAmount
	}
	return 0
}

func init() {
	proto.RegisterType((*CDOTAUserMsg_AIDebugLine)(nil), "dota.CDOTAUserMsg_AIDebugLine")
	proto.RegisterType((*CDOTAUserMsg_Ping)(nil), "dota.CDOTAUserMsg_Ping")
	proto.RegisterType((*CDOTAUserMsg_SwapVerify)(nil), "dota.CDOTAUserMsg_SwapVerify")
	proto.RegisterType((*CDOTAUserMsg_ChatEvent)(nil), "dota.CDOTAUserMsg_ChatEvent")
	proto.RegisterType((*CDOTAUserMsg_BotChat)(nil), "dota.CDOTAUserMsg_BotChat")
	proto.RegisterType((*CDOTAUserMsg_CombatHeroPositions)(nil), "dota.CDOTAUserMsg_CombatHeroPositions")
	proto.RegisterType((*CDOTAUserMsg_CombatLogBulkData)(nil), "dota.CDOTAUserMsg_CombatLogBulkData")
	proto.RegisterType((*CDOTAUserMsg_MiniKillCamInfo)(nil), "dota.CDOTAUserMsg_MiniKillCamInfo")
	proto.RegisterType((*CDOTAUserMsg_MiniKillCamInfo_Attacker)(nil), "dota.CDOTAUserMsg_MiniKillCamInfo.Attacker")
	proto.RegisterType((*CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability)(nil), "dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability")
	proto.RegisterType((*CDOTAUserMsg_GlobalLightColor)(nil), "dota.CDOTAUserMsg_GlobalLightColor")
	proto.RegisterType((*CDOTAUserMsg_GlobalLightDirection)(nil), "dota.CDOTAUserMsg_GlobalLightDirection")
	proto.RegisterType((*CDOTAUserMsg_LocationPing)(nil), "dota.CDOTAUserMsg_LocationPing")
	proto.RegisterType((*CDOTAUserMsg_ItemAlert)(nil), "dota.CDOTAUserMsg_ItemAlert")
	proto.RegisterType((*CDOTAUserMsg_EnemyItemAlert)(nil), "dota.CDOTAUserMsg_EnemyItemAlert")
	proto.RegisterType((*CDOTAUserMsg_ModifierAlert)(nil), "dota.CDOTAUserMsg_ModifierAlert")
	proto.RegisterType((*CDOTAUserMsg_HPManaAlert)(nil), "dota.CDOTAUserMsg_HPManaAlert")
	proto.RegisterType((*CDOTAUserMsg_GlyphAlert)(nil), "dota.CDOTAUserMsg_GlyphAlert")
	proto.RegisterType((*CDOTAUserMsg_WillPurchaseAlert)(nil), "dota.CDOTAUserMsg_WillPurchaseAlert")
	proto.RegisterType((*CDOTAUserMsg_BuyBackStateAlert)(nil), "dota.CDOTAUserMsg_BuyBackStateAlert")
	proto.RegisterType((*CDOTAUserMsg_QuickBuyAlert)(nil), "dota.CDOTAUserMsg_QuickBuyAlert")
	proto.RegisterType((*CDOTAUserMsg_CourierKilledAlert)(nil), "dota.CDOTAUserMsg_CourierKilledAlert")
	proto.RegisterType((*CDOTAUserMsg_CourierKilledAlert_LostItem)(nil), "dota.CDOTAUserMsg_CourierKilledAlert.LostItem")
	proto.RegisterType((*CDOTAUserMsg_MinimapEvent)(nil), "dota.CDOTAUserMsg_MinimapEvent")
	proto.RegisterType((*CDOTAUserMsg_MapLine)(nil), "dota.CDOTAUserMsg_MapLine")
	proto.RegisterType((*CDOTAUserMsg_MinimapDebugPoint)(nil), "dota.CDOTAUserMsg_MinimapDebugPoint")
	proto.RegisterType((*CDOTAUserMsg_CreateLinearProjectile)(nil), "dota.CDOTAUserMsg_CreateLinearProjectile")
	proto.RegisterType((*CDOTAUserMsg_DestroyLinearProjectile)(nil), "dota.CDOTAUserMsg_DestroyLinearProjectile")
	proto.RegisterType((*CDOTAUserMsg_DodgeTrackingProjectiles)(nil), "dota.CDOTAUserMsg_DodgeTrackingProjectiles")
	proto.RegisterType((*CDOTAUserMsg_SpectatorPlayerClick)(nil), "dota.CDOTAUserMsg_SpectatorPlayerClick")
	proto.RegisterType((*CDOTAUserMsg_SpectatorPlayerUnitOrders)(nil), "dota.CDOTAUserMsg_SpectatorPlayerUnitOrders")
	proto.RegisterType((*CDOTAUserMsg_NevermoreRequiem)(nil), "dota.CDOTAUserMsg_NevermoreRequiem")
	proto.RegisterType((*CDOTAUserMsg_InvalidCommand)(nil), "dota.CDOTAUserMsg_InvalidCommand")
	proto.RegisterType((*CDOTAUserMsg_HudError)(nil), "dota.CDOTAUserMsg_HudError")
	proto.RegisterType((*CDOTAUserMsg_SharedCooldown)(nil), "dota.CDOTAUserMsg_SharedCooldown")
	proto.RegisterType((*CDOTAUserMsg_SetNextAutobuyItem)(nil), "dota.CDOTAUserMsg_SetNextAutobuyItem")
	proto.RegisterType((*CDOTAUserMsg_HalloweenDrops)(nil), "dota.CDOTAUserMsg_HalloweenDrops")
	proto.RegisterType((*CDOTAUserMsg_PredictionResult)(nil), "dota.CDOTAUserMsg_PredictionResult")
	proto.RegisterType((*CDOTAUserMsg_PredictionResult_Prediction)(nil), "dota.CDOTAUserMsg_PredictionResult.Prediction")
	proto.RegisterType((*CDOTAResponseQuerySerialized)(nil), "dota.CDOTAResponseQuerySerialized")
	proto.RegisterType((*CDOTAResponseQuerySerialized_Fact)(nil), "dota.CDOTAResponseQuerySerialized.Fact")
	proto.RegisterType((*CDOTASpeechMatchOnClient)(nil), "dota.CDOTASpeechMatchOnClient")
	proto.RegisterType((*CDOTAUserMsg_UnitEvent)(nil), "dota.CDOTAUserMsg_UnitEvent")
	proto.RegisterType((*CDOTAUserMsg_UnitEvent_Speech)(nil), "dota.CDOTAUserMsg_UnitEvent.Speech")
	proto.RegisterType((*CDOTAUserMsg_UnitEvent_SpeechMute)(nil), "dota.CDOTAUserMsg_UnitEvent.SpeechMute")
	proto.RegisterType((*CDOTAUserMsg_UnitEvent_AddGesture)(nil), "dota.CDOTAUserMsg_UnitEvent.AddGesture")
	proto.RegisterType((*CDOTAUserMsg_UnitEvent_RemoveGesture)(nil), "dota.CDOTAUserMsg_UnitEvent.RemoveGesture")
	proto.RegisterType((*CDOTAUserMsg_UnitEvent_BloodImpact)(nil), "dota.CDOTAUserMsg_UnitEvent.BloodImpact")
	proto.RegisterType((*CDOTAUserMsg_UnitEvent_FadeGesture)(nil), "dota.CDOTAUserMsg_UnitEvent.FadeGesture")
	proto.RegisterType((*CDOTAUserMsg_ItemPurchased)(nil), "dota.CDOTAUserMsg_ItemPurchased")
	proto.RegisterType((*CDOTAUserMsg_ItemSold)(nil), "dota.CDOTAUserMsg_ItemSold")
	proto.RegisterType((*CDOTAUserMsg_ItemFound)(nil), "dota.CDOTAUserMsg_ItemFound")
	proto.RegisterType((*CDOTAUserMsg_OverheadEvent)(nil), "dota.CDOTAUserMsg_OverheadEvent")
	proto.RegisterType((*CDOTAUserMsg_TutorialTipInfo)(nil), "dota.CDOTAUserMsg_TutorialTipInfo")
	proto.RegisterType((*CDOTAUserMsg_TutorialFinish)(nil), "dota.CDOTAUserMsg_TutorialFinish")
	proto.RegisterType((*CDOTAUserMsg_TutorialMinimapPosition)(nil), "dota.CDOTAUserMsg_TutorialMinimapPosition")
	proto.RegisterType((*CDOTAUserMsg_SendGenericToolTip)(nil), "dota.CDOTAUserMsg_SendGenericToolTip")
	proto.RegisterType((*CDOTAUserMsg_WorldLine)(nil), "dota.CDOTAUserMsg_WorldLine")
	proto.RegisterType((*CDOTAUserMsg_ChatWheel)(nil), "dota.CDOTAUserMsg_ChatWheel")
	proto.RegisterType((*CDOTAUserMsg_ReceivedXmasGift)(nil), "dota.CDOTAUserMsg_ReceivedXmasGift")
	proto.RegisterType((*CDOTAUserMsg_ShowSurvey)(nil), "dota.CDOTAUserMsg_ShowSurvey")
	proto.RegisterType((*CDOTAUserMsg_UpdateSharedContent)(nil), "dota.CDOTAUserMsg_UpdateSharedContent")
	proto.RegisterType((*CDOTAUserMsg_TutorialRequestExp)(nil), "dota.CDOTAUserMsg_TutorialRequestExp")
	proto.RegisterType((*CDOTAUserMsg_TutorialFade)(nil), "dota.CDOTAUserMsg_TutorialFade")
	proto.RegisterType((*CDOTAUserMsg_TutorialPingMinimap)(nil), "dota.CDOTAUserMsg_TutorialPingMinimap")
	proto.RegisterType((*CDOTAUserMsg_GamerulesStateChanged)(nil), "dota.CDOTAUserMsg_GamerulesStateChanged")
	proto.RegisterType((*CDOTAUserMsg_AddQuestLogEntry)(nil), "dota.CDOTAUserMsg_AddQuestLogEntry")
	proto.RegisterType((*CDOTAUserMsg_SendStatPopup)(nil), "dota.CDOTAUserMsg_SendStatPopup")
	proto.RegisterType((*CDOTAUserMsg_DismissAllStatPopups)(nil), "dota.CDOTAUserMsg_DismissAllStatPopups")
	proto.RegisterType((*CDOTAUserMsg_SendRoshanSpectatorPhase)(nil), "dota.CDOTAUserMsg_SendRoshanSpectatorPhase")
	proto.RegisterType((*CDOTAUserMsg_SendRoshanPopup)(nil), "dota.CDOTAUserMsg_SendRoshanPopup")
	proto.RegisterType((*CDOTAUserMsg_SendFinalGold)(nil), "dota.CDOTAUserMsg_SendFinalGold")
	proto.RegisterType((*CDOTAUserMsg_CustomMsg)(nil), "dota.CDOTAUserMsg_CustomMsg")
	proto.RegisterType((*CDOTAUserMsg_CoachHUDPing)(nil), "dota.CDOTAUserMsg_CoachHUDPing")
	proto.RegisterType((*CDOTAUserMsg_ClientLoadGridNav)(nil), "dota.CDOTAUserMsg_ClientLoadGridNav")
	proto.RegisterType((*CDOTAUserMsg_TE_Projectile)(nil), "dota.CDOTAUserMsg_TE_Projectile")
	proto.RegisterType((*CDOTAUserMsg_TE_ProjectileLoc)(nil), "dota.CDOTAUserMsg_TE_ProjectileLoc")
	proto.RegisterType((*CDOTAUserMsg_TE_DestroyProjectile)(nil), "dota.CDOTAUserMsg_TE_DestroyProjectile")
	proto.RegisterType((*CDOTAUserMsg_TE_DotaBloodImpact)(nil), "dota.CDOTAUserMsg_TE_DotaBloodImpact")
	proto.RegisterType((*CDOTAUserMsg_AbilityPing)(nil), "dota.CDOTAUserMsg_AbilityPing")
	proto.RegisterType((*CDOTAUserMsg_TE_UnitAnimation)(nil), "dota.CDOTAUserMsg_TE_UnitAnimation")
	proto.RegisterType((*CDOTAUserMsg_TE_UnitAnimationEnd)(nil), "dota.CDOTAUserMsg_TE_UnitAnimationEnd")
	proto.RegisterType((*CDOTAUserMsg_ShowGenericPopup)(nil), "dota.CDOTAUserMsg_ShowGenericPopup")
	proto.RegisterType((*CDOTAUserMsg_VoteStart)(nil), "dota.CDOTAUserMsg_VoteStart")
	proto.RegisterType((*CDOTAUserMsg_VoteUpdate)(nil), "dota.CDOTAUserMsg_VoteUpdate")
	proto.RegisterType((*CDOTAUserMsg_VoteEnd)(nil), "dota.CDOTAUserMsg_VoteEnd")
	proto.RegisterType((*CDOTAUserMsg_BoosterStatePlayer)(nil), "dota.CDOTAUserMsg_BoosterStatePlayer")
	proto.RegisterType((*CDOTAUserMsg_BoosterState)(nil), "dota.CDOTAUserMsg_BoosterState")
	proto.RegisterType((*CDOTAUserMsg_PlayerMMR)(nil), "dota.CDOTAUserMsg_PlayerMMR")
	proto.RegisterType((*CDOTAUserMsg_AbilitySteal)(nil), "dota.CDOTAUserMsg_AbilitySteal")
	proto.RegisterType((*CDOTAUserMsg_StatsHeroLookup)(nil), "dota.CDOTAUserMsg_StatsHeroLookup")
	proto.RegisterType((*CDOTAUserMsg_StatsHeroPositionInfo)(nil), "dota.CDOTAUserMsg_StatsHeroPositionInfo")
	proto.RegisterType((*CDOTAUserMsg_StatsHeroPositionInfo_PositionPair)(nil), "dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair")
	proto.RegisterType((*CDOTAUserMsg_StatsHeroMinuteDetails)(nil), "dota.CDOTAUserMsg_StatsHeroMinuteDetails")
	proto.RegisterType((*CDOTAUserMsg_StatsTeamMinuteDetails)(nil), "dota.CDOTAUserMsg_StatsTeamMinuteDetails")
	proto.RegisterType((*CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance)(nil), "dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance")
	proto.RegisterType((*CDOTAUserMsg_StatsPlayerKillShare)(nil), "dota.CDOTAUserMsg_StatsPlayerKillShare")
	proto.RegisterType((*CDOTAUserMsg_StatsKillDetails)(nil), "dota.CDOTAUserMsg_StatsKillDetails")
	proto.RegisterType((*CDOTAUserMsg_StatsMatchDetails)(nil), "dota.CDOTAUserMsg_StatsMatchDetails")
	proto.RegisterType((*CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails)(nil), "dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails")
	proto.RegisterType((*CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails)(nil), "dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails")
	proto.RegisterType((*CDOTAUserMsg_MiniTaunt)(nil), "dota.CDOTAUserMsg_MiniTaunt")
	proto.RegisterType((*CDOTAUserMsg_SpeechBubble)(nil), "dota.CDOTAUserMsg_SpeechBubble")
	proto.RegisterType((*CDOTAUserMsg_CustomHeaderMessage)(nil), "dota.CDOTAUserMsg_CustomHeaderMessage")
	proto.RegisterType((*CMsgHeroAbilityStat)(nil), "dota.CMsgHeroAbilityStat")
	proto.RegisterType((*CMsgCombatAnalyzerPlayerStat)(nil), "dota.CMsgCombatAnalyzerPlayerStat")
	proto.RegisterType((*CMsgCombatAnalyzerStats)(nil), "dota.CMsgCombatAnalyzerStats")
	proto.RegisterType((*CDOTAUserMsg_BeastChat)(nil), "dota.CDOTAUserMsg_BeastChat")
	proto.RegisterType((*CDOTAUserMsg_CustomHudElement_Create)(nil), "dota.CDOTAUserMsg_CustomHudElement_Create")
	proto.RegisterType((*CDOTAUserMsg_CustomHudElement_Modify)(nil), "dota.CDOTAUserMsg_CustomHudElement_Modify")
	proto.RegisterType((*CDOTAUserMsg_CustomHudElement_Destroy)(nil), "dota.CDOTAUserMsg_CustomHudElement_Destroy")
	proto.RegisterType((*CDOTAUserMsg_CompendiumStatePlayer)(nil), "dota.CDOTAUserMsg_CompendiumStatePlayer")
	proto.RegisterType((*CDOTAUserMsg_CompendiumState)(nil), "dota.CDOTAUserMsg_CompendiumState")
	proto.RegisterType((*CDOTAUserMsg_ProjectionAbility)(nil), "dota.CDOTAUserMsg_ProjectionAbility")
	proto.RegisterType((*CDOTAUserMsg_ProjectionEvent)(nil), "dota.CDOTAUserMsg_ProjectionEvent")
	proto.RegisterType((*CDOTAUserMsg_XPAlert)(nil), "dota.CDOTAUserMsg_XPAlert")
	proto.RegisterType((*CDOTAUserMsg_UpdateQuestProgress)(nil), "dota.CDOTAUserMsg_UpdateQuestProgress")
	proto.RegisterType((*CDOTAUserMsg_QuestStatus)(nil), "dota.CDOTAUserMsg_QuestStatus")
	proto.RegisterType((*CDOTAUserMsg_SuggestHeroPick)(nil), "dota.CDOTAUserMsg_SuggestHeroPick")
	proto.RegisterType((*CDOTAUserMsg_SuggestHeroRole)(nil), "dota.CDOTAUserMsg_SuggestHeroRole")
	proto.RegisterType((*CDOTAUserMsg_KillcamDamageTaken)(nil), "dota.CDOTAUserMsg_KillcamDamageTaken")
	proto.RegisterType((*CDOTAUserMsg_SelectPenaltyGold)(nil), "dota.CDOTAUserMsg_SelectPenaltyGold")
	proto.RegisterType((*CDOTAUserMsg_RollDiceResult)(nil), "dota.CDOTAUserMsg_RollDiceResult")
	proto.RegisterType((*CDOTAUserMsg_FlipCoinResult)(nil), "dota.CDOTAUserMsg_FlipCoinResult")
	proto.RegisterType((*CDOTAUserMessage_RequestItemSuggestions)(nil), "dota.CDOTAUserMessage_RequestItemSuggestions")
	proto.RegisterType((*CDOTAUserMessage_TeamCaptainChanged)(nil), "dota.CDOTAUserMessage_TeamCaptainChanged")
	proto.RegisterType((*CDOTAUserMsg_ChatWheelCooldown)(nil), "dota.CDOTAUserMsg_ChatWheelCooldown")
	proto.RegisterType((*CDOTAUserMsg_HeroRelicProgress)(nil), "dota.CDOTAUserMsg_HeroRelicProgress")
	proto.RegisterType((*CDOTAUserMsg_AbilityDraftRequestAbility)(nil), "dota.CDOTAUserMsg_AbilityDraftRequestAbility")
	proto.RegisterType((*CDOTAUserMsg_DamageReport)(nil), "dota.CDOTAUserMsg_DamageReport")
	proto.RegisterType((*CDOTAUserMsg_SalutePlayer)(nil), "dota.CDOTAUserMsg_SalutePlayer")
	proto.RegisterEnum("dota.EDotaUserMessages", EDotaUserMessages_name, EDotaUserMessages_value)
	proto.RegisterEnum("dota.DOTA_CHAT_MESSAGE", DOTA_CHAT_MESSAGE_name, DOTA_CHAT_MESSAGE_value)
	proto.RegisterEnum("dota.DOTA_NO_BATTLE_POINTS_REASONS", DOTA_NO_BATTLE_POINTS_REASONS_name, DOTA_NO_BATTLE_POINTS_REASONS_value)
	proto.RegisterEnum("dota.DOTA_CHAT_INFORMATIONAL", DOTA_CHAT_INFORMATIONAL_name, DOTA_CHAT_INFORMATIONAL_value)
	proto.RegisterEnum("dota.DOTA_ABILITY_PING_TYPE", DOTA_ABILITY_PING_TYPE_name, DOTA_ABILITY_PING_TYPE_value)
	proto.RegisterEnum("dota.DOTA_REPLAY_STATE_EVENT", DOTA_REPLAY_STATE_EVENT_name, DOTA_REPLAY_STATE_EVENT_value)
	proto.RegisterEnum("dota.EDotaEntityMessages", EDotaEntityMessages_name, EDotaEntityMessages_value)
	proto.RegisterEnum("dota.DOTA_OVERHEAD_ALERT", DOTA_OVERHEAD_ALERT_name, DOTA_OVERHEAD_ALERT_value)
	proto.RegisterEnum("dota.DOTA_ROSHAN_PHASE", DOTA_ROSHAN_PHASE_name, DOTA_ROSHAN_PHASE_value)
	proto.RegisterEnum("dota.DOTA_POSITION_CATEGORY", DOTA_POSITION_CATEGORY_name, DOTA_POSITION_CATEGORY_value)
	proto.RegisterEnum("dota.DOTA_ABILITY_TARGET_TYPE", DOTA_ABILITY_TARGET_TYPE_name, DOTA_ABILITY_TARGET_TYPE_value)
	proto.RegisterEnum("dota.EHeroStatType", EHeroStatType_name, EHeroStatType_value)
	proto.RegisterEnum("dota.EPlayerVoiceListenState", EPlayerVoiceListenState_name, EPlayerVoiceListenState_value)
	proto.RegisterEnum("dota.EProjectionEvent", EProjectionEvent_name, EProjectionEvent_value)
	proto.RegisterEnum("dota.CDOTAUserMsg_PredictionResult_Prediction_EResult", CDOTAUserMsg_PredictionResult_Prediction_EResult_name, CDOTAUserMsg_PredictionResult_Prediction_EResult_value)
	proto.RegisterEnum("dota.CDOTAResponseQuerySerialized_Fact_ValueType", CDOTAResponseQuerySerialized_Fact_ValueType_name, CDOTAResponseQuerySerialized_Fact_ValueType_value)
}

func init() { proto.RegisterFile("dota_usermessages.proto", fileDescriptor25) }

var fileDescriptor25 = []byte{
	// 10935 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0xbd, 0x69, 0x7c, 0xdc, 0x48,
	0x76, 0x18, 0x3e, 0x7d, 0x50, 0x6c, 0x16, 0xaf, 0x12, 0xa4, 0x91, 0x28, 0x4a, 0x9a, 0x91, 0xa0,
	0x99, 0x91, 0x46, 0x33, 0xcb, 0x9d, 0xd1, 0x1c, 0x6b, 0x6b, 0xff, 0xeb, 0x5d, 0xb0, 0x1b, 0x24,
	0x61, 0x35, 0xbb, 0x7b, 0x00, 0x90, 0x1a, 0xfa, 0x6f, 0x07, 0x06, 0x1b, 0x45, 0x12, 0x26, 0x1a,
	0xe8, 0x01, 0xd0, 0x94, 0x38, 0x8e, 0x7f, 0xbf, 0xb5, 0x9d, 0xd8, 0x4e, 0x9c, 0x38, 0x87, 0x8f,
	0x38, 0x76, 0xe2, 0xd8, 0x39, 0x7d, 0xe4, 0xb2, 0xe3, 0xd8, 0x4e, 0xec, 0x38, 0xc9, 0x97, 0xd8,
	0xf9, 0x12, 0xdf, 0xf7, 0x7d, 0xe6, 0x72, 0xe2, 0x24, 0x4e, 0xe2, 0x1c, 0x4e, 0x9c, 0xdf, 0xab,
	0x03, 0x8d, 0x02, 0xba, 0x29, 0x4d, 0xbc, 0xe1, 0xa7, 0xae, 0xf7, 0x5e, 0x55, 0xbd, 0xaa, 0x7a,
	0xf5, 0xae, 0xaa, 0x02, 0xd1, 0x65, 0x2f, 0x4a, 0x5d, 0x67, 0x94, 0x90, 0x78, 0x40, 0x92, 0xc4,
	0x3d, 0x24, 0xc9, 0xda, 0x30, 0x8e, 0xd2, 0x48, 0xa9, 0x03, 0x62, 0xf5, 0x52, 0x48, 0xd2, 0x47,
	0x51, 0x7c, 0xbc, 0xef, 0x26, 0x24, 0x3d, 0x1d, 0x0a, 0xec, 0x2a, 0xab, 0x96, 0x1c, 0xb9, 0x31,
	0xf1, 0x1c, 0x12, 0x8e, 0x06, 0x02, 0x71, 0x85, 0x22, 0xfa, 0xd1, 0x60, 0x10, 0x85, 0x72, 0x8b,
	0xea, 0x9b, 0x68, 0xa5, 0xd9, 0xea, 0xda, 0xda, 0x4e, 0x42, 0xe2, 0xed, 0xe4, 0xd0, 0xd1, 0x8c,
	0x16, 0xd9, 0x1f, 0x1d, 0xb6, 0xfd, 0x90, 0x28, 0x2b, 0x68, 0x96, 0x53, 0xaf, 0x54, 0x6e, 0x54,
	0xee, 0xcc, 0x99, 0xa2, 0xa8, 0x7e, 0x14, 0x9d, 0x97, 0x6a, 0xf5, 0xfc, 0xf0, 0x50, 0x51, 0x50,
	0x7d, 0xe8, 0x87, 0x87, 0x2b, 0xd5, 0x1b, 0x95, 0x3b, 0x8b, 0x26, 0xfd, 0x0d, 0xb0, 0x20, 0x4a,
	0x92, 0x95, 0x1a, 0x83, 0xc1, 0x6f, 0xf5, 0x6d, 0x74, 0x59, 0xaa, 0x6c, 0x3d, 0x72, 0x87, 0xbb,
	0x24, 0xf6, 0x0f, 0x4e, 0x95, 0xab, 0x68, 0x6e, 0x18, 0xb8, 0xa7, 0x24, 0x76, 0x7c, 0x8f, 0xf6,
	0xb9, 0x68, 0x36, 0x18, 0xc0, 0xf0, 0xd4, 0xdf, 0xa9, 0xa2, 0x4b, 0x52, 0xc5, 0xe6, 0x91, 0x9b,
	0xea, 0x27, 0x24, 0x4c, 0x15, 0x0d, 0xd5, 0x61, 0x22, 0x56, 0x2a, 0x37, 0xaa, 0x77, 0x96, 0xee,
	0x5d, 0x5e, 0x83, 0xf1, 0xae, 0x01, 0xa9, 0xd3, 0xdc, 0xd2, 0x6c, 0x67, 0x5b, 0xb7, 0x2c, 0x6d,
	0x53, 0xbf, 0x7f, 0x31, 0x5f, 0x72, 0x8c, 0xce, 0xae, 0xd6, 0x36, 0x5a, 0x26, 0xad, 0xaa, 0x5c,
	0x44, 0x33, 0x27, 0x6e, 0x30, 0x22, 0x9c, 0x7d, 0x56, 0x50, 0x6e, 0x22, 0xc4, 0xfa, 0xf7, 0x3d,
	0xe7, 0x75, 0x3a, 0x8a, 0xf3, 0xf7, 0xab, 0x1f, 0x7a, 0xdd, 0x9c, 0x13, 0xd0, 0xd7, 0x25, 0x92,
	0x7b, 0x2b, 0xf5, 0x32, 0xc9, 0x3d, 0x89, 0xe4, 0x8d, 0x95, 0x99, 0x32, 0xc9, 0x1b, 0x12, 0xc9,
	0x9b, 0x2b, 0xe7, 0xca, 0x24, 0x6f, 0x4a, 0x24, 0x6f, 0xad, 0xcc, 0x96, 0x49, 0xde, 0x92, 0x48,
	0xde, 0x5e, 0x69, 0x94, 0x49, 0xde, 0x56, 0x2e, 0xa1, 0x73, 0x74, 0x68, 0xf7, 0x56, 0xe6, 0xe8,
	0x40, 0x79, 0x29, 0x83, 0xbf, 0xb1, 0x82, 0x72, 0xf0, 0x37, 0xd4, 0x2f, 0xaa, 0xa0, 0x8b, 0xd2,
	0xac, 0xaf, 0x47, 0x29, 0x4c, 0xfc, 0x99, 0x6b, 0x95, 0x17, 0x9d, 0x9a, 0x24, 0x3a, 0xd0, 0x4f,
	0xea, 0xc6, 0x87, 0x24, 0xa5, 0x53, 0x35, 0x67, 0xf2, 0x12, 0x34, 0x97, 0x12, 0x77, 0xe0, 0x44,
	0x61, 0x70, 0x4a, 0xa7, 0xa8, 0x61, 0x36, 0x00, 0xd0, 0x0d, 0x83, 0x53, 0xf5, 0xab, 0x2b, 0xe8,
	0x86, 0xbc, 0xf4, 0xd1, 0x60, 0xdf, 0x4d, 0xb7, 0x48, 0x1c, 0xf5, 0xa2, 0xc4, 0x4f, 0xfd, 0x28,
	0x4c, 0x60, 0x05, 0xfd, 0xd0, 0x23, 0x8f, 0x39, 0x33, 0xac, 0x00, 0x12, 0x98, 0xfa, 0x03, 0xb6,
	0xac, 0x33, 0x26, 0xfd, 0xad, 0x7c, 0x18, 0xcd, 0x3d, 0x8a, 0xe2, 0xc0, 0x73, 0x86, 0x11, 0x13,
	0xcd, 0xf9, 0x7b, 0x0a, 0x93, 0x99, 0xe6, 0x76, 0x72, 0xb8, 0x4b, 0xfa, 0x69, 0x14, 0xdf, 0x6b,
	0x99, 0x0d, 0x4a, 0xd4, 0x8b, 0x12, 0x60, 0xfa, 0x88, 0xb8, 0x41, 0x7a, 0x44, 0x99, 0x9e, 0x31,
	0x79, 0x49, 0xfd, 0xbe, 0x0a, 0x7a, 0x6e, 0x02, 0x5f, 0xed, 0xe8, 0x70, 0x7d, 0x14, 0x1c, 0xb7,
	0xdc, 0xd4, 0x55, 0x9a, 0x68, 0xa9, 0x4f, 0x81, 0x0e, 0x09, 0xd3, 0xd8, 0x27, 0xc9, 0x4a, 0xe5,
	0x46, 0xed, 0xce, 0xfc, 0xbd, 0x6b, 0xe3, 0x0e, 0xa1, 0x81, 0xac, 0xa2, 0x1e, 0xa6, 0xf1, 0xa9,
	0xb9, 0xc8, 0xea, 0xe8, 0xac, 0x8a, 0x72, 0x0d, 0xcd, 0x01, 0xe3, 0x49, 0xea, 0x0e, 0x86, 0x74,
	0x24, 0x55, 0x73, 0x0c, 0x50, 0x56, 0x51, 0xc3, 0x1b, 0xc5, 0x2e, 0xcc, 0x02, 0x1d, 0x4d, 0xd5,
	0xcc, 0xca, 0xf2, 0x2a, 0xd5, 0x0b, 0x3b, 0xea, 0xb7, 0xab, 0xe8, 0x9a, 0xc4, 0xfe, 0xb6, 0x1f,
	0xfa, 0x0f, 0xfc, 0x20, 0x68, 0xba, 0x03, 0x23, 0x3c, 0x88, 0x14, 0x03, 0xcd, 0xb9, 0x69, 0xea,
	0xf6, 0x8f, 0x49, 0x2c, 0xf8, 0x7e, 0x85, 0xf3, 0x7d, 0x46, 0xb5, 0x35, 0x8d, 0xd7, 0x31, 0xc7,
	0xb5, 0x57, 0xbf, 0xb8, 0x8a, 0x1a, 0x02, 0x0e, 0x1c, 0x0b, 0x8c, 0x10, 0x1d, 0x51, 0x56, 0x6e,
	0xa2, 0x85, 0x34, 0x4a, 0xdd, 0xc0, 0xf1, 0xdc, 0x01, 0xc8, 0x0f, 0x5b, 0xb8, 0x79, 0x0a, 0x6b,
	0x51, 0x90, 0xf2, 0x0e, 0x9a, 0x73, 0xf7, 0xfd, 0xc0, 0x4f, 0x61, 0x3a, 0x6b, 0x94, 0xad, 0x37,
	0x3e, 0x00, 0x5b, 0x6b, 0x1a, 0xad, 0x7c, 0x6a, 0x8e, 0x5b, 0x51, 0x6e, 0xa1, 0x45, 0xc1, 0x81,
	0x13, 0xba, 0x03, 0xc2, 0xa5, 0x73, 0x41, 0x00, 0x3b, 0xee, 0x80, 0xac, 0x7e, 0x02, 0xcd, 0xf2,
	0xaa, 0xca, 0x75, 0x84, 0x58, 0xe5, 0xd3, 0xb1, 0xf8, 0xf3, 0xe6, 0x4e, 0x0d, 0x0f, 0x04, 0x46,
	0x62, 0x9f, 0x97, 0xd4, 0x77, 0xd0, 0x75, 0x89, 0xc5, 0xcd, 0x20, 0xda, 0x77, 0x83, 0xb6, 0x7f,
	0x78, 0x94, 0x36, 0xa3, 0x20, 0x8a, 0x41, 0x88, 0xfb, 0xf0, 0x43, 0x08, 0x31, 0x2d, 0x48, 0x2b,
	0x5c, 0x95, 0x57, 0x58, 0x8d, 0xd0, 0xcd, 0x69, 0x4d, 0xb6, 0xfc, 0x98, 0xf4, 0xa9, 0x18, 0xac,
	0xa1, 0x39, 0x4f, 0x14, 0x68, 0xd3, 0xf3, 0xf7, 0x70, 0x51, 0xe2, 0xcd, 0x31, 0xc9, 0x99, 0x1d,
	0xbe, 0x8f, 0xae, 0x48, 0x1d, 0xb6, 0xa3, 0x3e, 0x45, 0x50, 0x23, 0x70, 0xa6, 0x56, 0xf8, 0x04,
	0x5a, 0x0c, 0x38, 0xb1, 0x93, 0x99, 0x8a, 0xf9, 0x7b, 0x57, 0x73, 0x6b, 0x57, 0x6c, 0xd0, 0x5c,
	0x08, 0x72, 0x25, 0x35, 0x2c, 0x98, 0x00, 0x23, 0x25, 0x03, 0x2d, 0x20, 0xf1, 0x13, 0xd4, 0xd1,
	0x47, 0x10, 0xf2, 0x53, 0x32, 0x70, 0x5c, 0x20, 0xe5, 0xbd, 0xae, 0x14, 0x7a, 0xcd, 0x9a, 0x32,
	0xe7, 0x7c, 0xf1, 0x53, 0xfd, 0x81, 0x2a, 0xba, 0x2a, 0x75, 0xa8, 0x87, 0x64, 0x70, 0xfa, 0x94,
	0xbd, 0xde, 0x41, 0x98, 0x29, 0x37, 0x67, 0x4c, 0xc3, 0xac, 0xcb, 0x12, 0x83, 0xf7, 0x04, 0xe5,
	0x4b, 0x68, 0x99, 0xf1, 0x37, 0x16, 0xa9, 0x1a, 0x95, 0x9b, 0x45, 0xca, 0x4a, 0x26, 0x56, 0x57,
	0xd1, 0x5c, 0x3c, 0x0a, 0x89, 0x43, 0x8d, 0x1d, 0xdf, 0xcd, 0x00, 0xb0, 0xc1, 0x82, 0x5d, 0x45,
	0x73, 0x24, 0x4c, 0x79, 0xf5, 0x19, 0x5a, 0xbd, 0xc1, 0x00, 0x86, 0x07, 0x96, 0x81, 0xf6, 0x10,
	0x90, 0x13, 0x12, 0x50, 0xfb, 0x32, 0xc3, 0x2c, 0x03, 0x40, 0xdb, 0x00, 0x54, 0x5e, 0x41, 0xcb,
	0xc3, 0xd8, 0x1f, 0xb8, 0xf1, 0xa9, 0xd3, 0x3f, 0x02, 0xfe, 0x12, 0x6a, 0x64, 0x18, 0xdd, 0x12,
	0x47, 0x35, 0x19, 0x46, 0xf9, 0x30, 0x3a, 0x9f, 0x90, 0x7e, 0x14, 0x7a, 0x79, 0xf2, 0x46, 0x46,
	0x8e, 0x33, 0x24, 0xaf, 0xa0, 0xfe, 0x56, 0x05, 0xad, 0xca, 0xbb, 0x33, 0xf2, 0xfc, 0x03, 0x9f,
	0xc4, 0x4f, 0x31, 0x91, 0xd7, 0x11, 0xea, 0x07, 0x6e, 0x92, 0xb0, 0x9d, 0x59, 0xa5, 0x3b, 0x73,
	0x8e, 0x42, 0x60, 0x5b, 0x2a, 0xcf, 0xa3, 0xf9, 0x04, 0x76, 0xa9, 0xd3, 0x8f, 0x46, 0x61, 0xca,
	0x7d, 0x0d, 0x44, 0x41, 0x4d, 0x80, 0x40, 0xe3, 0x7e, 0xe2, 0x78, 0x64, 0x7f, 0x74, 0x70, 0x40,
	0xa7, 0xad, 0x61, 0x36, 0xfc, 0xa4, 0x45, 0xcb, 0xca, 0x6d, 0xb4, 0xcc, 0x57, 0x09, 0x26, 0x8b,
	0x1a, 0x90, 0x99, 0xfc, 0x22, 0xe9, 0x1c, 0xaa, 0xbc, 0x22, 0x86, 0x9c, 0x38, 0x31, 0x19, 0xb8,
	0x7e, 0x08, 0x12, 0x7c, 0x8e, 0x6e, 0x0e, 0x3e, 0xdc, 0xc4, 0x14, 0x70, 0xf5, 0x73, 0x0b, 0x7e,
	0xd5, 0x56, 0x6f, 0xdb, 0x0d, 0xdd, 0xa7, 0x18, 0xeb, 0x04, 0x76, 0xaa, 0x93, 0xd8, 0x51, 0xcd,
	0x82, 0x1b, 0xb5, 0x19, 0x9c, 0x0e, 0x8f, 0x9e, 0xa2, 0x83, 0x55, 0xd4, 0x08, 0xc9, 0xa1, 0x9b,
	0xfa, 0x27, 0x6c, 0x2a, 0x1b, 0x66, 0x56, 0x56, 0xbf, 0xbf, 0x68, 0xcf, 0x1e, 0xfa, 0x41, 0xd0,
	0x1b, 0xc5, 0xfd, 0x23, 0x37, 0x21, 0xac, 0xed, 0x09, 0xa2, 0x5a, 0x99, 0x22, 0xaa, 0xb2, 0xd4,
	0xcf, 0xe4, 0x78, 0x78, 0x11, 0x2d, 0x1d, 0x46, 0x81, 0x97, 0x9b, 0x47, 0xb6, 0x68, 0x8b, 0x00,
	0xcd, 0x26, 0x51, 0x79, 0x0d, 0x5d, 0x4c, 0x46, 0x87, 0x87, 0x24, 0x61, 0x1a, 0x43, 0xb2, 0x63,
	0x33, 0xa6, 0x32, 0xc6, 0x89, 0x8d, 0xa4, 0x7e, 0xac, 0xc0, 0xff, 0xfa, 0xe8, 0x74, 0xdd, 0xed,
	0x1f, 0x5b, 0xa9, 0x9b, 0x92, 0x29, 0x73, 0x93, 0xe3, 0x4b, 0xfd, 0x89, 0xa2, 0x90, 0xbe, 0x33,
	0xf2, 0xfb, 0xc7, 0xeb, 0xa3, 0xd3, 0x27, 0xd7, 0x9d, 0x34, 0x31, 0xd5, 0x29, 0x13, 0x43, 0xc7,
	0xde, 0x8f, 0x92, 0x94, 0xef, 0xf2, 0x06, 0x00, 0x9a, 0x51, 0x92, 0x2a, 0xf7, 0xd0, 0xb3, 0xb4,
	0x91, 0x7e, 0x14, 0x05, 0x5e, 0xf4, 0x28, 0x74, 0xb8, 0x60, 0xf1, 0x21, 0x5f, 0x00, 0x64, 0x93,
	0xe3, 0x2c, 0x86, 0x02, 0x83, 0x99, 0x1c, 0x45, 0x8f, 0x9c, 0xfd, 0xd1, 0xe9, 0xbe, 0xdb, 0x3f,
	0xe6, 0xce, 0xd3, 0x3c, 0xc0, 0xd6, 0x19, 0x48, 0xfd, 0xae, 0x2a, 0x7a, 0xbe, 0xe0, 0xa7, 0x8c,
	0x62, 0x9f, 0xc4, 0x60, 0x1d, 0x89, 0xc7, 0x06, 0x07, 0x8e, 0x12, 0x71, 0x07, 0x5c, 0x5e, 0xe8,
	0x6f, 0xd8, 0x78, 0x94, 0xd7, 0xbc, 0x67, 0x4c, 0xb9, 0xdf, 0xa5, 0xde, 0xf1, 0x2d, 0xb4, 0xc8,
	0x35, 0xce, 0x91, 0x1b, 0x7a, 0x01, 0xe1, 0xc3, 0x59, 0x60, 0xc0, 0x2d, 0x0a, 0x93, 0x7d, 0x17,
	0x36, 0x8c, 0x9c, 0xef, 0xb2, 0x8d, 0x50, 0x10, 0x25, 0xa9, 0x03, 0x03, 0x4b, 0x56, 0x66, 0xa8,
	0x2d, 0x5f, 0x9b, 0x60, 0xcb, 0xcb, 0x0c, 0xaf, 0xb5, 0xa3, 0x24, 0x05, 0x4d, 0x6c, 0xce, 0x05,
	0xfc, 0x57, 0xb2, 0xda, 0x41, 0x0d, 0x01, 0x7e, 0x6a, 0x49, 0x5d, 0x45, 0x8d, 0xf7, 0x46, 0x2e,
	0x65, 0x99, 0x0f, 0x31, 0x2b, 0xab, 0xff, 0xbc, 0x52, 0x30, 0x76, 0xe0, 0x53, 0x0c, 0xdc, 0x21,
	0x0b, 0x3b, 0xae, 0x23, 0x44, 0xe0, 0x87, 0xc3, 0x83, 0x0f, 0x3a, 0x36, 0x0a, 0xa1, 0x0a, 0xb9,
	0x34, 0x3d, 0xd5, 0x09, 0xd3, 0xb3, 0x80, 0x2a, 0x8f, 0xf9, 0xbc, 0x55, 0x1e, 0x43, 0xe9, 0x94,
	0x4f, 0x52, 0xe5, 0x54, 0xb2, 0xc2, 0x5c, 0xa1, 0x67, 0x8e, 0xdd, 0x6b, 0xe8, 0x62, 0x4e, 0x4f,
	0x8c, 0xfb, 0x38, 0xc7, 0xf6, 0xc6, 0x58, 0x59, 0x88, 0x9e, 0x54, 0x52, 0x70, 0xe4, 0xb7, 0xdd,
	0x21, 0x0d, 0xf3, 0xce, 0x94, 0xea, 0xd7, 0xd0, 0xec, 0xc0, 0x1d, 0x06, 0x7e, 0x48, 0xb8, 0xd9,
	0xbc, 0x54, 0x30, 0x9b, 0xbc, 0x15, 0x53, 0x90, 0xa9, 0xdf, 0x5a, 0xd4, 0x21, 0x7c, 0xca, 0x68,
	0x5c, 0xd9, 0x8b, 0xfc, 0x30, 0x55, 0x5e, 0x45, 0x0d, 0x61, 0xd5, 0xa7, 0x3a, 0x23, 0x19, 0xc5,
	0xd8, 0x25, 0xaa, 0xe6, 0x5d, 0x22, 0x05, 0xd5, 0x13, 0xff, 0x7d, 0x21, 0x72, 0xf4, 0xb7, 0x34,
	0x5f, 0xf5, 0x82, 0x23, 0x9c, 0x45, 0x07, 0x6c, 0x22, 0x59, 0x41, 0xfd, 0x9a, 0x1a, 0xba, 0x25,
	0xcb, 0x59, 0x4c, 0xdc, 0x94, 0xc0, 0x88, 0xdc, 0xb8, 0x17, 0x47, 0x9f, 0x07, 0xfe, 0x50, 0x40,
	0x94, 0x3b, 0xe8, 0x5c, 0x14, 0xfb, 0x87, 0xfe, 0x74, 0x7e, 0x39, 0x5e, 0x59, 0x43, 0x8d, 0x13,
	0x12, 0x44, 0x7d, 0x21, 0x4d, 0x53, 0x42, 0x0b, 0x41, 0x03, 0x3c, 0x67, 0x8a, 0xbe, 0x3e, 0x36,
	0xda, 0xd4, 0xe2, 0xbc, 0x88, 0x96, 0x86, 0x6e, 0x9c, 0xfa, 0xfd, 0x80, 0x38, 0x63, 0xe6, 0xeb,
	0xe6, 0xa2, 0x80, 0x1a, 0x94, 0x0c, 0xa2, 0x93, 0xfc, 0xe2, 0xf3, 0x92, 0xf2, 0x36, 0x5a, 0x70,
	0xfb, 0x7d, 0x12, 0x10, 0x3e, 0x25, 0xb3, 0x53, 0xd9, 0x91, 0xe8, 0x40, 0x20, 0x06, 0xee, 0x63,
	0x27, 0x19, 0x12, 0xe2, 0x51, 0x9b, 0x5e, 0x35, 0x1b, 0x03, 0xf7, 0xb1, 0x05, 0x65, 0x90, 0xf9,
	0x83, 0xe8, 0x91, 0x13, 0xbb, 0x9e, 0x3f, 0x4a, 0x68, 0x0c, 0x59, 0x35, 0xe7, 0x0e, 0xa2, 0x47,
	0x26, 0x05, 0x28, 0x77, 0xd1, 0xf9, 0x24, 0xf5, 0xfb, 0xc7, 0xa7, 0x0e, 0xa5, 0x22, 0x27, 0xc4,
	0x0d, 0x68, 0x44, 0xd9, 0x30, 0x97, 0x19, 0x62, 0x23, 0x7a, 0x64, 0x52, 0x30, 0x5d, 0x2e, 0x3f,
	0x49, 0xdd, 0xb0, 0x4f, 0x56, 0xe6, 0xf9, 0x72, 0xf1, 0xb2, 0xfa, 0x19, 0xe8, 0x05, 0x69, 0x5d,
	0x5a, 0x24, 0x49, 0xe3, 0xe8, 0xb4, 0xb4, 0x30, 0xe3, 0xb1, 0x57, 0xf2, 0x63, 0x57, 0x0f, 0xd0,
	0x8b, 0x72, 0xfd, 0xc8, 0x3b, 0x24, 0x76, 0xec, 0xf6, 0x8f, 0xfd, 0xf0, 0x70, 0x5c, 0x3f, 0x91,
	0xe6, 0xbf, 0x72, 0xa3, 0x2a, 0xcd, 0xff, 0x4d, 0xc4, 0xfd, 0xff, 0x84, 0x85, 0xa5, 0xcc, 0x5c,
	0xce, 0x73, 0x18, 0x8d, 0x4c, 0xbf, 0xb0, 0x52, 0x70, 0xbf, 0xad, 0x21, 0xe9, 0xa7, 0x6e, 0x1a,
	0xc5, 0xcc, 0x26, 0x35, 0x03, 0xbf, 0x7f, 0x7c, 0x66, 0x27, 0xd7, 0x11, 0x8a, 0x62, 0x8f, 0xc4,
	0x4c, 0x89, 0x30, 0x15, 0x31, 0x47, 0x21, 0x54, 0x89, 0x40, 0x38, 0xc4, 0xf6, 0x39, 0xab, 0x5e,
	0xe3, 0xe1, 0x10, 0x85, 0xd1, 0xf5, 0x57, 0xbf, 0xb9, 0x8a, 0x5e, 0x3a, 0x8b, 0x87, 0x9d, 0xd0,
	0x4f, 0xbb, 0xd0, 0x60, 0x71, 0xb4, 0x95, 0x0f, 0xc2, 0xc8, 0x45, 0x34, 0x33, 0x0a, 0xfd, 0x94,
	0x05, 0x5c, 0x33, 0x26, 0x2b, 0x94, 0xd8, 0xab, 0x97, 0xd8, 0x2b, 0x84, 0x4a, 0x6c, 0xfb, 0xe5,
	0x42, 0xa5, 0x57, 0x51, 0x63, 0xc8, 0x63, 0x78, 0x2a, 0xbf, 0x13, 0x95, 0x81, 0xa0, 0x00, 0x2e,
	0xde, 0x1b, 0x91, 0x11, 0xa1, 0xc2, 0xdc, 0x30, 0x59, 0x01, 0x9c, 0xa6, 0x84, 0xbc, 0x37, 0x22,
	0x61, 0x9f, 0x38, 0xe1, 0x68, 0xb0, 0x4f, 0x62, 0xe6, 0x8b, 0x9a, 0x4b, 0x02, 0xdc, 0xa1, 0x50,
	0xf5, 0x1b, 0x2a, 0x85, 0x00, 0xac, 0x43, 0x4e, 0x48, 0x3c, 0x88, 0x62, 0x62, 0x92, 0xf7, 0x46,
	0x3e, 0x19, 0x94, 0x95, 0x76, 0x65, 0x82, 0xd2, 0xbe, 0x88, 0x66, 0x40, 0xd7, 0x25, 0x7c, 0x96,
	0x58, 0x21, 0xa7, 0x24, 0x6a, 0x4f, 0x50, 0x12, 0x2b, 0x68, 0x16, 0xb6, 0x46, 0x9c, 0x10, 0xee,
	0x8e, 0x8a, 0xa2, 0xfa, 0x91, 0x42, 0xbc, 0x61, 0x84, 0x27, 0x6e, 0xe0, 0x7b, 0xcd, 0x68, 0x30,
	0x70, 0x43, 0xef, 0x8c, 0x94, 0xdc, 0x3d, 0xf4, 0xac, 0xec, 0x70, 0x8e, 0x3c, 0x3d, 0x8e, 0xa3,
	0x58, 0xb9, 0x82, 0x1a, 0x6c, 0x59, 0x33, 0xed, 0x3e, 0x4b, 0xcb, 0x86, 0xa7, 0x7e, 0x59, 0xa5,
	0xd0, 0x9b, 0x45, 0x73, 0x87, 0xc2, 0xc1, 0x38, 0x53, 0x5a, 0x14, 0x54, 0xcf, 0x79, 0xe3, 0xf4,
	0x37, 0xd0, 0x0b, 0xc7, 0x45, 0x24, 0x22, 0x44, 0x19, 0xa4, 0x00, 0x68, 0x24, 0x31, 0x99, 0x03,
	0x08, 0x93, 0xe1, 0xb7, 0x0a, 0x0e, 0x8a, 0x45, 0xd2, 0x0e, 0x79, 0x9c, 0x6a, 0xa3, 0x34, 0xda,
	0x1f, 0xd1, 0x80, 0x2b, 0xeb, 0xb1, 0x32, 0xee, 0x51, 0x7d, 0x5c, 0x18, 0xc0, 0x96, 0x1b, 0x04,
	0xd1, 0x23, 0x42, 0xc2, 0x56, 0x1c, 0x0d, 0x13, 0xea, 0xf8, 0x83, 0x0b, 0xe0, 0x91, 0x03, 0x96,
	0xbf, 0x58, 0x34, 0x1b, 0x00, 0x68, 0x91, 0x83, 0x04, 0x38, 0xca, 0xec, 0x1e, 0xac, 0x24, 0x60,
	0xe7, 0x84, 0xe1, 0x63, 0xe8, 0xd8, 0x7f, 0x9f, 0x38, 0x81, 0x9f, 0x88, 0xa0, 0x62, 0x8e, 0x42,
	0xda, 0x7e, 0x92, 0xaa, 0xbf, 0x5f, 0x2b, 0x48, 0x52, 0x2f, 0x26, 0x9e, 0x4f, 0xa3, 0x67, 0x93,
	0x24, 0xa3, 0x80, 0x7a, 0x07, 0x6e, 0x9f, 0x86, 0x24, 0xf9, 0x14, 0x01, 0x83, 0x18, 0x1e, 0xac,
	0xcb, 0xc0, 0x4d, 0xfb, 0x47, 0xc2, 0x51, 0xac, 0x83, 0x09, 0x4d, 0xfb, 0x47, 0x2c, 0x7b, 0xd6,
	0x8f, 0x62, 0x88, 0xc5, 0x69, 0xbf, 0x0d, 0x53, 0x14, 0x95, 0x1e, 0x9a, 0x1f, 0x66, 0xfd, 0x80,
	0x57, 0x38, 0xcd, 0x5f, 0x2a, 0x72, 0xb3, 0x96, 0x03, 0xe4, 0x9b, 0x58, 0xfd, 0xee, 0x2a, 0x42,
	0x63, 0x1c, 0x70, 0x25, 0x66, 0x8c, 0xb3, 0x3c, 0xcb, 0x27, 0x0c, 0xc2, 0xac, 0x70, 0x04, 0xae,
	0x29, 0xe3, 0x8c, 0x59, 0x63, 0x14, 0x8e, 0x06, 0x4d, 0xce, 0xdc, 0x55, 0x34, 0x07, 0x04, 0x07,
	0xae, 0x1f, 0x88, 0x8c, 0x6f, 0x23, 0x1c, 0x0d, 0x36, 0xa0, 0xac, 0x10, 0x74, 0x2e, 0xa6, 0x9c,
	0xd0, 0xb5, 0x5f, 0xba, 0xf7, 0xf6, 0x07, 0x63, 0x7a, 0x4d, 0x67, 0xa0, 0xfb, 0xcf, 0x1e, 0x3b,
	0x84, 0xfd, 0xa4, 0x11, 0xfb, 0x66, 0xec, 0x86, 0x29, 0xf1, 0x4c, 0xde, 0x38, 0xd8, 0x9f, 0x43,
	0x06, 0x72, 0xc6, 0x2b, 0x7f, 0x8e, 0xae, 0xed, 0x32, 0x47, 0x18, 0x5c, 0x00, 0xd4, 0x8f, 0xa1,
	0x59, 0xde, 0xaa, 0x72, 0x05, 0x4d, 0x6e, 0x17, 0x57, 0x94, 0xcb, 0xe8, 0xc2, 0x18, 0xc5, 0xcd,
	0x10, 0xf1, 0x70, 0x55, 0xfd, 0x4e, 0x91, 0x3d, 0x33, 0x49, 0x32, 0x8c, 0xc2, 0x84, 0xbc, 0x33,
	0x22, 0xf1, 0xa9, 0x45, 0x62, 0xdf, 0x0d, 0xfc, 0xf7, 0x89, 0xa7, 0x7c, 0x0c, 0xcd, 0x1c, 0xb8,
	0xfd, 0x54, 0x64, 0xce, 0x6e, 0xe7, 0x46, 0x3c, 0xa5, 0xca, 0xda, 0x86, 0xdb, 0x4f, 0x4d, 0x56,
	0x6b, 0xf5, 0xc7, 0x2b, 0xa8, 0x0e, 0x65, 0x05, 0xa3, 0xda, 0x31, 0x39, 0xe5, 0x86, 0x03, 0x7e,
	0x2a, 0x36, 0x9a, 0x3d, 0x71, 0x03, 0xae, 0xa7, 0xab, 0x77, 0x96, 0xee, 0xbd, 0xfe, 0x94, 0x6d,
	0xaf, 0x51, 0xc7, 0x1d, 0xf4, 0xf9, 0xfd, 0xd9, 0xce, 0xce, 0xb6, 0x6e, 0x1a, 0x4d, 0x53, 0x34,
	0x05, 0x0b, 0x7c, 0xe2, 0x06, 0xa0, 0x40, 0x49, 0xec, 0xf7, 0xf9, 0x0e, 0x46, 0x27, 0x6e, 0xd0,
	0x61, 0x10, 0x90, 0x68, 0x20, 0x48, 0xd2, 0x18, 0x42, 0x36, 0x96, 0x21, 0x9b, 0x3b, 0x71, 0x03,
	0x8b, 0x02, 0xd4, 0x17, 0xd0, 0x5c, 0xd6, 0xbc, 0x32, 0x8f, 0x44, 0x07, 0xb8, 0xa2, 0x20, 0x74,
	0xce, 0xb2, 0x4d, 0xa3, 0xb3, 0x89, 0xab, 0xea, 0x0f, 0x56, 0x78, 0x68, 0x0c, 0xfe, 0x44, 0xff,
	0x68, 0x1b, 0x64, 0xbe, 0x1b, 0x36, 0x03, 0x1f, 0x3c, 0x6a, 0x2a, 0xf9, 0x61, 0x9f, 0x0c, 0x53,
	0xa1, 0xab, 0x78, 0x11, 0x7c, 0xa1, 0x98, 0xf4, 0xfd, 0xa1, 0x9f, 0xf9, 0xdb, 0x3c, 0xba, 0xca,
	0xa0, 0xb4, 0xdb, 0x2d, 0xb4, 0x18, 0xf3, 0xf1, 0xbf, 0x07, 0xe3, 0xe7, 0xaa, 0x58, 0x7d, 0xf2,
	0xfc, 0x98, 0x72, 0x45, 0xe5, 0x26, 0x42, 0xb1, 0x1b, 0x7a, 0xd1, 0x20, 0x01, 0x37, 0x08, 0x06,
	0xbb, 0x7c, 0xbf, 0xf2, 0x9a, 0x99, 0x03, 0xaa, 0xdf, 0x35, 0x57, 0x48, 0x47, 0x81, 0xa5, 0x65,
	0xa1, 0xc1, 0x06, 0x6a, 0x0c, 0x92, 0x43, 0x27, 0x77, 0x2a, 0x71, 0x85, 0xb1, 0xa0, 0xb7, 0xa2,
	0xd4, 0x65, 0x7e, 0xf9, 0x36, 0x3f, 0x8a, 0xb9, 0x8f, 0xe9, 0x51, 0xc5, 0x4e, 0xc7, 0xb0, 0x1d,
	0xab, 0xa7, 0xeb, 0xcd, 0x2d, 0x73, 0x76, 0x90, 0x1c, 0x0a, 0xf3, 0x2f, 0x92, 0x3a, 0x3c, 0x17,
	0x00, 0x42, 0x30, 0xcf, 0xf3, 0x3a, 0x54, 0x13, 0x7f, 0x14, 0x9d, 0x4b, 0xe8, 0x54, 0xf2, 0xb1,
	0xde, 0x9a, 0xb0, 0xb3, 0x32, 0xc6, 0xd6, 0xd8, 0xac, 0x9b, 0xbc, 0x8a, 0xb2, 0x85, 0xe6, 0xd9,
	0x2f, 0x67, 0x30, 0x4a, 0x99, 0x35, 0x92, 0x25, 0x75, 0x5a, 0x0b, 0xdb, 0xa3, 0x94, 0x98, 0x28,
	0xc9, 0x7e, 0x43, 0x4b, 0xae, 0xe7, 0x39, 0x10, 0x91, 0x8f, 0x62, 0x42, 0xed, 0xfc, 0x93, 0x5a,
	0xd2, 0x3c, 0x6f, 0x93, 0x91, 0x9b, 0xc8, 0xcd, 0x7e, 0x2b, 0xef, 0xc0, 0x52, 0x0f, 0xa2, 0x13,
	0x92, 0x35, 0xc6, 0xfc, 0x82, 0xbb, 0x67, 0x36, 0x66, 0xd2, 0x2a, 0xa2, 0xbd, 0xc5, 0x38, 0x5f,
	0x54, 0x1e, 0xa0, 0x85, 0xfd, 0x20, 0x8a, 0x3c, 0xc7, 0x1f, 0x0c, 0xdd, 0x7e, 0xca, 0x5d, 0xe1,
	0x3b, 0x67, 0x36, 0xb8, 0x0e, 0x15, 0x0c, 0x4a, 0x6f, 0xce, 0xef, 0x8f, 0x0b, 0xd0, 0xd8, 0x81,
	0xeb, 0x8d, 0xb9, 0x6b, 0x3c, 0x45, 0x63, 0x1b, 0xae, 0x97, 0xf1, 0x36, 0x7f, 0x30, 0x2e, 0x28,
	0x16, 0xba, 0x24, 0x16, 0x80, 0x5a, 0x83, 0x28, 0x74, 0xfa, 0x74, 0x2f, 0x50, 0xdf, 0x7a, 0xfe,
	0xde, 0x73, 0xb9, 0x66, 0x27, 0xec, 0x18, 0xf3, 0x42, 0x52, 0x06, 0xae, 0x7e, 0x43, 0x05, 0x9d,
	0x63, 0xc4, 0x67, 0xec, 0xa8, 0x55, 0xd4, 0x10, 0x12, 0xcf, 0xad, 0x78, 0x56, 0x9e, 0xb0, 0xdb,
	0x6a, 0x93, 0x76, 0x1b, 0xf8, 0x41, 0x34, 0xa1, 0x58, 0xe7, 0x7e, 0x10, 0x4d, 0x24, 0xde, 0x44,
	0x0d, 0x10, 0x26, 0x77, 0x3f, 0x60, 0x62, 0xd0, 0xb8, 0x3f, 0x73, 0xe0, 0x06, 0x09, 0x31, 0x33,
	0xf0, 0xea, 0x6d, 0x84, 0xc6, 0x62, 0xa4, 0x5c, 0x41, 0x33, 0x1e, 0x09, 0xdc, 0x53, 0xca, 0x61,
	0xf5, 0x7e, 0xed, 0xb5, 0xb5, 0xb7, 0x4c, 0x06, 0x59, 0xfd, 0xc6, 0x0a, 0x42, 0x63, 0x31, 0xa1,
	0x07, 0x07, 0xfd, 0xd4, 0x3f, 0x81, 0xe8, 0x8a, 0x7b, 0x24, 0xa2, 0x4c, 0x23, 0xc2, 0x20, 0x4a,
	0xc5, 0x49, 0x0f, 0xfc, 0x56, 0x56, 0xd1, 0x2c, 0x5d, 0x2a, 0xee, 0x93, 0x55, 0x61, 0x07, 0x9f,
	0x03, 0x88, 0x11, 0x2a, 0xcf, 0xa1, 0x06, 0xc5, 0x45, 0x23, 0x66, 0x93, 0x68, 0xc7, 0xaf, 0x9b,
	0xb4, 0x42, 0x77, 0x94, 0x2a, 0x2f, 0xa1, 0x45, 0xf0, 0x06, 0xf6, 0xdd, 0xfe, 0xb1, 0x13, 0xbb,
	0x29, 0x1b, 0x4b, 0xf5, 0x7e, 0xe5, 0x75, 0x73, 0x41, 0xc0, 0x4d, 0x37, 0x25, 0xab, 0xaf, 0xa0,
	0x45, 0x49, 0xf6, 0xce, 0x62, 0x72, 0x75, 0x0f, 0xcd, 0xe7, 0xe4, 0x0a, 0x26, 0x30, 0xe9, 0xbb,
	0x99, 0x97, 0xc9, 0x0a, 0x60, 0x84, 0x1f, 0x3b, 0x61, 0x14, 0x0f, 0xdc, 0x80, 0x8f, 0x66, 0xf6,
	0x71, 0x87, 0x16, 0x01, 0x75, 0x2a, 0x50, 0x6c, 0x49, 0x66, 0x4f, 0x19, 0x6a, 0xf5, 0x65, 0x34,
	0x9f, 0x93, 0xb2, 0xb3, 0xb8, 0x50, 0x5b, 0x85, 0x34, 0x17, 0x58, 0x3c, 0x91, 0xe6, 0xf3, 0x9e,
	0x36, 0x71, 0xa2, 0x7e, 0xbc, 0xe0, 0x72, 0x42, 0x2b, 0x56, 0x14, 0x3c, 0x7d, 0x03, 0x5f, 0x55,
	0x99, 0x90, 0xce, 0xdf, 0x88, 0x46, 0x21, 0x3d, 0x40, 0x61, 0xae, 0x98, 0x88, 0xeb, 0x58, 0x09,
	0xc4, 0xf9, 0xbd, 0x91, 0x1b, 0x88, 0xe8, 0x7a, 0xc6, 0x14, 0x45, 0xa8, 0x11, 0xbb, 0x31, 0x20,
	0xd8, 0xbc, 0xf0, 0x12, 0xc0, 0x07, 0x24, 0x3d, 0x8a, 0x44, 0xda, 0x90, 0x97, 0xa0, 0x25, 0xe0,
	0x06, 0x1c, 0x1d, 0x16, 0x93, 0x88, 0xa2, 0xfa, 0x75, 0xd5, 0xc2, 0xf4, 0x74, 0x4f, 0x48, 0x7c,
	0x44, 0x5c, 0x8f, 0xa9, 0xf6, 0x77, 0xd0, 0x02, 0x77, 0xba, 0x27, 0xa8, 0x77, 0xaa, 0xc9, 0xbb,
	0xbb, 0xba, 0xb9, 0xa5, 0x6b, 0x2d, 0x47, 0x6b, 0xeb, 0xa6, 0x7d, 0xff, 0x82, 0x5c, 0x76, 0x36,
	0xbb, 0xed, 0x96, 0x39, 0xcf, 0xdb, 0xb0, 0x4b, 0x87, 0xcf, 0x33, 0xe2, 0xf0, 0xf9, 0x4d, 0x74,
	0x49, 0x3e, 0x3f, 0xc8, 0x9c, 0x71, 0x36, 0xc2, 0x8b, 0xf9, 0x53, 0x84, 0x2c, 0x4d, 0x3d, 0x21,
	0x81, 0xcc, 0x06, 0x5e, 0xcc, 0x67, 0xbf, 0x89, 0x2e, 0x25, 0xd1, 0x28, 0xee, 0x93, 0x52, 0xf3,
	0x6c, 0x3e, 0x2e, 0x32, 0xac, 0xdc, 0xbc, 0xda, 0x29, 0x1c, 0x19, 0xda, 0xa3, 0x34, 0x02, 0x13,
	0x6a, 0xfb, 0x43, 0x7a, 0x64, 0x38, 0xc1, 0x4b, 0x07, 0x51, 0x1c, 0xc6, 0xd1, 0x61, 0x4c, 0x92,
	0x24, 0x4b, 0x05, 0xf3, 0xb2, 0xfa, 0x05, 0x05, 0x0f, 0x5e, 0xb4, 0xb7, 0xe1, 0x87, 0x7e, 0x42,
	0xd5, 0x17, 0xcc, 0x3c, 0xf8, 0x1b, 0x3c, 0xe0, 0xe1, 0x45, 0x58, 0x57, 0x32, 0xd8, 0x0f, 0xc8,
	0x80, 0x2b, 0x2f, 0x5e, 0x02, 0x06, 0xf6, 0x23, 0xef, 0x94, 0x9f, 0x3b, 0xd3, 0xdf, 0xd0, 0x4a,
	0x32, 0xea, 0xf7, 0xa1, 0x7f, 0x1e, 0x6f, 0xf1, 0xa2, 0xfa, 0x52, 0x21, 0xcf, 0x20, 0xba, 0xe7,
	0x49, 0x2b, 0x71, 0xba, 0xac, 0x7e, 0x41, 0x29, 0x3e, 0x09, 0xbd, 0x4d, 0x12, 0x82, 0x5b, 0x64,
	0x47, 0x11, 0x8c, 0x1e, 0x16, 0x31, 0xf5, 0xd3, 0x40, 0x0c, 0x9d, 0x15, 0x58, 0x5a, 0xf5, 0x71,
	0x2a, 0xe2, 0x24, 0xf8, 0x2d, 0xc5, 0x55, 0xb5, 0x42, 0x5c, 0x75, 0x11, 0xcd, 0xf4, 0x83, 0x28,
	0x0b, 0x0c, 0x59, 0x41, 0x1d, 0x14, 0x36, 0xca, 0xc3, 0x28, 0x0e, 0xbc, 0x27, 0x67, 0xef, 0xde,
	0xe6, 0x07, 0xdd, 0xb9, 0xfc, 0x5d, 0xf1, 0xd8, 0x2b, 0x6b, 0xc9, 0x1c, 0x93, 0xaa, 0xdf, 0x58,
	0x99, 0x70, 0xd5, 0xe2, 0xe1, 0x11, 0x21, 0x01, 0xec, 0xed, 0xfe, 0x91, 0x9b, 0x3a, 0x62, 0x0b,
	0x64, 0xa1, 0xcd, 0x22, 0x80, 0xb9, 0x4b, 0x33, 0x29, 0xff, 0x5f, 0x38, 0xd0, 0xc9, 0x85, 0x46,
	0xb5, 0x62, 0x68, 0xa4, 0xa2, 0xc5, 0xa1, 0x1b, 0xbb, 0x03, 0xe7, 0x88, 0xc4, 0xd1, 0xf8, 0xe0,
	0x7a, 0x9e, 0x02, 0xb7, 0x48, 0x1c, 0x19, 0x9e, 0xfa, 0xc9, 0x62, 0x24, 0x6f, 0x92, 0x3e, 0xf1,
	0x4f, 0x88, 0xf7, 0xee, 0xc0, 0x4d, 0x36, 0xfd, 0x83, 0x27, 0x64, 0xeb, 0x45, 0x64, 0x98, 0x8b,
	0x61, 0x69, 0xe0, 0x43, 0x0f, 0x94, 0x5e, 0x44, 0x4b, 0x7e, 0x08, 0x7b, 0x3d, 0x8a, 0x4f, 0x1d,
	0x6a, 0x53, 0xc4, 0x69, 0x9c, 0x80, 0x5a, 0x41, 0x94, 0xaa, 0xbf, 0x5b, 0x29, 0xde, 0x64, 0x39,
	0x8a, 0x1e, 0x59, 0xa3, 0xf8, 0x84, 0xd0, 0x9b, 0x2c, 0x09, 0xfd, 0x95, 0xeb, 0x9c, 0x01, 0xce,
	0x0e, 0xfd, 0xa8, 0xe1, 0x65, 0x46, 0xd8, 0x49, 0xd2, 0xd3, 0x40, 0xdc, 0x9f, 0xc8, 0x9c, 0x53,
	0x0b, 0x80, 0xf4, 0x68, 0x91, 0xb8, 0x83, 0x81, 0x9b, 0x92, 0xc2, 0x24, 0x2d, 0x09, 0x38, 0x9b,
	0x27, 0xe5, 0x16, 0x5a, 0xcc, 0x28, 0xe9, 0x60, 0x67, 0xd8, 0xc1, 0xb6, 0x00, 0xd2, 0x01, 0xaf,
	0xa1, 0x0b, 0x19, 0x51, 0x6e, 0x61, 0xce, 0xd1, 0x16, 0xcf, 0x0b, 0x94, 0x26, 0x16, 0x48, 0xfd,
	0x78, 0xe1, 0x3a, 0xc6, 0xce, 0xd0, 0x73, 0x53, 0x22, 0xb2, 0x07, 0x61, 0x4a, 0xd8, 0xa1, 0x1b,
	0x4c, 0x5d, 0x3e, 0x37, 0xde, 0x00, 0x00, 0x28, 0x3c, 0xf5, 0x66, 0x61, 0x3b, 0x89, 0x6d, 0x67,
	0x82, 0xf3, 0x9d, 0xa4, 0xfa, 0xe3, 0xa1, 0xfa, 0x69, 0x85, 0xcc, 0x7b, 0xa6, 0x18, 0x5c, 0x8f,
	0x4a, 0x7d, 0x7a, 0x98, 0x3a, 0x6e, 0x30, 0x3c, 0x72, 0x45, 0xe3, 0xe9, 0x61, 0xaa, 0x41, 0x59,
	0xfd, 0xa6, 0xe2, 0x6d, 0x11, 0x51, 0xb5, 0xe7, 0x87, 0x87, 0x7c, 0x63, 0x9f, 0x7d, 0x46, 0x76,
	0x01, 0xcd, 0x0c, 0xa3, 0xc4, 0x79, 0xcc, 0xcf, 0xbe, 0xeb, 0xc3, 0x28, 0x79, 0x57, 0x00, 0x4f,
	0x79, 0x60, 0x04, 0xc0, 0x3d, 0x01, 0x7c, 0x9f, 0xe7, 0x9b, 0x01, 0xf8, 0x59, 0x25, 0xa7, 0x9d,
	0xe9, 0xd3, 0xbc, 0xd3, 0xae, 0xde, 0x47, 0xaa, 0x7c, 0x7a, 0xe7, 0x0e, 0x48, 0x3c, 0x0a, 0x48,
	0x42, 0x8f, 0xaa, 0x9a, 0x47, 0x6e, 0x78, 0x48, 0x3c, 0xea, 0x1e, 0x40, 0x59, 0xdc, 0x06, 0xa0,
	0x05, 0x75, 0xaf, 0x20, 0xf9, 0x9a, 0xe7, 0xbd, 0x03, 0xb3, 0x26, 0x6e, 0x8f, 0x80, 0x7c, 0x85,
	0xc3, 0xbe, 0x93, 0xd3, 0xc3, 0xb3, 0xe1, 0xb0, 0x4f, 0x57, 0xfa, 0x3a, 0x42, 0x80, 0xf2, 0x7c,
	0x37, 0x88, 0x0e, 0xc5, 0x51, 0x6a, 0x38, 0xec, 0xb7, 0x28, 0x40, 0x1d, 0x15, 0x2c, 0x1f, 0xa8,
	0x39, 0xe0, 0xa8, 0x17, 0x0d, 0x47, 0xc3, 0xb3, 0x77, 0xd4, 0x7d, 0x34, 0x07, 0xec, 0x0d, 0x81,
	0x92, 0xeb, 0x9a, 0x6b, 0x05, 0x5d, 0x23, 0xb5, 0x66, 0x8e, 0xc9, 0xd5, 0xb0, 0x90, 0x44, 0x6d,
	0xf9, 0xc9, 0xc0, 0x4f, 0x12, 0x2d, 0x08, 0x32, 0xf2, 0x44, 0x31, 0xd0, 0xa2, 0xc7, 0xe0, 0x6e,
	0x10, 0x0c, 0x92, 0x43, 0x9e, 0x8a, 0xbf, 0x55, 0xe8, 0x64, 0x52, 0x5d, 0x53, 0xae, 0xa9, 0x7e,
	0x4f, 0xa5, 0x90, 0x1e, 0x06, 0xce, 0xcc, 0x28, 0x39, 0x72, 0xc3, 0x71, 0xee, 0x14, 0x9c, 0x21,
	0x65, 0x1d, 0xcd, 0x0c, 0xe1, 0x07, 0xed, 0x4c, 0xbe, 0x5a, 0x66, 0x76, 0xad, 0x2d, 0xad, 0xe3,
	0xf4, 0xb6, 0x34, 0x4b, 0xbf, 0x7f, 0xe1, 0xd8, 0xb1, 0x4c, 0xab, 0x27, 0x80, 0x5a, 0xdb, 0xd8,
	0xd5, 0x4d, 0x56, 0x15, 0x36, 0x2b, 0xfd, 0xe1, 0x24, 0xa9, 0x1b, 0xa7, 0x4e, 0xee, 0x3a, 0xd2,
	0x12, 0x85, 0x5b, 0x00, 0xb6, 0xfd, 0x01, 0x8d, 0xf6, 0x18, 0x65, 0x40, 0xc2, 0xc3, 0xf4, 0x48,
	0x24, 0x7b, 0x29, 0xac, 0x4d, 0x41, 0xea, 0xbb, 0x05, 0xfb, 0x3b, 0xe6, 0x9c, 0xad, 0xd1, 0x35,
	0x34, 0x17, 0x93, 0x7e, 0xe0, 0xfa, 0x03, 0xc2, 0xd6, 0xa8, 0x61, 0x8e, 0x01, 0x60, 0x79, 0x0e,
	0xdd, 0x01, 0xc9, 0xb1, 0x90, 0x95, 0xd5, 0xcf, 0x9b, 0xb0, 0xf6, 0x1b, 0x7e, 0xe8, 0x06, 0x9b,
	0xe0, 0xd3, 0xdd, 0x82, 0xc0, 0x3a, 0xf0, 0xc1, 0x7b, 0x77, 0x0e, 0xa3, 0xc0, 0xe3, 0xe9, 0xb4,
	0x05, 0x01, 0xa4, 0x44, 0xb7, 0xd1, 0xf2, 0x28, 0x94, 0xc9, 0x58, 0x5e, 0x6d, 0x69, 0x0c, 0x06,
	0x42, 0x95, 0x14, 0xed, 0xcb, 0x28, 0x49, 0xa3, 0xc1, 0x76, 0x72, 0x38, 0x3d, 0xc3, 0x79, 0xf6,
	0x89, 0x72, 0xe6, 0x41, 0xd5, 0x72, 0x1e, 0x94, 0x3a, 0x2c, 0xe8, 0x90, 0x66, 0xe4, 0xf6, 0x8f,
	0xb6, 0x76, 0x5a, 0x4f, 0xbe, 0xaa, 0xf2, 0x36, 0x6a, 0x1c, 0x8d, 0xbc, 0xb3, 0x6e, 0xa9, 0xe4,
	0xdb, 0x32, 0x67, 0x8f, 0x46, 0x1e, 0xbd, 0xa0, 0x72, 0xa3, 0x78, 0x21, 0x8c, 0x06, 0x64, 0xed,
	0xc8, 0xf5, 0x36, 0x63, 0xdf, 0xeb, 0xb8, 0x27, 0xea, 0x2f, 0xd5, 0x0a, 0xf3, 0x6c, 0xeb, 0x4e,
	0xee, 0x40, 0x03, 0x1c, 0x1e, 0x8b, 0x3a, 0x5e, 0x22, 0x5e, 0xe3, 0x45, 0x8a, 0xb1, 0xd9, 0xd5,
	0x39, 0xee, 0xfa, 0xf2, 0x22, 0xac, 0x39, 0xc4, 0x1f, 0xf4, 0x80, 0x86, 0x4f, 0xc0, 0x18, 0xa0,
	0xdc, 0x45, 0x98, 0x79, 0x72, 0xf4, 0xfe, 0xd3, 0xd1, 0x00, 0x62, 0x4b, 0xe6, 0x11, 0x96, 0xe0,
	0xca, 0x3d, 0x74, 0x51, 0x9c, 0x2d, 0x59, 0xa7, 0x49, 0x4a, 0x06, 0x2c, 0xe1, 0x4d, 0x35, 0x58,
	0xcd, 0x9c, 0x88, 0x83, 0xde, 0xbd, 0xc8, 0x3b, 0x64, 0xf1, 0xde, 0x39, 0x26, 0x71, 0x19, 0x00,
	0x24, 0xce, 0x4f, 0xd8, 0xcd, 0x2b, 0x9e, 0xb3, 0xcf, 0xca, 0xca, 0x73, 0x08, 0x91, 0xc7, 0x43,
	0x3f, 0x26, 0x20, 0xfc, 0xfc, 0x2c, 0x29, 0x07, 0x51, 0x5e, 0x40, 0x8b, 0x03, 0xf7, 0x31, 0x0b,
	0xd9, 0xa9, 0xc8, 0x22, 0x4a, 0x22, 0x03, 0x81, 0x8a, 0x1e, 0x09, 0x1e, 0x92, 0x01, 0x3b, 0x27,
	0x9c, 0xbf, 0x51, 0xb9, 0x33, 0x6b, 0xca, 0x40, 0xe5, 0x79, 0x34, 0x1f, 0xb8, 0xa3, 0xb0, 0x7f,
	0xe4, 0xa4, 0x7e, 0xff, 0x78, 0x65, 0x81, 0x4e, 0x00, 0x62, 0x20, 0xdb, 0xef, 0x1f, 0xe7, 0x4e,
	0x92, 0x16, 0xa5, 0x53, 0xb4, 0xd7, 0x10, 0x3a, 0x61, 0xf3, 0xdc, 0x8e, 0xfa, 0x2b, 0x4b, 0x53,
	0x32, 0xfb, 0x39, 0x1a, 0xf5, 0x9b, 0x8b, 0xa9, 0x61, 0x69, 0x85, 0xdb, 0x51, 0x9f, 0xb6, 0xc9,
	0x56, 0x15, 0xda, 0xac, 0x4c, 0x6d, 0x33, 0xa3, 0xf9, 0xbf, 0x5e, 0xfc, 0x69, 0x0b, 0x5a, 0x7f,
	0xda, 0x05, 0x9d, 0x39, 0x6b, 0x41, 0xcf, 0x7d, 0xc0, 0x05, 0x95, 0xe7, 0x12, 0x3d, 0x79, 0x2e,
	0xff, 0x1f, 0x2f, 0xae, 0xfa, 0xd1, 0x82, 0xe1, 0xb1, 0x75, 0x91, 0xe2, 0x7d, 0x8a, 0x33, 0xc6,
	0x2f, 0xae, 0x14, 0xbd, 0x18, 0xdd, 0x69, 0x45, 0xa9, 0x9b, 0x0f, 0xf0, 0x21, 0x4a, 0x61, 0x57,
	0x0b, 0x78, 0x5d, 0x56, 0x1a, 0x07, 0xfe, 0xcc, 0xc3, 0xe0, 0x81, 0xff, 0x0a, 0x9a, 0x7d, 0x9c,
	0x0b, 0xee, 0xab, 0xa6, 0x28, 0x02, 0xe6, 0x94, 0x63, 0x98, 0xa7, 0x21, 0x8a, 0x20, 0x6d, 0x85,
	0x2b, 0xdc, 0x2c, 0xbe, 0x7e, 0xb2, 0x8e, 0x93, 0x0f, 0xe6, 0xaa, 0xc5, 0x3b, 0x8c, 0x2d, 0x7e,
	0xa9, 0xba, 0x46, 0x2d, 0xdf, 0xb5, 0x9c, 0xe5, 0xd3, 0xd6, 0x8d, 0xb6, 0x61, 0xef, 0x39, 0x3d,
	0xa3, 0xb3, 0xe9, 0xd8, 0x7b, 0x3d, 0xfd, 0xbe, 0x22, 0x81, 0x4c, 0x5d, 0x6b, 0xed, 0xf1, 0x7b,
	0xd5, 0x2f, 0x23, 0x3c, 0xf1, 0x32, 0xcb, 0xa2, 0xb9, 0xdc, 0x2f, 0x5c, 0x64, 0xc9, 0xb2, 0x49,
	0xec, 0xfe, 0x15, 0xcf, 0x26, 0xad, 0xa0, 0xd9, 0xa1, 0x9b, 0x24, 0xfe, 0x89, 0x50, 0x2e, 0xa2,
	0x08, 0xab, 0x3e, 0x70, 0x43, 0xd7, 0x09, 0x09, 0xf1, 0x88, 0x47, 0xb5, 0xcb, 0xa2, 0x89, 0x00,
	0xd4, 0xa1, 0x10, 0xf9, 0x46, 0x5c, 0x83, 0x8d, 0x3e, 0xbb, 0x11, 0x77, 0xbb, 0x7c, 0xdd, 0x6d,
	0x8e, 0x1b, 0x65, 0xf9, 0xaa, 0xdb, 0x2b, 0x93, 0xae, 0xba, 0x21, 0xae, 0x40, 0x0b, 0xd7, 0xdc,
	0xa0, 0xcb, 0xbe, 0x9b, 0xa4, 0x6c, 0xc2, 0xe7, 0x59, 0x97, 0x0c, 0x60, 0x78, 0xea, 0x8f, 0x55,
	0xca, 0x8a, 0x61, 0x27, 0xf4, 0x53, 0x0d, 0x5c, 0x52, 0x7a, 0xfc, 0x32, 0x4d, 0x5c, 0xee, 0x8c,
	0x0f, 0x38, 0x77, 0xdd, 0xd8, 0x77, 0x43, 0xa1, 0x06, 0x8a, 0x60, 0x45, 0x45, 0x59, 0x76, 0x8a,
	0x26, 0xad, 0x98, 0x1c, 0x49, 0x30, 0xd8, 0xe0, 0xc0, 0xd3, 0x30, 0xf2, 0xb9, 0x29, 0xa8, 0x9a,
	0x63, 0x00, 0x8d, 0x58, 0x61, 0xdd, 0x67, 0xf8, 0x8d, 0x69, 0x58, 0xc5, 0x7c, 0x32, 0xe9, 0x5c,
	0x21, 0x99, 0xd4, 0x29, 0x7a, 0xdb, 0x85, 0x41, 0xe9, 0x2c, 0x9d, 0x33, 0x71, 0x5c, 0x0a, 0xaa,
	0x27, 0xa1, 0x3b, 0xe4, 0x27, 0xeb, 0xf4, 0xb7, 0xfa, 0x43, 0xc5, 0x59, 0x82, 0xb0, 0x8a, 0xc7,
	0xda, 0xcc, 0xc7, 0x61, 0xd7, 0xb1, 0x3d, 0x9a, 0x1c, 0xaa, 0x42, 0xe8, 0xcf, 0x4a, 0x59, 0xe8,
	0x5f, 0xa5, 0x50, 0x16, 0xfa, 0x5f, 0x42, 0xe7, 0x68, 0xd8, 0xf8, 0x3a, 0x0f, 0xa4, 0x78, 0x29,
	0x83, 0xdf, 0x13, 0xf7, 0xd0, 0x59, 0x09, 0x84, 0x2a, 0xf5, 0xc3, 0xd4, 0x49, 0xfa, 0x31, 0x21,
	0x21, 0x57, 0x7f, 0x08, 0x40, 0x16, 0x85, 0x28, 0xaf, 0xa3, 0x67, 0xe9, 0x75, 0xab, 0x30, 0x72,
	0xa2, 0xf4, 0x88, 0xc4, 0xdc, 0x97, 0x4e, 0xb8, 0x74, 0x2a, 0x80, 0xec, 0x44, 0x5d, 0x40, 0x31,
	0xa7, 0x3a, 0x51, 0xbf, 0xb4, 0x18, 0x4e, 0xef, 0x46, 0x29, 0xf3, 0xfa, 0xa6, 0x24, 0x0d, 0xce,
	0xb8, 0x7e, 0x0b, 0x3e, 0x62, 0xff, 0x28, 0xf2, 0xfb, 0x24, 0x77, 0xdd, 0x71, 0xc6, 0x9c, 0x67,
	0x30, 0x76, 0xdf, 0x71, 0x05, 0xcd, 0xb2, 0x22, 0x3b, 0x21, 0x9c, 0x33, 0x45, 0x51, 0xfd, 0x8c,
	0x42, 0xc4, 0x0a, 0x8c, 0xb0, 0xe0, 0x0d, 0x1c, 0xbc, 0x7c, 0xbb, 0xec, 0xd4, 0x6a, 0xc6, 0x5c,
	0xc8, 0x35, 0x9c, 0xa8, 0x1f, 0x2f, 0xdc, 0x21, 0x82, 0xfa, 0xb0, 0xbe, 0xf4, 0x00, 0x3e, 0x20,
	0xfd, 0x94, 0x78, 0x0e, 0xab, 0xc0, 0x17, 0x7a, 0x49, 0x80, 0x9b, 0x14, 0xaa, 0xfe, 0x60, 0x51,
	0x67, 0xae, 0x47, 0x11, 0xec, 0x0e, 0x1a, 0xf6, 0xb0, 0x54, 0xd3, 0xd9, 0x4a, 0xeb, 0x22, 0x9a,
	0xd9, 0x8f, 0xc2, 0x51, 0x22, 0x14, 0x27, 0x2d, 0xc0, 0xaa, 0xb1, 0x9b, 0x58, 0x0c, 0xc7, 0x8f,
	0xae, 0x28, 0x68, 0x9d, 0x12, 0xa8, 0x68, 0x91, 0xa2, 0xd8, 0xa9, 0xe0, 0x38, 0xa5, 0x40, 0x81,
	0x46, 0x4a, 0x06, 0x86, 0xa7, 0x7c, 0x08, 0x5d, 0xc8, 0x35, 0x92, 0x51, 0x32, 0x6d, 0x84, 0xc7,
	0x8d, 0x31, 0x72, 0xf5, 0xb8, 0xe0, 0x5c, 0xe6, 0x47, 0xa2, 0x74, 0xd0, 0xf2, 0x3e, 0x2d, 0x7b,
	0x3c, 0xbb, 0x26, 0x4e, 0x01, 0x5f, 0x9c, 0x70, 0x4c, 0x50, 0x9e, 0x03, 0x73, 0x89, 0xd7, 0x66,
	0xc5, 0x44, 0x5d, 0x2b, 0x48, 0x10, 0x83, 0x6f, 0x6f, 0x9b, 0xca, 0x45, 0x54, 0x1b, 0x0c, 0x62,
	0xda, 0xfa, 0xf9, 0xf5, 0x2a, 0xae, 0x98, 0x50, 0x54, 0xff, 0x70, 0x81, 0x39, 0x6e, 0x14, 0xac,
	0x94, 0xb8, 0xc1, 0x1f, 0xc8, 0x2a, 0xdc, 0x42, 0x8b, 0x02, 0xcd, 0x94, 0x35, 0xcb, 0xde, 0x2c,
	0x70, 0x20, 0xbd, 0x4a, 0xac, 0x7e, 0x79, 0xa5, 0x18, 0xa5, 0xa4, 0x6e, 0x9a, 0x6c, 0x91, 0x38,
	0x6a, 0x47, 0xd1, 0xf1, 0x93, 0x22, 0xc9, 0xcb, 0x68, 0x56, 0xe4, 0x34, 0xaa, 0xe2, 0xb9, 0x05,
	0xcd, 0x65, 0x5c, 0x45, 0x73, 0x14, 0x41, 0x03, 0x5b, 0xb6, 0x9d, 0x1b, 0x00, 0xa0, 0x91, 0x2d,
	0xd8, 0x09, 0x12, 0x27, 0x51, 0xe8, 0xf2, 0x1d, 0x2d, 0x8a, 0xea, 0x0f, 0x56, 0x0b, 0xc1, 0x76,
	0xc6, 0x8d, 0x48, 0xef, 0xd1, 0xcc, 0xe5, 0xcb, 0x08, 0xbb, 0x27, 0x24, 0x76, 0x0f, 0x89, 0x93,
	0x5d, 0x48, 0xa1, 0x07, 0x12, 0xe6, 0x32, 0x87, 0x0b, 0x72, 0xe5, 0x73, 0x11, 0x16, 0x24, 0x8e,
	0x47, 0x52, 0x7a, 0xe0, 0x5d, 0xa5, 0xcb, 0xfb, 0xd6, 0x84, 0xe5, 0x9d, 0xd8, 0xdd, 0x9a, 0x28,
	0xf4, 0x5c, 0x3f, 0x36, 0x97, 0x45, 0x73, 0x2d, 0xd6, 0xda, 0xea, 0x57, 0x55, 0xd0, 0x42, 0x9e,
	0x42, 0xf9, 0x1c, 0x74, 0x3e, 0xeb, 0xb2, 0xef, 0xa6, 0xe4, 0x30, 0x8a, 0x4f, 0x79, 0x50, 0x9a,
	0x37, 0xcd, 0xbd, 0xae, 0x65, 0xd8, 0x46, 0xb7, 0xe3, 0x34, 0x35, 0x5b, 0xdf, 0xec, 0x9a, 0x7b,
	0xf7, 0x15, 0x19, 0xde, 0xe9, 0x76, 0x74, 0x33, 0xe3, 0xbe, 0xc9, 0x5b, 0xa2, 0x57, 0xcd, 0xb2,
	0xe6, 0xa9, 0x5e, 0x61, 0x2b, 0xbf, 0x98, 0x51, 0x02, 0x50, 0xfd, 0x91, 0x7a, 0xe1, 0xbe, 0x5c,
	0x36, 0xb6, 0x6d, 0x3f, 0x1c, 0xa5, 0x84, 0xb3, 0x0f, 0x2b, 0x15, 0xb8, 0x49, 0xea, 0x1c, 0xf9,
	0x54, 0x91, 0x50, 0x09, 0x03, 0xc0, 0x96, 0x9f, 0xd2, 0x9b, 0x15, 0x74, 0x19, 0x8f, 0xfd, 0x20,
	0x48, 0x84, 0x84, 0x01, 0xe4, 0x01, 0x00, 0x60, 0x2f, 0x53, 0x34, 0x7f, 0x40, 0xc1, 0xaf, 0x73,
	0x03, 0x88, 0x3f, 0xff, 0xa0, 0x2f, 0x44, 0x1e, 0x81, 0xe6, 0x65, 0x14, 0x7c, 0x2b, 0x53, 0x18,
	0x27, 0xd9, 0x46, 0x19, 0xe3, 0x8e, 0x1f, 0x1e, 0x44, 0xfc, 0x38, 0xf2, 0xce, 0xd3, 0xae, 0x8e,
	0xb9, 0x30, 0xcc, 0x8b, 0xc6, 0x15, 0xd4, 0x60, 0x6f, 0x52, 0x1e, 0x0f, 0x79, 0x52, 0x6c, 0x96,
	0x96, 0xdf, 0xa5, 0x92, 0x1c, 0x92, 0xd4, 0x79, 0x14, 0xc5, 0xe9, 0x11, 0x77, 0x41, 0x1a, 0x21,
	0x49, 0x1f, 0x42, 0x59, 0x79, 0x0d, 0x5d, 0x3c, 0x72, 0xe3, 0x13, 0x42, 0xf5, 0x00, 0x98, 0x8f,
	0x21, 0x0b, 0x8a, 0x99, 0x2f, 0xa2, 0x64, 0xb8, 0x26, 0xa0, 0x68, 0x04, 0x0d, 0xda, 0x9d, 0xc5,
	0xea, 0xce, 0x81, 0x1b, 0x0f, 0xf8, 0x23, 0xad, 0x79, 0x0e, 0xdb, 0x70, 0xe3, 0x01, 0x90, 0x3c,
	0x72, 0x63, 0x2f, 0x01, 0xc5, 0xd2, 0x27, 0x1e, 0x7f, 0xaf, 0x35, 0x4f, 0x61, 0x3d, 0x0a, 0x02,
	0x75, 0x1c, 0x8f, 0x42, 0x92, 0x38, 0xfd, 0x28, 0x60, 0xea, 0x97, 0xfb, 0x22, 0x4b, 0x14, 0xdc,
	0x14, 0x50, 0x3a, 0xb0, 0x61, 0xe2, 0x8c, 0x12, 0xe2, 0x51, 0xaf, 0x19, 0x06, 0x36, 0x4c, 0x76,
	0x12, 0x76, 0xd1, 0x8f, 0x7a, 0x57, 0xc9, 0x10, 0x02, 0xc6, 0x45, 0x76, 0x3d, 0x06, 0x20, 0x16,
	0x00, 0xa0, 0x0b, 0x36, 0xfd, 0x8e, 0xbb, 0x9f, 0x44, 0xf1, 0x3e, 0xf1, 0x56, 0x96, 0x58, 0xa8,
	0xcf, 0xc0, 0x1a, 0x87, 0xc2, 0x72, 0x72, 0x42, 0x2f, 0x0a, 0xc9, 0xca, 0x32, 0x25, 0x42, 0x0c,
	0xd4, 0x8a, 0x42, 0xa2, 0xfe, 0xd3, 0x99, 0x49, 0x32, 0x65, 0x13, 0x77, 0x20, 0xcb, 0x54, 0x9b,
	0x79, 0x36, 0x24, 0x76, 0x12, 0x20, 0xe0, 0xfa, 0xf4, 0xe5, 0xb3, 0x96, 0x54, 0x6a, 0xc0, 0x9c,
	0x67, 0xd5, 0x29, 0x96, 0xda, 0x79, 0x2a, 0x44, 0x79, 0x29, 0x44, 0x14, 0xc4, 0xc4, 0xf0, 0x16,
	0x5a, 0xdc, 0x77, 0xe3, 0xd8, 0xed, 0x1f, 0x73, 0x12, 0xae, 0xe8, 0x38, 0x90, 0x11, 0x7d, 0x3a,
	0xba, 0xe2, 0x9e, 0xb8, 0x7e, 0x40, 0xf3, 0x1d, 0x81, 0x1b, 0x92, 0xfc, 0x2a, 0x33, 0xb9, 0xbc,
	0x94, 0x11, 0xb4, 0xdd, 0x90, 0x8c, 0x57, 0xfa, 0x55, 0xa4, 0xec, 0xbb, 0x81, 0x1b, 0xf6, 0x09,
	0x6d, 0x9f, 0xdf, 0xb1, 0xe6, 0xc6, 0x86, 0x63, 0xa0, 0x13, 0x76, 0xd5, 0x7a, 0x0d, 0x5d, 0x10,
	0xd4, 0x8c, 0x6d, 0x46, 0xce, 0x33, 0xb4, 0x1c, 0x65, 0x03, 0x66, 0x57, 0x9c, 0x1d, 0x09, 0x7a,
	0xce, 0x70, 0xc2, 0xab, 0x30, 0x19, 0xbd, 0xc8, 0xb1, 0xeb, 0x1c, 0xc9, 0x6a, 0xe5, 0x78, 0xca,
	0xdd, 0xfb, 0x6e, 0x48, 0x3c, 0x6d, 0x66, 0xd7, 0xbf, 0xef, 0x20, 0x01, 0x73, 0x1e, 0x0f, 0x39,
	0x2d, 0x93, 0xd7, 0x25, 0x0e, 0x7f, 0x77, 0xc8, 0x28, 0x8f, 0x10, 0xa6, 0x93, 0x33, 0x24, 0xf1,
	0x01, 0x44, 0x2d, 0x61, 0x1f, 0x62, 0x79, 0x58, 0xbe, 0x8f, 0x4d, 0x5b, 0xbe, 0xd2, 0xfa, 0xaf,
	0x65, 0xcf, 0x82, 0xc6, 0x8d, 0x98, 0xcb, 0xd0, 0x6c, 0x0e, 0xb0, 0x3a, 0x42, 0x17, 0x26, 0xd0,
	0x81, 0x0f, 0x9f, 0xbd, 0x3c, 0x92, 0xb4, 0xe7, 0xa2, 0x89, 0x05, 0x22, 0xd3, 0x85, 0x57, 0x59,
	0x26, 0x73, 0x7c, 0xcb, 0x64, 0xd1, 0x6c, 0x00, 0x40, 0x3e, 0xaa, 0xab, 0xe5, 0xde, 0x89, 0xaa,
	0xbf, 0x57, 0xba, 0x06, 0x0a, 0x63, 0x60, 0x46, 0x1a, 0x16, 0x91, 0xa6, 0xc6, 0xcf, 0xb6, 0x7a,
	0xaf, 0x22, 0x85, 0xca, 0x01, 0x7d, 0xbf, 0x0b, 0x33, 0xd5, 0x27, 0x5c, 0x0b, 0x57, 0x4d, 0x7c,
	0x2c, 0xda, 0xe8, 0x31, 0xb8, 0x72, 0x23, 0xdb, 0x0c, 0x41, 0xd4, 0x77, 0x1e, 0x0b, 0x8f, 0x87,
	0xc1, 0xda, 0x51, 0xff, 0xdd, 0x02, 0xc5, 0x29, 0xf7, 0xf3, 0xc7, 0x14, 0x7b, 0xa0, 0xf3, 0xd9,
	0x3b, 0xc6, 0xac, 0xb7, 0x19, 0x96, 0x5f, 0x61, 0x50, 0xd1, 0xd5, 0x4d, 0xb4, 0x40, 0x15, 0x81,
	0x20, 0x62, 0x4f, 0x5e, 0x68, 0xe8, 0xc5, 0x49, 0xd4, 0xaf, 0xac, 0x16, 0x5d, 0x76, 0x18, 0x3e,
	0x0c, 0x3c, 0x67, 0x10, 0x4e, 0xfc, 0x7e, 0xea, 0x0f, 0x72, 0x2e, 0x07, 0x03, 0x18, 0x9e, 0xb2,
	0x85, 0xe6, 0xc7, 0x43, 0x17, 0x96, 0xf4, 0xf6, 0x34, 0xc9, 0x28, 0xcc, 0xaa, 0x89, 0xb2, 0xc9,
	0x49, 0x94, 0x17, 0x10, 0x57, 0x3f, 0x4e, 0xca, 0xec, 0x8b, 0xd8, 0xb5, 0x0c, 0x6a, 0x53, 0x13,
	0x03, 0x96, 0x9e, 0x1c, 0x1c, 0x40, 0x74, 0x7f, 0x42, 0x9c, 0xdc, 0xc3, 0xce, 0x45, 0x73, 0x39,
	0x83, 0x6f, 0x51, 0x30, 0x68, 0x41, 0x8f, 0xb8, 0xe9, 0x11, 0xcb, 0xda, 0xb2, 0xf9, 0x99, 0xa3,
	0x10, 0x9a, 0xd0, 0xb8, 0x8a, 0xe6, 0xa0, 0x17, 0xb6, 0xa2, 0x6c, 0x33, 0x36, 0x18, 0xc0, 0xf0,
	0xd4, 0xdf, 0x98, 0x2d, 0x24, 0x03, 0x29, 0xfb, 0xf4, 0xa6, 0x86, 0x98, 0x96, 0x26, 0xb7, 0x75,
	0x01, 0x75, 0x8b, 0xb8, 0x4a, 0x53, 0xcf, 0x52, 0x69, 0xcc, 0x81, 0x62, 0xf6, 0x90, 0x3b, 0x53,
	0x1d, 0xb4, 0x18, 0xbb, 0x1e, 0x44, 0x7f, 0x5c, 0x33, 0x56, 0xcf, 0xd6, 0x8c, 0xa5, 0xad, 0x65,
	0x2e, 0xf0, 0xfa, 0x4c, 0x35, 0x6e, 0x21, 0xe4, 0xf9, 0x31, 0xe1, 0x8d, 0xd5, 0x3e, 0x68, 0x63,
	0xf4, 0x19, 0xa1, 0x68, 0x29, 0xe3, 0x8c, 0xe9, 0x50, 0x76, 0x61, 0xf1, 0xd6, 0xb4, 0xc6, 0x72,
	0x12, 0x93, 0xf1, 0xc4, 0x14, 0xed, 0x3a, 0xe7, 0x89, 0x35, 0x33, 0xf3, 0xf4, 0xcd, 0x50, 0x6e,
	0x58, 0x1b, 0x47, 0x68, 0xf1, 0xc0, 0x3f, 0x3c, 0x4a, 0x33, 0x97, 0xed, 0x1c, 0x6d, 0xa6, 0x39,
	0xad, 0x99, 0xfc, 0x4a, 0x4d, 0x40, 0x6f, 0xd0, 0x27, 0x96, 0x82, 0xdb, 0x83, 0x5c, 0x69, 0xf5,
	0xeb, 0x2a, 0x93, 0x3c, 0x4e, 0x5a, 0x01, 0xe6, 0x4b, 0xac, 0x3e, 0xc4, 0xea, 0x34, 0x01, 0xe7,
	0x0f, 0x5d, 0x11, 0x71, 0x2d, 0x9a, 0x12, 0x8c, 0xbe, 0x24, 0x05, 0x71, 0x13, 0x37, 0x54, 0x79,
	0x29, 0x7b, 0x9a, 0xe3, 0x91, 0x20, 0x75, 0xc5, 0x11, 0x2a, 0x40, 0x5a, 0x00, 0xa0, 0x57, 0x48,
	0x86, 0x1c, 0xc9, 0x44, 0x7b, 0xf6, 0xf1, 0x90, 0xa2, 0x56, 0xff, 0x45, 0x75, 0x92, 0x58, 0xe6,
	0x47, 0x03, 0x8d, 0xe7, 0xce, 0x2a, 0x98, 0x13, 0x3c, 0x97, 0x64, 0xc7, 0x14, 0x57, 0x50, 0x83,
	0x84, 0xde, 0xf8, 0x20, 0xa3, 0x6a, 0xce, 0x92, 0xd0, 0xa3, 0xa8, 0xcf, 0x47, 0xcf, 0x8a, 0x15,
	0x97, 0xe7, 0x9a, 0xdd, 0x4d, 0xdb, 0xfc, 0x83, 0xcc, 0x75, 0x6e, 0xea, 0xcc, 0x0b, 0xbc, 0x17,
	0x89, 0xed, 0x11, 0x52, 0xa8, 0x90, 0xc8, 0x3d, 0xd7, 0x3f, 0xb5, 0x3d, 0x63, 0xe8, 0x22, 0xdf,
	0xad, 0xba, 0x51, 0x88, 0xcd, 0xb6, 0xfd, 0xd0, 0xb7, 0xdd, 0x11, 0x7d, 0xe8, 0xa2, 0xa4, 0xf0,
	0xc3, 0x0f, 0x0f, 0x9d, 0x62, 0xc4, 0x85, 0x05, 0x26, 0x7b, 0xbc, 0xf6, 0xff, 0x15, 0x62, 0x36,
	0x76, 0x43, 0x6a, 0x7d, 0xb4, 0xbf, 0x1f, 0xd0, 0x64, 0x97, 0xc7, 0x32, 0x93, 0x8e, 0x1b, 0x04,
	0xfc, 0x64, 0x07, 0x71, 0x90, 0x16, 0xd0, 0x98, 0xeb, 0xc6, 0x84, 0x33, 0x95, 0x2d, 0x9a, 0x1a,
	0xd9, 0x9e, 0x74, 0x86, 0x32, 0xe1, 0x65, 0xe0, 0xd4, 0xac, 0xc3, 0xf4, 0x07, 0xfd, 0x99, 0x41,
	0xac, 0xe7, 0x4f, 0x5e, 0xbe, 0xbe, 0x82, 0x2e, 0x34, 0xb7, 0x93, 0x43, 0x50, 0x59, 0x59, 0xec,
	0xe9, 0xa6, 0xca, 0x46, 0xde, 0xb6, 0xb2, 0xf0, 0xe5, 0x02, 0xbf, 0x18, 0x09, 0xa4, 0x16, 0x37,
	0xb3, 0xf7, 0x2f, 0x1e, 0x3b, 0x12, 0xc0, 0xe9, 0x44, 0x21, 0xc9, 0x99, 0xe1, 0xab, 0x68, 0xce,
	0x0f, 0x53, 0x27, 0x7f, 0x6b, 0xa6, 0xe1, 0x87, 0x29, 0x73, 0x37, 0x9e, 0x47, 0xf3, 0x07, 0x41,
	0xe4, 0x0a, 0x34, 0xb7, 0x8d, 0x14, 0x44, 0x09, 0xd4, 0x2f, 0x81, 0xf8, 0x74, 0x3b, 0x39, 0x64,
	0xaf, 0xee, 0xb5, 0xd0, 0x0d, 0x4e, 0xdf, 0x27, 0xfc, 0xb5, 0x04, 0x65, 0xf3, 0x09, 0x77, 0xb7,
	0x37, 0x91, 0x42, 0xd5, 0xb6, 0x88, 0x84, 0xf3, 0x6a, 0xf7, 0xca, 0x38, 0x9f, 0x5d, 0x18, 0xbc,
	0x89, 0x8f, 0x64, 0x40, 0xa2, 0x7e, 0x3e, 0xba, 0x5c, 0xe6, 0x83, 0xe9, 0xce, 0xfc, 0x25, 0x81,
	0x8a, 0x7c, 0x49, 0x40, 0x2f, 0x78, 0xc2, 0x55, 0xc9, 0x6c, 0x9c, 0x31, 0x2e, 0xc9, 0x05, 0x56,
	0x4f, 0x0a, 0x72, 0xbb, 0x4e, 0xdc, 0x84, 0x7d, 0xdb, 0x61, 0xd2, 0x5b, 0xc0, 0x4b, 0xe8, 0x1c,
	0x75, 0xa7, 0xc4, 0x55, 0x16, 0x5e, 0xfa, 0xe0, 0x9f, 0x7a, 0x50, 0xbf, 0xa8, 0x52, 0xb8, 0x74,
	0xc3, 0x25, 0x75, 0xe4, 0xe9, 0x01, 0x19, 0x90, 0x30, 0xe5, 0xaf, 0xb0, 0xe8, 0xfb, 0x3a, 0x0e,
	0xe1, 0x93, 0x30, 0x67, 0xce, 0x71, 0x08, 0xcb, 0xe0, 0x06, 0xee, 0x69, 0x34, 0x02, 0x55, 0x13,
	0x90, 0xdc, 0x4d, 0x8e, 0x25, 0x06, 0xde, 0xe0, 0x50, 0x18, 0x8e, 0xe7, 0x72, 0x2d, 0xb9, 0x60,
	0xd2, 0xdf, 0xea, 0x27, 0x9f, 0xc8, 0x04, 0x7d, 0xa0, 0x7c, 0xfa, 0x24, 0x26, 0x5e, 0x44, 0x4b,
	0x03, 0x4a, 0xe8, 0x9c, 0xf8, 0x89, 0xbf, 0x1f, 0x88, 0x47, 0xb5, 0x8b, 0x0c, 0xba, 0xcb, 0x80,
	0x13, 0x59, 0xd8, 0x28, 0x1c, 0x42, 0x97, 0x38, 0xe0, 0x47, 0x11, 0x4f, 0x60, 0x41, 0x7d, 0x58,
	0x30, 0x36, 0xcd, 0x68, 0x30, 0x24, 0xa1, 0xe7, 0x8f, 0x06, 0x1f, 0x24, 0xab, 0xc6, 0xb2, 0x39,
	0xd5, 0x5c, 0xea, 0x5d, 0x7d, 0x54, 0xc8, 0xe2, 0x14, 0x1a, 0x56, 0x1e, 0x22, 0xa5, 0x9f, 0x81,
	0x0a, 0x79, 0xae, 0x3b, 0x13, 0x1f, 0x71, 0x4e, 0x60, 0xcc, 0x3c, 0x3f, 0x6e, 0x43, 0x64, 0xbb,
	0xfe, 0x59, 0xd1, 0x44, 0x89, 0xd3, 0x98, 0x28, 0x7c, 0xca, 0x0f, 0x30, 0xdc, 0x41, 0x98, 0xe7,
	0xe1, 0xe9, 0xac, 0x65, 0xef, 0xa8, 0x67, 0xcc, 0x25, 0x06, 0xd7, 0x43, 0xfe, 0x3c, 0xe9, 0x79,
	0x34, 0xcf, 0x29, 0xa9, 0xc8, 0xb3, 0x74, 0x2a, 0x62, 0x20, 0xd0, 0xfb, 0x94, 0xe0, 0xc8, 0x0d,
	0x43, 0x12, 0x38, 0x24, 0xf4, 0xf8, 0xbd, 0x2c, 0xc4, 0x41, 0x7a, 0xe8, 0xe5, 0xde, 0xfd, 0xcc,
	0x3c, 0xe1, 0xdd, 0xcf, 0x5d, 0x74, 0x3e, 0xa5, 0x11, 0x25, 0xef, 0x91, 0xbe, 0x2a, 0x63, 0x79,
	0xe3, 0x65, 0x8a, 0x68, 0x52, 0x78, 0x37, 0x0c, 0x4e, 0x25, 0x23, 0x3b, 0x2b, 0x1b, 0xd9, 0x3b,
	0x08, 0x73, 0x67, 0x7a, 0x3c, 0x38, 0xfe, 0xde, 0x89, 0xc1, 0xc5, 0xe0, 0xd4, 0x51, 0x61, 0x05,
	0xc7, 0xf3, 0x28, 0x3e, 0x9c, 0xd3, 0x60, 0x29, 0x4f, 0x3e, 0x87, 0x4b, 0xe2, 0x7d, 0xa7, 0x5e,
	0xa0, 0xbc, 0xbf, 0x44, 0x7a, 0xba, 0xb3, 0xe1, 0xc7, 0x49, 0x4a, 0x8f, 0xb7, 0xcc, 0x59, 0x5a,
	0xcf, 0xf0, 0x32, 0x5d, 0x51, 0x1d, 0xeb, 0x0a, 0xf5, 0xb3, 0x0b, 0x69, 0xe2, 0x77, 0x7b, 0x9f,
	0xca, 0x97, 0xef, 0xea, 0xc4, 0xdb, 0x47, 0xf4, 0x0a, 0x4c, 0x4f, 0x5c, 0x2b, 0xfc, 0xb2, 0x6a,
	0xe1, 0x54, 0x8c, 0xa2, 0x41, 0xec, 0x46, 0x49, 0x91, 0x8d, 0xaa, 0xc4, 0xc6, 0x15, 0xd4, 0xa0,
	0x77, 0x90, 0xc6, 0xd9, 0xcf, 0x59, 0x5a, 0x36, 0x58, 0x72, 0xe6, 0xc8, 0x0d, 0x02, 0x12, 0xb2,
	0x8b, 0x6f, 0x35, 0x9e, 0x9c, 0x11, 0x30, 0x66, 0x43, 0xb3, 0xab, 0x8e, 0xe2, 0x73, 0x2b, 0xbc,
	0x0c, 0x33, 0x75, 0x18, 0xb9, 0xe2, 0x78, 0x8b, 0xfe, 0xe6, 0xef, 0xd9, 0xe2, 0x53, 0x1e, 0x3c,
	0xb0, 0x82, 0x72, 0x0b, 0x2d, 0x1e, 0xb8, 0x7e, 0xe0, 0x64, 0x77, 0x35, 0x98, 0x00, 0x2c, 0x00,
	0x70, 0x93, 0xc3, 0x26, 0xdd, 0xb2, 0x65, 0x91, 0x7a, 0xe1, 0x96, 0xed, 0x41, 0x31, 0x17, 0xcb,
	0x9e, 0xcd, 0xd3, 0x94, 0x97, 0xdf, 0x3f, 0x3e, 0x7b, 0x36, 0x0a, 0xb9, 0xd8, 0xc5, 0x2c, 0x17,
	0x8b, 0x51, 0x6d, 0xdf, 0x0d, 0xf9, 0xfb, 0x24, 0xf8, 0x59, 0xbe, 0x99, 0x32, 0xee, 0xc7, 0x8c,
	0x02, 0x72, 0x76, 0x3f, 0x22, 0xb5, 0x1b, 0x47, 0x41, 0x76, 0x1f, 0xef, 0x88, 0xd7, 0x54, 0x7f,
	0xb3, 0x78, 0x68, 0x00, 0xfe, 0x7c, 0xdf, 0x1d, 0xb0, 0x64, 0x9f, 0xed, 0x1e, 0x93, 0xf0, 0xec,
	0xd6, 0x6f, 0xa2, 0x05, 0x11, 0x16, 0x02, 0x31, 0x1f, 0x0a, 0xcf, 0x4b, 0x65, 0xf5, 0xe9, 0x6c,
	0x66, 0x47, 0x9e, 0xfc, 0xa9, 0x18, 0xf5, 0x36, 0x26, 0x4c, 0x75, 0x7d, 0xc2, 0x54, 0xcb, 0x09,
	0xea, 0x99, 0x42, 0x82, 0x7a, 0xcc, 0x04, 0x3b, 0xc9, 0x3e, 0x47, 0xf1, 0x9c, 0x09, 0xfa, 0xf5,
	0x17, 0xf5, 0x9d, 0xa2, 0x67, 0x4e, 0x0f, 0x4f, 0x7a, 0x24, 0x74, 0x83, 0xf4, 0x94, 0x66, 0x8d,
	0xce, 0x1c, 0xa6, 0x82, 0xea, 0xf4, 0xab, 0x02, 0x30, 0xbc, 0xf3, 0x26, 0xfd, 0xad, 0x7e, 0x5b,
	0xf1, 0x8d, 0x9f, 0x19, 0x05, 0x41, 0xcb, 0xef, 0xf3, 0x17, 0x4d, 0x67, 0x6f, 0x49, 0x26, 0xf0,
	0x54, 0xf5, 0xe5, 0x92, 0x21, 0x42, 0x1d, 0xd2, 0xa9, 0xb9, 0x82, 0x1a, 0x71, 0x14, 0x04, 0xce,
	0x80, 0x5f, 0xb1, 0x5f, 0x34, 0x67, 0xa1, 0xbc, 0xed, 0x87, 0x63, 0x94, 0xfb, 0x58, 0xc4, 0x20,
	0x14, 0xe5, 0xd2, 0x27, 0xcb, 0xfc, 0x35, 0x18, 0xdb, 0x0c, 0xbc, 0xa4, 0x8e, 0x0a, 0xcc, 0x6e,
	0x04, 0xfe, 0xb0, 0x19, 0xf9, 0xe1, 0xa7, 0x88, 0xd9, 0x71, 0xb7, 0x4c, 0x6e, 0x45, 0xb7, 0x1b,
	0xe8, 0xf6, 0xb8, 0x5b, 0x7e, 0xb1, 0x95, 0x5f, 0x45, 0xa4, 0x97, 0xda, 0xb3, 0x0f, 0x4d, 0x24,
	0x67, 0x7f, 0xa2, 0x8c, 0xe4, 0x33, 0x99, 0xbc, 0x1d, 0xb0, 0x21, 0x4d, 0x77, 0x98, 0xba, 0x7e,
	0x28, 0xae, 0xf5, 0x4d, 0x72, 0xaf, 0xee, 0xa2, 0xf3, 0x7d, 0x46, 0x55, 0xfa, 0x5a, 0xcc, 0x32,
	0x47, 0x64, 0x81, 0x42, 0x58, 0xbc, 0x64, 0x24, 0x6e, 0xe7, 0x36, 0x73, 0xaf, 0x2d, 0x4b, 0x17,
	0x74, 0xe7, 0x06, 0xd9, 0xe5, 0xdc, 0x0f, 0x81, 0xe1, 0xe6, 0x87, 0xf2, 0xe3, 0x6f, 0x70, 0x30,
	0x9f, 0xff, 0xbc, 0xc0, 0x8c, 0x3f, 0x66, 0xf2, 0x95, 0xc5, 0x27, 0xfd, 0x74, 0x4f, 0x93, 0xc0,
	0xef, 0x0b, 0x7d, 0x0b, 0x3b, 0x84, 0xed, 0x5f, 0x80, 0x8e, 0xbd, 0xfb, 0x45, 0x73, 0xf1, 0x48,
	0xd0, 0xda, 0xd3, 0x3f, 0xb3, 0xb6, 0x82, 0x66, 0x49, 0xee, 0x13, 0x12, 0x8b, 0xa6, 0x28, 0x52,
	0x2b, 0x28, 0x0c, 0x14, 0x97, 0x21, 0x6e, 0x78, 0xd4, 0xc7, 0xf9, 0x45, 0x1b, 0x1f, 0x71, 0xb5,
	0x62, 0xf7, 0x20, 0xe5, 0x8b, 0x27, 0x9c, 0x85, 0x33, 0xe5, 0xe6, 0x35, 0x74, 0x31, 0x66, 0xe4,
	0xc4, 0x73, 0x4a, 0x47, 0x5f, 0x4a, 0x86, 0x1b, 0x6b, 0xd4, 0x1f, 0x28, 0x7e, 0x15, 0x82, 0x29,
	0x22, 0x93, 0x0c, 0xa3, 0x27, 0x19, 0xb9, 0x17, 0x10, 0xb7, 0x66, 0x8e, 0xac, 0x56, 0xf9, 0x2b,
	0x6a, 0x7e, 0x69, 0xf7, 0x05, 0xb4, 0xc4, 0xaf, 0xe6, 0x0b, 0x2a, 0x9e, 0xc6, 0x62, 0xd0, 0xf1,
	0xd5, 0x5e, 0x91, 0x82, 0x1f, 0xd0, 0x23, 0x1b, 0x16, 0x81, 0x71, 0x2d, 0xa3, 0x51, 0x98, 0x72,
	0x0d, 0xcd, 0xed, 0xc7, 0x91, 0xeb, 0x81, 0xc7, 0x21, 0x2e, 0xf3, 0x64, 0x00, 0xf5, 0x2b, 0x8a,
	0x23, 0xb1, 0xdc, 0x60, 0x94, 0xb9, 0x8c, 0x77, 0xc4, 0xcd, 0x31, 0xa7, 0x98, 0xb6, 0x5c, 0xca,
	0xbf, 0x0d, 0x38, 0xe3, 0x53, 0x47, 0x33, 0xa5, 0x4f, 0x1d, 0x5d, 0x47, 0x28, 0xf5, 0x87, 0x82,
	0x63, 0x9e, 0xb7, 0x48, 0xfd, 0x21, 0x63, 0xf7, 0xee, 0xb7, 0xac, 0xa2, 0xf3, 0xf4, 0x89, 0x5c,
	0x6e, 0x0b, 0x25, 0xca, 0xf3, 0x68, 0x95, 0x3d, 0x91, 0xdb, 0x76, 0x34, 0xcf, 0xdb, 0x09, 0xfd,
	0xd4, 0x8e, 0x98, 0x6e, 0xf4, 0xa3, 0x10, 0xff, 0x70, 0x4d, 0x59, 0x41, 0x17, 0x32, 0x82, 0xf1,
	0x17, 0x0c, 0xf1, 0x8f, 0xd4, 0x94, 0x4b, 0xe8, 0xbc, 0xc0, 0x64, 0xdf, 0x0b, 0xc4, 0x3f, 0x5a,
	0x53, 0x6e, 0xa0, 0xab, 0x19, 0xbc, 0xfc, 0x31, 0x39, 0xfc, 0x63, 0x35, 0x65, 0x15, 0x3d, 0x2b,
	0x53, 0xb4, 0xa3, 0xc3, 0x96, 0x9b, 0xba, 0xf8, 0xc7, 0x6b, 0xca, 0x73, 0xe8, 0x4a, 0x09, 0x27,
	0x3e, 0xf9, 0x86, 0x7f, 0xb2, 0xa6, 0xdc, 0x42, 0xcf, 0x65, 0xf8, 0x89, 0x5f, 0x94, 0xc0, 0x3f,
	0x55, 0x53, 0x5e, 0x40, 0xcf, 0x0b, 0xa2, 0x29, 0x9f, 0x37, 0xc0, 0x3f, 0x5d, 0x53, 0x5e, 0x44,
	0x37, 0x32, 0xaa, 0x29, 0x1f, 0x31, 0xc0, 0x3f, 0x53, 0x53, 0xae, 0xa3, 0x15, 0x41, 0x56, 0xfc,
	0xa8, 0x18, 0xfe, 0xd9, 0x9a, 0x72, 0x13, 0x5d, 0x9b, 0x80, 0xce, 0x3e, 0x10, 0x86, 0x7f, 0xae,
	0xa6, 0x5c, 0x45, 0x97, 0x04, 0x89, 0xfc, 0xea, 0x1c, 0xff, 0x7c, 0x4d, 0xb9, 0x82, 0x2e, 0x0a,
	0x64, 0xfe, 0xf3, 0x5c, 0xf8, 0x17, 0x6a, 0xca, 0x45, 0xb4, 0x2c, 0x50, 0xfc, 0x63, 0x20, 0xf8,
	0x17, 0x6b, 0xca, 0x35, 0x74, 0x39, 0x83, 0xca, 0xdf, 0x61, 0xc3, 0xbf, 0x24, 0xcd, 0x5f, 0xe9,
	0xf3, 0x20, 0xf8, 0x97, 0xa5, 0xee, 0xf2, 0x5f, 0x5c, 0xc1, 0xbf, 0x22, 0x0d, 0xb4, 0xf8, 0x78,
	0x1f, 0xff, 0xaa, 0xb4, 0x6a, 0xd2, 0xb3, 0x1d, 0xfc, 0x6b, 0xb5, 0xbc, 0x18, 0x95, 0xdf, 0x97,
	0xe3, 0x5f, 0x97, 0xa6, 0x40, 0x7e, 0x0a, 0x8f, 0x7f, 0x43, 0x9a, 0xc2, 0x49, 0x1f, 0x79, 0xc0,
	0xbf, 0x29, 0x0d, 0xba, 0xf0, 0x2e, 0x06, 0xff, 0x4b, 0x49, 0x14, 0xb3, 0x87, 0x81, 0xf8, 0x5f,
	0x49, 0xb5, 0x7a, 0xfc, 0x3e, 0xde, 0xb6, 0x1b, 0xba, 0x87, 0x24, 0xc6, 0xff, 0x5a, 0x9a, 0x5e,
	0xfe, 0xe9, 0x45, 0xfc, 0x6f, 0x6a, 0xca, 0xb3, 0x08, 0x0b, 0xa8, 0x78, 0xe9, 0x8f, 0xff, 0xad,
	0x34, 0x7a, 0xe9, 0x4d, 0x17, 0xfe, 0xad, 0x9a, 0x72, 0x1e, 0x2d, 0x64, 0xdd, 0xc0, 0xd2, 0xfd,
	0x3b, 0x89, 0xa3, 0xec, 0xe9, 0x15, 0xfe, 0xf7, 0x35, 0x45, 0x45, 0xd7, 0x73, 0x9b, 0x26, 0x76,
	0xfb, 0x29, 0x89, 0xad, 0x21, 0x71, 0x8f, 0x9b, 0xec, 0xed, 0x20, 0xfe, 0xed, 0x9a, 0x72, 0x19,
	0x29, 0xd9, 0x74, 0x64, 0x5f, 0xf0, 0xc4, 0xff, 0x41, 0x6a, 0x34, 0x7b, 0x5c, 0x82, 0xff, 0xa3,
	0x34, 0xb9, 0x76, 0x34, 0x8a, 0xc1, 0x47, 0x0a, 0xd3, 0x56, 0x1c, 0x0d, 0xf1, 0x7f, 0x2a, 0x71,
	0x42, 0xc3, 0x05, 0xfc, 0x3b, 0x52, 0x25, 0xf9, 0x6d, 0x3f, 0xfe, 0xcf, 0xa5, 0xbd, 0x4d, 0x4d,
	0x20, 0xfe, 0x2f, 0x92, 0x88, 0x14, 0x5f, 0x85, 0xe0, 0xff, 0x2a, 0x6d, 0xfd, 0x09, 0x0f, 0x17,
	0xf0, 0xef, 0x4a, 0x82, 0x52, 0x7e, 0x99, 0x80, 0xff, 0x9b, 0xd4, 0xc4, 0x84, 0xc7, 0x05, 0xf8,
	0xbf, 0x4b, 0x53, 0x38, 0xf1, 0x6e, 0x3f, 0xfe, 0x1f, 0xf2, 0x14, 0x66, 0x4f, 0x47, 0xf0, 0xff,
	0x94, 0xc4, 0x3f, 0xff, 0xec, 0x01, 0xff, 0x9e, 0x34, 0xb6, 0xe2, 0xbd, 0x7f, 0xfc, 0xbf, 0x24,
	0x01, 0x90, 0x6e, 0xdb, 0xe3, 0xff, 0x2d, 0x2f, 0x80, 0xf4, 0xca, 0x0a, 0xff, 0xbe, 0x24, 0x84,
	0x85, 0x2b, 0xe5, 0xf8, 0x93, 0x75, 0x79, 0xe7, 0x14, 0x5f, 0x3e, 0xe1, 0x2f, 0xac, 0x17, 0xfb,
	0xcd, 0xee, 0x8d, 0xe3, 0x2f, 0xaa, 0x4b, 0xcb, 0x24, 0xee, 0x79, 0xe3, 0x2f, 0xae, 0xe7, 0x47,
	0x99, 0xbf, 0x4c, 0x8d, 0xff, 0x48, 0x5d, 0xd2, 0xaf, 0xc5, 0x1b, 0xd4, 0xf8, 0x8f, 0x4a, 0xdd,
	0x49, 0x97, 0x6b, 0xf1, 0x97, 0xd4, 0xf3, 0x33, 0x54, 0xbc, 0x78, 0x8b, 0xbf, 0x54, 0x1a, 0x4a,
	0xf9, 0xbe, 0x26, 0xfe, 0xb2, 0x62, 0x7d, 0xe9, 0x2a, 0x1b, 0xfe, 0x63, 0x75, 0x69, 0xe9, 0xcb,
	0x37, 0xdd, 0xf0, 0x1f, 0xaf, 0x4b, 0xc6, 0x68, 0x7c, 0x17, 0x13, 0x7f, 0xb9, 0xd4, 0x74, 0xf1,
	0x52, 0x1b, 0xfe, 0x13, 0xd2, 0x44, 0x65, 0x37, 0xc4, 0xf0, 0x9f, 0xac, 0xe7, 0xe5, 0x64, 0x7c,
	0x61, 0x0b, 0x7f, 0x45, 0x3d, 0xaf, 0x1b, 0xf8, 0x4d, 0x2c, 0xfc, 0xa7, 0xa4, 0x79, 0xcd, 0xdf,
	0x2c, 0xc2, 0x7f, 0x5a, 0x9a, 0xd7, 0xd2, 0xa7, 0xdd, 0xf0, 0x9f, 0xa9, 0xe7, 0x4d, 0xd2, 0x94,
	0x97, 0x70, 0xf8, 0xcf, 0x4a, 0x7c, 0x66, 0xf7, 0x90, 0xf0, 0x57, 0x4a, 0x1d, 0xe7, 0xef, 0x1b,
	0xe1, 0xaf, 0x92, 0x66, 0xbd, 0xfc, 0x29, 0x2f, 0xfc, 0xd5, 0xf5, 0xbc, 0x70, 0xca, 0xdf, 0x58,
	0xc4, 0x5f, 0x23, 0xb1, 0x5d, 0xca, 0xd9, 0xe3, 0x3f, 0x27, 0x31, 0x94, 0x25, 0xdf, 0xf1, 0xd7,
	0x4a, 0xf5, 0x4a, 0x5f, 0x82, 0xc3, 0x7f, 0x5e, 0x62, 0x38, 0x9f, 0x6c, 0xc7, 0x5f, 0x27, 0x2d,
	0xf3, 0x84, 0x44, 0x3a, 0xfe, 0x7a, 0x49, 0x06, 0xa5, 0xcf, 0xc4, 0xe1, 0xbf, 0x20, 0x2f, 0xb4,
	0x38, 0xb9, 0x13, 0xfc, 0xfe, 0x45, 0x09, 0x5d, 0xfc, 0xe6, 0x05, 0xfe, 0x06, 0xa9, 0x65, 0xe9,
	0x2b, 0x89, 0xf8, 0x2f, 0x49, 0xc2, 0x95, 0xfb, 0xa6, 0x20, 0xfe, 0x46, 0x49, 0x4a, 0xc6, 0xdf,
	0x02, 0xc4, 0xdf, 0x24, 0xcd, 0x4e, 0x96, 0xe2, 0xc5, 0x7f, 0xb9, 0xae, 0xbc, 0x84, 0x6e, 0x4e,
	0x31, 0x68, 0xe3, 0x2f, 0x06, 0xe1, 0xbf, 0x22, 0x09, 0xc5, 0x94, 0x4c, 0x2d, 0xfe, 0xab, 0x67,
	0x53, 0xb1, 0x54, 0x2a, 0xfe, 0x6b, 0xf5, 0xbc, 0x37, 0x33, 0x2d, 0xdd, 0x89, 0xff, 0x7a, 0x3d,
	0xaf, 0x8d, 0x0a, 0x49, 0x43, 0xfc, 0x37, 0xa4, 0x65, 0x2d, 0x25, 0x06, 0xf1, 0x37, 0x4b, 0xb5,
	0x0b, 0x69, 0x2c, 0xfc, 0x2d, 0xf5, 0x89, 0xbe, 0x1b, 0xf8, 0x6d, 0x5b, 0x6d, 0x7b, 0x17, 0x7f,
	0xab, 0xb4, 0xa9, 0x78, 0xde, 0x0a, 0x7f, 0x5b, 0xbd, 0x6c, 0x34, 0xa4, 0x7c, 0x13, 0xfe, 0x9b,
	0xf2, 0xaa, 0x81, 0x7c, 0x6e, 0x93, 0xd4, 0xf5, 0xc0, 0x1f, 0xfc, 0x5b, 0x92, 0xa0, 0x49, 0xb2,
	0xfb, 0xb7, 0xa5, 0x05, 0xcd, 0xe5, 0xa8, 0xf0, 0xdf, 0x91, 0x86, 0x51, 0xc8, 0xd9, 0xe0, 0xbf,
	0x3b, 0x0d, 0x6b, 0x46, 0x01, 0xc1, 0xdf, 0x2e, 0xed, 0xb7, 0x72, 0xb2, 0x04, 0x7f, 0x87, 0xbc,
	0xa5, 0x8a, 0x59, 0x06, 0xfc, 0xf7, 0xa4, 0xfd, 0x28, 0x67, 0x0c, 0xf0, 0x77, 0x4a, 0x48, 0x39,
	0x42, 0xc7, 0x7f, 0xbf, 0x9e, 0xf7, 0x7d, 0x27, 0xc7, 0xd0, 0xf8, 0xbb, 0x64, 0x2d, 0x5c, 0x0a,
	0x90, 0xf1, 0x77, 0x4b, 0x82, 0x32, 0xed, 0x71, 0x16, 0xfe, 0x1e, 0x79, 0x31, 0x8b, 0x51, 0x30,
	0xfe, 0x07, 0xf5, 0xbc, 0xd3, 0x36, 0xe9, 0x61, 0x18, 0xfe, 0x87, 0x12, 0xc9, 0xa4, 0xeb, 0xff,
	0xf8, 0x7b, 0xa5, 0x5e, 0x4a, 0xa1, 0x2f, 0xfe, 0xbe, 0xba, 0x72, 0x1b, 0xa9, 0x05, 0xc5, 0x37,
	0x21, 0x0a, 0xc5, 0xff, 0xa8, 0x9e, 0x77, 0xdb, 0xc4, 0x6b, 0x79, 0xfc, 0xfd, 0x92, 0x78, 0xe4,
	0x43, 0x49, 0xfc, 0x8f, 0x65, 0x15, 0x95, 0x8b, 0xcd, 0xf0, 0x3f, 0xa9, 0xdf, 0xfd, 0xdd, 0x55,
	0xbe, 0xb1, 0xf3, 0x9f, 0x35, 0x57, 0x6e, 0xa2, 0x89, 0x9f, 0x39, 0xc7, 0xbf, 0x2f, 0xfe, 0x2a,
	0xca, 0x2a, 0xba, 0x24, 0x91, 0x6c, 0xe9, 0x66, 0xd7, 0x79, 0x60, 0xb4, 0xdb, 0xf8, 0x99, 0xc9,
	0xb8, 0x96, 0xde, 0xd9, 0xc3, 0x15, 0xe5, 0x39, 0xb4, 0x2a, 0xe1, 0xd6, 0x35, 0xd3, 0xd4, 0x9a,
	0x0f, 0x2c, 0x56, 0xb7, 0xaa, 0x5c, 0x45, 0x97, 0x25, 0xbc, 0xdd, 0x7d, 0xa8, 0x9b, 0x0c, 0x59,
	0x9b, 0x82, 0xa4, 0x2d, 0xd7, 0x4b, 0xc8, 0x0d, 0xc3, 0xb4, 0xec, 0xf5, 0x76, 0xb7, 0xdb, 0xc2,
	0x33, 0xca, 0x35, 0xb4, 0x22, 0x21, 0x2d, 0xdb, 0xd4, 0xb5, 0x07, 0xac, 0xdd, 0x73, 0xca, 0x4a,
	0x61, 0xbc, 0xeb, 0x3b, 0x7b, 0xeb, 0x5a, 0xf3, 0x01, 0x9e, 0x55, 0x2e, 0x21, 0x45, 0xc2, 0x68,
	0xfa, 0xa6, 0x61, 0xe1, 0x46, 0xa9, 0x3d, 0xfe, 0x66, 0x8f, 0xb6, 0x37, 0xa7, 0x5c, 0x47, 0x57,
	0x24, 0x6c, 0xb3, 0xbb, 0x63, 0x1a, 0xba, 0xe9, 0xb4, 0xbb, 0x96, 0x8d, 0x91, 0xa2, 0xa2, 0xe7,
	0x26, 0xa2, 0x4d, 0xdd, 0xea, 0x69, 0x0f, 0x3b, 0x7a, 0x0b, 0xcf, 0x97, 0x46, 0xb3, 0xd9, 0xde,
	0xeb, 0x6d, 0x39, 0x3b, 0x96, 0xde, 0xc2, 0x0b, 0xa5, 0x49, 0x34, 0x6c, 0x7d, 0xdb, 0xe9, 0xed,
	0x98, 0xcd, 0x2d, 0xcd, 0xd2, 0xf1, 0x62, 0x69, 0x3c, 0xcd, 0x6e, 0xa7, 0xa3, 0x37, 0x6d, 0xbc,
	0x54, 0x6a, 0xb6, 0x65, 0x58, 0x02, 0xb9, 0xac, 0xac, 0xa1, 0xbb, 0x53, 0x90, 0xce, 0x43, 0xcd,
	0xb0, 0x9d, 0x8d, 0x2e, 0xf0, 0x28, 0xe8, 0xb1, 0x72, 0x17, 0xbd, 0x34, 0x8d, 0xde, 0x36, 0xb6,
	0x75, 0xc7, 0xd4, 0xb7, 0x35, 0xa3, 0x63, 0x74, 0x36, 0xf1, 0x79, 0xe5, 0x75, 0xf4, 0xa1, 0xa7,
	0xa3, 0x75, 0x7a, 0xed, 0x1d, 0x53, 0x6b, 0x63, 0xa5, 0x24, 0x46, 0xe3, 0xae, 0x2f, 0x94, 0xe6,
	0xbf, 0xd7, 0xd6, 0xf6, 0x60, 0x82, 0xf5, 0x0d, 0x1b, 0x5f, 0x2c, 0xcd, 0x8f, 0xa5, 0x6d, 0x80,
	0xb0, 0x38, 0x6d, 0x5d, 0xdb, 0xd5, 0xf1, 0xb3, 0xe5, 0xd5, 0xdb, 0xe9, 0xe8, 0x4e, 0xcf, 0x68,
	0x3e, 0xd8, 0xe9, 0xe1, 0x4b, 0x93, 0xb1, 0xeb, 0x5d, 0xdb, 0x6e, 0xeb, 0xf8, 0xb2, 0x72, 0x05,
	0x3d, 0x5b, 0xd8, 0x1b, 0xf6, 0x96, 0xbe, 0xae, 0x6d, 0xe2, 0x95, 0xd2, 0xe4, 0x5a, 0x7a, 0xd3,
	0xd4, 0x6d, 0x6b, 0xab, 0xdb, 0xc3, 0x57, 0x94, 0x5b, 0xe8, 0xf9, 0xf2, 0x9a, 0x69, 0x3b, 0x76,
	0x57, 0xac, 0x5b, 0x0b, 0xaf, 0x2a, 0xcf, 0xa3, 0xab, 0x25, 0x22, 0xcb, 0x69, 0x76, 0xb7, 0xd7,
	0x0d, 0x10, 0x8b, 0xab, 0x25, 0xc9, 0xb2, 0x76, 0x7a, 0xba, 0xe9, 0x34, 0x4d, 0x5d, 0xef, 0x59,
	0xf8, 0x9a, 0xf2, 0x22, 0xba, 0x29, 0x2f, 0xbc, 0xd6, 0xb1, 0x41, 0x68, 0x1c, 0xad, 0x49, 0x6f,
	0xee, 0x42, 0x7b, 0xf8, 0x7a, 0x69, 0x66, 0x81, 0xac, 0xa7, 0xed, 0x58, 0x3a, 0x7e, 0xbe, 0xd4,
	0x43, 0xa7, 0x4b, 0x31, 0x16, 0x9d, 0xda, 0x1b, 0x65, 0xd1, 0x16, 0x55, 0xf7, 0x74, 0x1b, 0xdf,
	0x54, 0x2e, 0xa3, 0x0b, 0xf2, 0xba, 0x68, 0x54, 0x64, 0xd5, 0x92, 0xcc, 0xef, 0x74, 0x28, 0x0a,
	0x64, 0xbf, 0x63, 0xb7, 0xba, 0x0f, 0x3b, 0xf8, 0x56, 0x69, 0x6a, 0x39, 0x4d, 0x0b, 0xbf, 0x50,
	0x5a, 0x51, 0x98, 0xb8, 0x31, 0xfe, 0xc5, 0xd2, 0x88, 0xf6, 0xba, 0x3b, 0x1c, 0xf7, 0x92, 0x72,
	0x03, 0x5d, 0x2b, 0xb1, 0xcc, 0xab, 0xda, 0xba, 0xb6, 0x8d, 0x6f, 0x97, 0x98, 0xdb, 0xed, 0x1a,
	0x4d, 0xdd, 0xb1, 0xf5, 0x77, 0x6d, 0x67, 0x5d, 0xeb, 0xc0, 0xcc, 0xbf, 0x5c, 0xda, 0x1c, 0x56,
	0x4f, 0x6f, 0xda, 0x9a, 0xdd, 0x35, 0x2d, 0xe7, 0xa1, 0x66, 0x37, 0xb7, 0xe8, 0x3b, 0xa6, 0x2d,
	0xc3, 0x72, 0x36, 0xb5, 0x6d, 0x1d, 0xdf, 0x2d, 0xf5, 0x6a, 0xea, 0xbd, 0xae, 0x69, 0x83, 0x9c,
	0x1b, 0x9d, 0x96, 0x6e, 0xe2, 0x57, 0x4a, 0x3c, 0x83, 0x78, 0xb3, 0x15, 0x7a, 0xb5, 0xa4, 0x77,
	0x6c, 0x6d, 0xa7, 0x63, 0xe3, 0x0f, 0x95, 0xe6, 0xd7, 0xd4, 0x3a, 0xad, 0xee, 0x36, 0x5e, 0x2b,
	0x6d, 0x79, 0xb3, 0xe5, 0xd8, 0x3b, 0x66, 0x07, 0x7f, 0xb8, 0xc4, 0x48, 0xcb, 0xec, 0xf6, 0x1c,
	0x53, 0xb3, 0x41, 0xa6, 0x3b, 0x3b, 0x16, 0x7e, 0x5d, 0xb9, 0x89, 0xae, 0x17, 0x96, 0xdc, 0x59,
	0xd7, 0x40, 0xdc, 0x9d, 0x5e, 0xd7, 0xe8, 0xd8, 0x16, 0xbe, 0x57, 0x5a, 0xf6, 0x96, 0xde, 0x31,
	0xf4, 0x16, 0x57, 0x87, 0x6f, 0x94, 0x15, 0x52, 0x67, 0xa3, 0x6b, 0x6e, 0x6b, 0x20, 0x73, 0x5a,
	0x1b, 0xbf, 0x59, 0xaa, 0x4e, 0xeb, 0x39, 0x96, 0xdd, 0x6d, 0xeb, 0x1d, 0xfc, 0x56, 0x09, 0xcd,
	0xb5, 0x69, 0x53, 0xeb, 0xb4, 0xf6, 0xf0, 0xdb, 0xa5, 0x0d, 0x49, 0xb7, 0xce, 0xa6, 0xb1, 0x61,
	0xeb, 0x2d, 0xfc, 0x11, 0xe5, 0x36, 0xba, 0x35, 0xd9, 0x12, 0x39, 0x0f, 0x0d, 0x7b, 0xcb, 0xd9,
	0x34, 0x75, 0x7d, 0xd7, 0x68, 0xe3, 0x4f, 0x53, 0xee, 0xa0, 0x17, 0x64, 0xc2, 0x6e, 0xbb, 0xd5,
	0xdd, 0xb1, 0x33, 0x2b, 0x62, 0xd9, 0x66, 0x77, 0x4f, 0x6f, 0xe1, 0x4f, 0x2f, 0x37, 0xc9, 0x29,
	0x1f, 0x6a, 0xed, 0x76, 0x8e, 0xf0, 0xbe, 0xf2, 0x12, 0x52, 0xa7, 0x13, 0x6e, 0x18, 0x1d, 0xc3,
	0xda, 0xd2, 0x5b, 0xf8, 0xa3, 0xca, 0xcb, 0xe8, 0xc5, 0x69, 0xea, 0xca, 0x69, 0x1b, 0xdb, 0x86,
	0xad, 0xb7, 0x28, 0xdf, 0xf8, 0x33, 0x4a, 0x8a, 0x52, 0x5b, 0x87, 0x25, 0xee, 0x48, 0x64, 0x8e,
	0xfe, 0x6e, 0xaf, 0xad, 0x75, 0xe8, 0xfc, 0xe2, 0x8f, 0x97, 0x06, 0x96, 0xd3, 0xad, 0x52, 0xe3,
	0x9f, 0x50, 0xde, 0x40, 0x1f, 0x96, 0x28, 0xdb, 0xdd, 0x87, 0x4e, 0xcf, 0x34, 0xba, 0xa6, 0x61,
	0xef, 0x81, 0x9a, 0xe9, 0xb5, 0x75, 0xa0, 0xce, 0x37, 0xaf, 0x29, 0xaf, 0xa2, 0x3b, 0x45, 0x3d,
	0x6c, 0xee, 0x18, 0xf6, 0xb6, 0xde, 0xb1, 0x4b, 0xc2, 0xb4, 0x5e, 0xe2, 0x7f, 0xc3, 0xec, 0x5a,
	0xb6, 0xb1, 0xbb, 0x63, 0x39, 0xd6, 0x16, 0x53, 0xf0, 0xeb, 0xdd, 0xae, 0x65, 0xeb, 0x26, 0xd5,
	0x49, 0xbb, 0x3a, 0x6e, 0x96, 0x24, 0x34, 0x3f, 0x3b, 0xda, 0xc6, 0x03, 0x6c, 0x28, 0xf7, 0xd0,
	0xda, 0x54, 0x8a, 0xf1, 0x68, 0xf5, 0x96, 0x63, 0x77, 0xbb, 0x4e, 0xbb, 0xdb, 0xd9, 0xc4, 0x9f,
	0x59, 0x92, 0x6a, 0x5e, 0x87, 0xcf, 0xa7, 0xde, 0xc2, 0x0f, 0x4a, 0xea, 0xb2, 0x48, 0x42, 0x7b,
	0x6f, 0x2b, 0x1f, 0x41, 0x6f, 0x9c, 0x4d, 0x36, 0x99, 0x85, 0xed, 0x92, 0xce, 0x7f, 0x08, 0x52,
	0xd9, 0xe9, 0xda, 0xce, 0xba, 0xee, 0x58, 0xcd, 0xae, 0xa9, 0xb7, 0x70, 0xa7, 0x64, 0x45, 0xcb,
	0x44, 0xb0, 0xcb, 0x1f, 0xe8, 0x2d, 0xdc, 0x55, 0x5e, 0x41, 0xb7, 0x9f, 0x44, 0xdb, 0xd1, 0xed,
	0x87, 0x5d, 0xf3, 0x01, 0xee, 0x95, 0x26, 0x6d, 0x3a, 0xb1, 0xe8, 0xe0, 0x9d, 0x92, 0xa0, 0x36,
	0xb5, 0x8e, 0xf3, 0xce, 0x8e, 0x61, 0xd3, 0xbd, 0x04, 0x92, 0xcd, 0x07, 0x8d, 0x4d, 0xe5, 0x3e,
	0x7a, 0xbb, 0xa8, 0x8a, 0x1e, 0xe8, 0x2d, 0xaa, 0xfe, 0x1c, 0xcb, 0x86, 0xbe, 0x78, 0x27, 0xd4,
	0xea, 0x9a, 0x96, 0xb3, 0xa9, 0xdb, 0xe0, 0x01, 0x59, 0xd8, 0x52, 0x3e, 0x0d, 0xbd, 0x39, 0x51,
	0xc8, 0x79, 0x1b, 0xeb, 0xfa, 0x46, 0xd7, 0xe4, 0x1e, 0x9c, 0x43, 0x5d, 0x38, 0xa7, 0xa7, 0x99,
	0xf6, 0x1e, 0xb6, 0x4b, 0xab, 0x0a, 0x42, 0xab, 0x77, 0x5a, 0xc6, 0xce, 0xb6, 0xd3, 0xd6, 0x77,
	0xf5, 0x36, 0xde, 0x29, 0x4d, 0xe8, 0xae, 0xd1, 0xb4, 0xbb, 0xe6, 0x9e, 0xd3, 0x33, 0xf5, 0x96,
	0xc1, 0xec, 0x20, 0x73, 0xff, 0xf0, 0x6e, 0x49, 0xf3, 0x6b, 0x96, 0xa5, 0x59, 0x96, 0xd1, 0x71,
	0xb4, 0x4e, 0xa7, 0xbb, 0xd3, 0x69, 0xea, 0xf8, 0x61, 0xa9, 0xcb, 0x8c, 0xc6, 0xda, 0x69, 0x36,
	0x75, 0xcb, 0xc2, 0xef, 0x96, 0x24, 0x38, 0x23, 0x61, 0x7a, 0x12, 0xef, 0x95, 0x64, 0x68, 0x12,
	0x53, 0x46, 0x67, 0xb3, 0xad, 0x83, 0xb9, 0x36, 0xc1, 0x63, 0xdb, 0x30, 0xcc, 0x6d, 0xfc, 0x59,
	0x25, 0xe5, 0xa7, 0x6f, 0x6c, 0x18, 0x9b, 0x7b, 0xcc, 0xd3, 0xfc, 0xff, 0x4b, 0x02, 0x51, 0xb2,
	0x5c, 0xf4, 0x43, 0x52, 0x1b, 0xed, 0xee, 0x43, 0xfc, 0xd9, 0xa5, 0xc1, 0xee, 0xe9, 0x9a, 0xe9,
	0xac, 0xeb, 0x9a, 0x65, 0xd3, 0xe6, 0xf4, 0x16, 0xfe, 0x9c, 0xf2, 0x5e, 0x2c, 0x58, 0xe9, 0x3f,
	0x54, 0xd2, 0xf5, 0xcd, 0xae, 0xd1, 0x01, 0x1b, 0xb8, 0xa9, 0x83, 0x3c, 0x3b, 0x25, 0xa1, 0xa7,
	0x0a, 0xab, 0xd3, 0xdd, 0x36, 0x3a, 0x1a, 0x6c, 0x8f, 0x75, 0xad, 0x83, 0x3f, 0xb7, 0x34, 0x2a,
	0x4a, 0xc4, 0x6d, 0xad, 0x5b, 0x72, 0x83, 0x04, 0x96, 0xf1, 0x81, 0xf7, 0x4b, 0x3c, 0x98, 0xc6,
	0xae, 0x6e, 0x3a, 0x3d, 0xcd, 0xe8, 0x80, 0x4d, 0xe8, 0x97, 0x4c, 0xab, 0x05, 0x72, 0x4c, 0xdd,
	0x01, 0xaf, 0xec, 0x1c, 0x6e, 0x99, 0x46, 0x47, 0x17, 0x33, 0x40, 0x4a, 0xb3, 0x44, 0x47, 0xe6,
	0xd8, 0xdd, 0x07, 0x7a, 0x07, 0x8c, 0x7e, 0xc7, 0xc6, 0x07, 0x25, 0x4f, 0x0f, 0xe4, 0x96, 0x11,
	0xe2, 0x43, 0xe5, 0x05, 0x74, 0x43, 0x36, 0xa7, 0xfa, 0x43, 0xa1, 0x32, 0x32, 0xeb, 0x7f, 0x74,
	0xf7, 0x3b, 0x2a, 0x3c, 0xbb, 0x5b, 0xb4, 0xb6, 0x8e, 0xa9, 0x6b, 0x56, 0xb7, 0x63, 0x81, 0x76,
	0x2a, 0xe1, 0x1e, 0x9a, 0xdd, 0xce, 0xa6, 0xd3, 0xee, 0xae, 0xaf, 0xef, 0xd1, 0x57, 0xd3, 0xb8,
	0x02, 0xfc, 0x96, 0xc8, 0x7a, 0x26, 0x28, 0xd7, 0x26, 0x75, 0x5b, 0x2d, 0x5c, 0x85, 0x35, 0x29,
	0xd1, 0x34, 0xb7, 0x74, 0xcd, 0xb6, 0x1c, 0xbd, 0xa3, 0xad, 0xc3, 0xc0, 0x6b, 0x20, 0xe7, 0x25,
	0xa2, 0xbc, 0x81, 0xc0, 0xf5, 0xbb, 0x3f, 0x54, 0xe1, 0x19, 0x03, 0x3a, 0x40, 0xc9, 0xca, 0x43,
	0x75, 0x00, 0x38, 0xcd, 0x6e, 0xb7, 0x57, 0x1c, 0xd1, 0x4e, 0x5b, 0xb7, 0x70, 0x05, 0xd8, 0xa0,
	0x24, 0x63, 0x9b, 0x90, 0x6d, 0x7c, 0x31, 0x31, 0x55, 0xf0, 0x64, 0x28, 0x11, 0xd7, 0x05, 0x19,
	0xa6, 0x06, 0xc2, 0x3e, 0xee, 0x41, 0x32, 0x5d, 0x3d, 0xd8, 0x6d, 0xbb, 0xfa, 0x98, 0x18, 0x82,
	0xff, 0x9b, 0x8c, 0x78, 0xc7, 0xb2, 0xbb, 0xdb, 0x4c, 0x2d, 0xf5, 0xf4, 0x8e, 0xd6, 0xb6, 0xf7,
	0xc6, 0x64, 0x33, 0x77, 0x3f, 0x59, 0xe5, 0x79, 0x88, 0xd2, 0x83, 0x74, 0xf0, 0xc1, 0xca, 0x4f,
	0xd2, 0x71, 0x45, 0x79, 0x16, 0x9d, 0x97, 0xe0, 0xdb, 0x5a, 0x47, 0xc3, 0x55, 0xf0, 0x5e, 0x25,
	0x70, 0xb3, 0x0b, 0xce, 0xc0, 0xc3, 0x0e, 0xae, 0x95, 0x5a, 0xd2, 0x3b, 0xfa, 0x36, 0x84, 0xac,
	0xab, 0xe8, 0x92, 0x04, 0xdf, 0xe9, 0xb4, 0x75, 0xcd, 0x84, 0x3d, 0x30, 0x03, 0x22, 0x26, 0xe1,
	0x8c, 0x0e, 0x84, 0xa4, 0x3d, 0x08, 0x4b, 0x69, 0xc0, 0x5a, 0x40, 0x5a, 0xb6, 0x66, 0x6d, 0xe1,
	0xd9, 0x52, 0x93, 0xdd, 0x0e, 0x8f, 0x2e, 0x71, 0xa3, 0xc4, 0xb8, 0xd6, 0x6e, 0xef, 0xe1, 0xb9,
	0xbb, 0xdf, 0x2b, 0x16, 0xd5, 0xd4, 0x41, 0x4c, 0x1d, 0xcb, 0x06, 0x7b, 0xae, 0xef, 0xea, 0x1d,
	0x1b, 0x1c, 0x9c, 0x29, 0x28, 0xa1, 0xe8, 0x35, 0xd3, 0xc6, 0x15, 0xb0, 0x1b, 0xd3, 0xe8, 0x28,
	0x09, 0x74, 0xb7, 0xd5, 0x35, 0x3b, 0xb8, 0x0a, 0xce, 0xd5, 0x34, 0xd2, 0x9c, 0xc2, 0xc7, 0x35,
	0xd8, 0x47, 0x53, 0xdb, 0xdc, 0xea, 0x3e, 0x6c, 0x42, 0xac, 0x5b, 0xbf, 0xfb, 0x1b, 0x15, 0x74,
	0x61, 0xc2, 0x07, 0x51, 0x95, 0x8b, 0xa8, 0xf4, 0x49, 0x54, 0xfc, 0x0c, 0x2c, 0x52, 0x11, 0xea,
	0x6c, 0xef, 0xd8, 0xb0, 0x8f, 0x24, 0x94, 0xd6, 0x6a, 0x39, 0x9b, 0xba, 0x65, 0xef, 0x98, 0x3a,
	0xae, 0x82, 0xb6, 0x1a, 0xa3, 0x4c, 0x7d, 0xbb, 0xbb, 0xab, 0x67, 0x58, 0xba, 0x6f, 0x4a, 0x58,
	0xf0, 0xff, 0x38, 0x85, 0xc5, 0x16, 0x7a, 0x4c, 0xb2, 0xa1, 0xb5, 0xc6, 0xd5, 0xcf, 0x81, 0xa0,
	0x96, 0x58, 0x6a, 0xb6, 0x0d, 0xbd, 0x63, 0x5b, 0x46, 0x4b, 0xe7, 0x7b, 0x67, 0xf6, 0xee, 0xb7,
	0xcf, 0xf0, 0x24, 0x9f, 0xfc, 0x25, 0x40, 0x88, 0x08, 0x26, 0x7c, 0x1b, 0x10, 0x3f, 0x33, 0x01,
	0xc1, 0x53, 0x30, 0x57, 0xd1, 0xe5, 0x02, 0xa2, 0x69, 0x1a, 0xb6, 0xd1, 0xd4, 0xda, 0xb8, 0x0a,
	0x32, 0x52, 0x40, 0xbe, 0xdb, 0xc3, 0x35, 0x60, 0xb2, 0x00, 0xa6, 0xfe, 0x1e, 0xf0, 0x0b, 0x2e,
	0xb1, 0xb6, 0xad, 0x6d, 0xea, 0xb8, 0x3e, 0xa1, 0xcf, 0x6d, 0xc3, 0xb2, 0xf0, 0x0c, 0x4c, 0x6e,
	0x91, 0x19, 0x56, 0x87, 0xca, 0x72, 0x01, 0xa5, 0xef, 0x6a, 0x2d, 0x1d, 0xcf, 0x4e, 0xc0, 0xac,
	0xb7, 0xbb, 0xcd, 0x07, 0xb8, 0x01, 0x62, 0x39, 0x91, 0x9d, 0x5e, 0xd7, 0xb0, 0xba, 0x1d, 0xd1,
	0xf6, 0xdc, 0x04, 0x7e, 0xb6, 0x74, 0xad, 0x8d, 0xd1, 0x84, 0x39, 0x80, 0x5d, 0x0c, 0xcb, 0x8e,
	0xe7, 0x61, 0xb9, 0x27, 0x21, 0xa9, 0xef, 0xb2, 0x00, 0xcb, 0x5d, 0xc0, 0xb6, 0xc1, 0x82, 0x6e,
	0x19, 0xb6, 0xa3, 0x6b, 0x66, 0x7b, 0x0f, 0x2f, 0x9e, 0x45, 0xd2, 0x6c, 0x77, 0x2d, 0x1d, 0x2f,
	0x81, 0x9d, 0x9d, 0x46, 0x42, 0xa7, 0x6c, 0x79, 0x02, 0xc5, 0xb6, 0xb6, 0x09, 0xab, 0xc4, 0x67,
	0x01, 0x83, 0xe6, 0x2f, 0x50, 0x18, 0x9d, 0x26, 0x18, 0xda, 0x4d, 0x31, 0x03, 0xe7, 0x27, 0xd0,
	0x74, 0x77, 0xec, 0xcd, 0x6e, 0x8e, 0x46, 0x99, 0xc0, 0x6e, 0xcb, 0xb0, 0xc0, 0x2a, 0x38, 0xa6,
	0x6e, 0x19, 0x96, 0x8d, 0x2f, 0x4c, 0x58, 0x8a, 0x96, 0xae, 0xd9, 0x5b, 0xf8, 0x22, 0x88, 0xf6,
	0xa4, 0x45, 0xd2, 0x5b, 0xf8, 0xd9, 0xbb, 0xc7, 0x3c, 0xb9, 0x98, 0xff, 0xcc, 0x15, 0xfb, 0x18,
	0x76, 0xe9, 0x43, 0x57, 0xf8, 0x19, 0x98, 0x76, 0x19, 0xb1, 0xae, 0x59, 0x3a, 0xcd, 0x0e, 0x99,
	0xb8, 0x02, 0x3e, 0x81, 0x8c, 0xdd, 0x35, 0x2c, 0x03, 0x78, 0x64, 0x04, 0xd5, 0xbb, 0x5f, 0x58,
	0xe7, 0x9b, 0xac, 0xf4, 0x7e, 0x19, 0xf4, 0x6f, 0xf9, 0x05, 0x33, 0x7e, 0x06, 0xe2, 0x4e, 0x19,
	0xbe, 0xde, 0xb5, 0xc1, 0x58, 0xb4, 0xb5, 0x0e, 0x68, 0x84, 0xd5, 0x62, 0x83, 0xdb, 0x46, 0x8b,
	0xe1, 0xaa, 0x65, 0x9c, 0x0d, 0x36, 0x09, 0x70, 0x35, 0x58, 0x39, 0x19, 0x67, 0x6a, 0x2d, 0x43,
	0xeb, 0xd8, 0xce, 0x67, 0xee, 0x80, 0x87, 0x87, 0xeb, 0xe5, 0x8e, 0x5b, 0x86, 0xa9, 0x0b, 0xf4,
	0x0c, 0x2c, 0xda, 0xe4, 0x06, 0xb4, 0x4e, 0x93, 0x2a, 0x06, 0x7c, 0x0e, 0xe6, 0x63, 0x42, 0x13,
	0x19, 0xc1, 0x6c, 0xa6, 0x57, 0x4a, 0x8d, 0xb0, 0xb4, 0x94, 0x43, 0xf3, 0x52, 0x8d, 0x72, 0x5f,
	0xb4, 0x9d, 0x3c, 0x0d, 0xdd, 0x46, 0x85, 0xa6, 0xc0, 0xdf, 0xc2, 0x28, 0x53, 0x8c, 0x63, 0x04,
	0x5f, 0x69, 0xc3, 0xc6, 0xf3, 0xe0, 0x69, 0x4d, 0xe6, 0x00, 0x16, 0x16, 0x2f, 0xc0, 0x26, 0x9c,
	0xd0, 0xf5, 0x3a, 0xcb, 0x61, 0x96, 0x26, 0x78, 0x03, 0x7c, 0x3f, 0xcd, 0xe8, 0xe0, 0xa5, 0x32,
	0x3f, 0x5d, 0x7b, 0x4b, 0x37, 0xf1, 0xf2, 0xdd, 0xdf, 0xac, 0x70, 0x86, 0x84, 0x9d, 0xb3, 0x35,
	0x13, 0xc2, 0x0e, 0x6a, 0xcf, 0xaf, 0x4d, 0xc6, 0x71, 0x59, 0x98, 0x82, 0xb5, 0xf4, 0xf6, 0x06,
	0xae, 0x64, 0x3a, 0xbe, 0x80, 0x05, 0x0b, 0xca, 0x62, 0xeb, 0x6a, 0x36, 0x91, 0x93, 0x48, 0x68,
	0x82, 0x0e, 0xd7, 0xa6, 0xd1, 0x50, 0x7f, 0x80, 0xb5, 0x53, 0x07, 0x27, 0x69, 0x3a, 0x0d, 0x6b,
	0x68, 0xe6, 0xee, 0xd7, 0x36, 0xd0, 0xa2, 0xf4, 0xb8, 0x05, 0x76, 0xe8, 0xa4, 0xf7, 0x2e, 0xf8,
	0x19, 0xe5, 0x16, 0x7a, 0xae, 0x88, 0xd1, 0x1e, 0x13, 0x7b, 0xfc, 0xcf, 0x10, 0xf1, 0x0f, 0x2f,
	0x2b, 0xb7, 0x91, 0x5a, 0x24, 0x5a, 0x77, 0xd3, 0x34, 0x20, 0x5b, 0xa3, 0xf0, 0x50, 0xbc, 0x89,
	0xc7, 0x3f, 0x32, 0x91, 0x90, 0xbe, 0xeb, 0x27, 0xf1, 0x16, 0x09, 0xfc, 0xc7, 0x9c, 0xf0, 0x47,
	0x27, 0x13, 0x8e, 0x82, 0xc0, 0x0f, 0x0f, 0xd7, 0x03, 0xd7, 0x23, 0x9c, 0xf0, 0xc7, 0x96, 0x95,
	0x57, 0xd1, 0xed, 0x52, 0xd7, 0x24, 0x4e, 0x48, 0x7c, 0x4c, 0xe2, 0xa4, 0xe9, 0x06, 0x41, 0xd3,
	0x4d, 0x52, 0xda, 0x07, 0xfe, 0xf1, 0x65, 0xe5, 0x0d, 0xb4, 0x76, 0x36, 0x35, 0xa0, 0x48, 0xb2,
	0xe5, 0xa7, 0x1a, 0xfb, 0xe2, 0x02, 0xfe, 0x89, 0x65, 0xe5, 0x35, 0xf4, 0xca, 0xd9, 0x95, 0xe8,
	0xb7, 0x56, 0x76, 0x42, 0x3f, 0x85, 0x8a, 0xf8, 0x27, 0x9f, 0xb2, 0x1b, 0xf6, 0xc9, 0xaa, 0x84,
	0x1d, 0x88, 0xfd, 0xd4, 0xb2, 0xf2, 0x26, 0xfa, 0xf0, 0x53, 0x74, 0x23, 0xd5, 0xfa, 0xe9, 0x65,
	0xe5, 0x2e, 0x7a, 0xf1, 0xac, 0xa9, 0x1f, 0x8f, 0xfe, 0x67, 0x96, 0x95, 0x7b, 0xe8, 0x43, 0x67,
	0xd1, 0xf6, 0xa2, 0x94, 0x84, 0xa9, 0xef, 0x06, 0x2d, 0xfe, 0xe8, 0x0a, 0xff, 0xec, 0xe4, 0xc1,
	0xe7, 0xea, 0xf0, 0x69, 0xca, 0x6a, 0xfc, 0xdc, 0x44, 0x8e, 0xf2, 0x6b, 0xdc, 0x8b, 0xa3, 0x3e,
	0xe3, 0xe8, 0xe7, 0x97, 0x95, 0x35, 0xf4, 0xf2, 0x59, 0xb4, 0xf4, 0xb8, 0x31, 0xa3, 0xff, 0x85,
	0x65, 0xe5, 0x75, 0xf4, 0xea, 0x93, 0xe8, 0xa5, 0xd5, 0xfb, 0xc5, 0x89, 0x6b, 0x91, 0xaf, 0x22,
	0xad, 0x1d, 0xeb, 0xe7, 0x97, 0x26, 0x8f, 0x21, 0x27, 0x7e, 0xe3, 0x59, 0xfd, 0xe5, 0x27, 0xd2,
	0xd2, 0x8b, 0x67, 0x94, 0xf6, 0x57, 0x26, 0xae, 0x71, 0x9e, 0x96, 0xb3, 0xcd, 0x9e, 0xfe, 0x02,
	0x82, 0x78, 0xf8, 0x57, 0x97, 0x95, 0x8f, 0xa0, 0x7b, 0x4f, 0x51, 0x8b, 0xed, 0x09, 0x4d, 0x3c,
	0xf6, 0xc7, 0xbf, 0x36, 0x71, 0xf1, 0xf2, 0x15, 0x01, 0xb1, 0x3e, 0x3a, 0x38, 0x10, 0xb3, 0xf5,
	0xeb, 0xcb, 0x77, 0xbf, 0xa5, 0x8e, 0x2e, 0xeb, 0xec, 0x84, 0x6f, 0x37, 0xf2, 0xfb, 0xf4, 0x5f,
	0x8d, 0x90, 0x90, 0xbd, 0xb6, 0x59, 0x42, 0xe8, 0xb8, 0xb7, 0xdb, 0xb6, 0x84, 0x6a, 0x58, 0x45,
	0x97, 0x58, 0xb9, 0x45, 0x42, 0x9f, 0x78, 0xcd, 0x23, 0x37, 0x5d, 0x77, 0xc3, 0x30, 0xfb, 0xa7,
	0x15, 0x39, 0x5c, 0xcf, 0x8d, 0xd3, 0x90, 0xc4, 0xb8, 0x0a, 0xce, 0x57, 0x1e, 0xb1, 0xd5, 0xb6,
	0x77, 0x6d, 0x37, 0x38, 0x26, 0x71, 0x27, 0x4a, 0xb3, 0xd3, 0x55, 0xe6, 0xbf, 0x17, 0xe9, 0x3a,
	0x11, 0xa3, 0xe4, 0x57, 0x39, 0x5b, 0xb8, 0xae, 0xdc, 0x41, 0x2f, 0x4c, 0x6d, 0x6d, 0x5d, 0x5c,
	0x32, 0x25, 0x31, 0x9e, 0x01, 0xa3, 0x99, 0xa7, 0xb4, 0x89, 0x3b, 0x18, 0x77, 0x77, 0xae, 0xc8,
	0xaf, 0x95, 0x8e, 0x3c, 0x12, 0xa6, 0xb8, 0xa1, 0x60, 0xb4, 0x90, 0x47, 0xe0, 0x4f, 0x8c, 0x47,
	0xa0, 0x05, 0x41, 0xf4, 0x68, 0xdc, 0xa5, 0x91, 0xe4, 0x7b, 0xd4, 0xa8, 0x47, 0x32, 0xa6, 0x6b,
	0x46, 0x79, 0xec, 0x3a, 0x78, 0x15, 0x39, 0xac, 0x16, 0x04, 0xf4, 0x52, 0x44, 0x73, 0xcc, 0x27,
	0x85, 0x73, 0x3e, 0xec, 0x88, 0xde, 0x4f, 0xc2, 0xad, 0x42, 0xa3, 0x1b, 0x24, 0x47, 0x84, 0xf5,
	0x02, 0x56, 0xb0, 0xc5, 0xea, 0x6e, 0x94, 0x18, 0x72, 0xfb, 0x47, 0x5b, 0xc4, 0xa5, 0x6f, 0x8c,
	0xf0, 0xe6, 0x78, 0x06, 0x58, 0xc7, 0xee, 0x80, 0x50, 0xc4, 0x56, 0x11, 0x71, 0x14, 0x3d, 0xea,
	0xbb, 0x09, 0xc1, 0xc6, 0xdd, 0x75, 0x84, 0x8b, 0xaf, 0x74, 0x14, 0x05, 0x15, 0xde, 0xe9, 0x30,
	0x39, 0x01, 0x18, 0x7d, 0x03, 0x9d, 0xc6, 0xc4, 0x3d, 0x76, 0x0e, 0x23, 0x2f, 0xf0, 0x8f, 0x09,
	0xae, 0xac, 0xcf, 0x6c, 0x55, 0x3e, 0x59, 0x79, 0xe6, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc9,
	0x57, 0x85, 0x2e, 0x71, 0x7c, 0x00, 0x00,
}
